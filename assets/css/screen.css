@charset "UTF-8";
@import url(https://fonts.googleapis.com/css?family=Ubuntu:400);
@import url(https://fonts.googleapis.com/css?family=Open+Sans);
button, input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #4bc3e2;
  border: 0;
  border-radius: 3px;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-family: "Open Sans", sans-serif;
  font-size: 22.4px;
  -webkit-font-smoothing: antialiased;
  font-weight: 600;
  line-height: 1;
  padding: 0.5em 1em;
  text-decoration: none;
  transition: background-color 150ms ease;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap; }
  button:hover, button:focus, input[type="button"]:hover, input[type="button"]:focus, input[type="reset"]:hover, input[type="reset"]:focus, input[type="submit"]:hover, input[type="submit"]:focus {
    background-color: #3c9cb5;
    color: #fff; }
  button:disabled, input[type="button"]:disabled, input[type="reset"]:disabled, input[type="submit"]:disabled {
    cursor: not-allowed;
    opacity: 0.5; }
    button:disabled:hover, input[type="button"]:disabled:hover, input[type="reset"]:disabled:hover, input[type="submit"]:disabled:hover {
      background-color: #4bc3e2; }

fieldset {
  background-color: transparent;
  border: 2px solid #ccc;
  margin: 0 0 0.5em;
  padding: 1em; }

input,
label,
select {
  display: block;
  font-family: "Open Sans", sans-serif;
  font-size: 22.4px; }

label {
  font-weight: 600;
  margin-bottom: 0.25em; }
  label.required::after {
    content: "*"; }
  label abbr {
    display: none; }

input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="email"], input[type="month"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="time"], input[type="url"], input[type="week"], input:not([type]), textarea,
select[multiple=multiple] {
  background-color: #f4f4f4;
  border: 2px solid #ccc;
  border-radius: 3px;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.02);
  box-sizing: border-box;
  font-family: "Open Sans", sans-serif;
  font-size: 22.4px;
  margin-bottom: 0.5em;
  padding: 0.33333em;
  transition: border-color 150ms ease;
  width: 100%; }
  input[type="color"]:hover, input[type="date"]:hover, input[type="datetime"]:hover, input[type="datetime-local"]:hover, input[type="email"]:hover, input[type="month"]:hover, input[type="number"]:hover, input[type="password"]:hover, input[type="search"]:hover, input[type="tel"]:hover, input[type="text"]:hover, input[type="time"]:hover, input[type="url"]:hover, input[type="week"]:hover, input:not([type]):hover, textarea:hover,
  select[multiple=multiple]:hover {
    border-color: #a3a3a3; }
  input[type="color"]:focus, input[type="date"]:focus, input[type="datetime"]:focus, input[type="datetime-local"]:focus, input[type="email"]:focus, input[type="month"]:focus, input[type="number"]:focus, input[type="password"]:focus, input[type="search"]:focus, input[type="tel"]:focus, input[type="text"]:focus, input[type="time"]:focus, input[type="url"]:focus, input[type="week"]:focus, input:not([type]):focus, textarea:focus,
  select[multiple=multiple]:focus {
    border-color: #4bc3e2;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.02), 0 0 5px rgba(53, 188, 222, 0.6);
    outline: none; }
  input[type="color"]:disabled, input[type="date"]:disabled, input[type="datetime"]:disabled, input[type="datetime-local"]:disabled, input[type="email"]:disabled, input[type="month"]:disabled, input[type="number"]:disabled, input[type="password"]:disabled, input[type="search"]:disabled, input[type="tel"]:disabled, input[type="text"]:disabled, input[type="time"]:disabled, input[type="url"]:disabled, input[type="week"]:disabled, input:not([type]):disabled, textarea:disabled,
  select[multiple=multiple]:disabled {
    background-color: #e8e8e8;
    cursor: not-allowed; }
    input[type="color"]:disabled:hover, input[type="date"]:disabled:hover, input[type="datetime"]:disabled:hover, input[type="datetime-local"]:disabled:hover, input[type="email"]:disabled:hover, input[type="month"]:disabled:hover, input[type="number"]:disabled:hover, input[type="password"]:disabled:hover, input[type="search"]:disabled:hover, input[type="tel"]:disabled:hover, input[type="text"]:disabled:hover, input[type="time"]:disabled:hover, input[type="url"]:disabled:hover, input[type="week"]:disabled:hover, input:not([type]):disabled:hover, textarea:disabled:hover,
    select[multiple=multiple]:disabled:hover {
      border: 2px solid #ccc; }

textarea {
  resize: vertical; }

input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }

input[type="checkbox"],
input[type="radio"] {
  display: inline;
  margin-right: 0.25em; }
  input[type="checkbox"] + label,
  input[type="radio"] + label {
    display: inline-block; }

input[type="file"] {
  margin-bottom: 0.5em;
  width: 100%; }

select {
  margin-bottom: 1em;
  max-width: 100%;
  width: auto; }

/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
.clearfix::after {
  clear: both;
  content: "";
  display: table; }

.img-responsive {
  width: 100%;
  height: auto; }

@media (max-width: 768px) {
  .hide-mobile {
    display: none !important; } }

* {
  box-sizing: border-box; }

html {
  font-size: 17.6px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #2b2b2b; }

body {
  line-height: 1.5;
  font-family: 'Open Sans', -apple-system, ".SFNSText-Regular", "San Francisco", "Roboto", "Segoe UI", "Helvetica Neue", "Lucida Grande", sans-serif;
  color: #fff;
  background-color: #2b2b2b;
  margin: 24px 0;
  padding: 0;
  width: 100%; }
  @media (max-width: 768px) {
    body {
      font-size: 18.4px;
      margin-top: 0; }
      body h1 {
        font-size: 38.4px; }
      body h2 {
        font-size: 32px; }
      body h3 {
        font-size: 25.6px; } }

.container {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  max-width: 768px;
  margin: 0 auto; }
  .container.fullblock {
    display: block; }

.alpha {
  padding-right: 12px;
  width: 50%; }

.beta {
  padding-left: 12px;
  width: 50%; }

@media (max-width: 768px) {
  .container {
    display: block;
    max-width: 100%; }
  .alpha,
  .beta {
    width: 100%;
    padding: 0; } }

.fullwidth {
  width: 100%; }

.mark {
  position: absolute;
  top: 0;
  right: 20%;
  height: 36px;
  width: 192px; }
  .mark .band {
    display: inline-block;
    float: left;
    clear: none;
    width: 48px;
    height: 36px; }
  .mark .sochadev-gray {
    background-color: #1c1c1c; }
  .mark .sochadev-blue {
    background-color: #23b3d7; }
  .mark .sochadev-red {
    background-color: #b20b23; }
  .mark .sochadev-green {
    background-color: #7f9731; }
  @media (max-width: 768px) {
    .mark {
      right: 12px;
      height: 30px;
      width: 144px; }
      .mark .band {
        width: 36px;
        height: 30px; } }
  header .mark {
    height: 36px;
    width: 36px; }
    header .mark .band {
      width: 9px;
      height: 36px; }

header {
  background: rgba(0, 0, 0, 0.7);
  display: none;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 100; }
  header::after {
    clear: both;
    content: "";
    display: table; }
  header.stripe {
    padding: 12px; }
  header .fullwidth {
    height: 36px;
    position: relative; }
  header a {
    color: #fff;
    display: block;
    height: 36px;
    line-height: 36px;
    position: absolute;
    bottom: 0;
    margin: 0;
    width: auto; }
    header a:hover {
      color: #fff; }
    header a.brand {
      left: 0;
      font-family: 'Ubuntu', sans-serif;
      font-size: 41.6px;
      font-weight: 400;
      text-decoration: none;
      width: 88%; }
      @media (max-width: 768px) {
        header a.brand {
          font-size: 38.4px;
          left: 12px; } }
    header a.logo {
      right: 0; }
  header span.tagline {
    display: block;
    font-size: 16px;
    font-weight: normal;
    line-height: 36px;
    margin: 0 0 0 0;
    text-align: center;
    text-indent: 10%;
    text-transform: lowercase; }
    body.front header span.tagline {
      text-indent: 18%; }
    @media (max-width: 768px) {
      header span.tagline {
        display: none; } }

.stripe {
  padding: 24px;
  width: 100%; }
  .stripe.blue {
    background: #23b3d7; }
    .stripe.blue hr {
      border-color: #35bcde; }
  .stripe.red {
    background: #b20b23; }
    .stripe.red hr {
      border-color: #ca0c28; }
  .stripe.green {
    background: #7f9731; }
    .stripe.green hr {
      border-color: #8faa37; }
  .stripe.gray {
    background: #333; }
    .stripe.gray hr {
      border-color: #404040; }
  .stripe.darkgray {
    background: #2b2b2b; }
    .stripe.darkgray hr {
      border-color: #383838; }

.title {
  margin-top: 30px; }
  @media (min-width: 769px) {
    .title {
      margin-top: 0; } }

.intro {
  padding-bottom: 72px; }
  .intro .alpha {
    padding-right: 60px; }
    .intro .alpha hr {
      margin-top: 0; }
    .intro .alpha p:last-child {
      margin-bottom: 24px; }
  .intro .beta {
    padding-left: 0;
    position: relative; }
    .intro .beta > img {
      position: absolute;
      left: 12px;
      top: -270px; }
  @media (max-width: 768px) {
    .intro {
      padding-bottom: 24px; }
      .intro .alpha {
        padding-right: 0; }
      .intro .beta > img {
        display: none; } }

.icon-stripe {
  padding: 0 24px; }
  @media (max-width: 768px) {
    .icon-stripe .beta,
    .icon-stripe .alpha {
      padding-bottom: 40.8px; }
      .icon-stripe .beta h2,
      .icon-stripe .alpha h2 {
        padding-top: 40.8px; } }
  @media (min-width: 769px) {
    .icon-stripe {
      padding: 0; }
      .icon-stripe .icon {
        position: relative; }
      .icon-stripe .alpha {
        width: 28%;
        text-align: left;
        padding-left: 12px; }
      .icon-stripe .beta {
        width: 72%;
        text-align: left;
        padding-right: 48px;
        padding-top: 0;
        padding-bottom: 72px; }
        .icon-stripe .beta h2 {
          padding-top: 72px; }
      .icon-stripe:nth-child(even) .alpha {
        width: 72%;
        text-align: left;
        padding-left: 48px;
        padding-bottom: 72px; }
        .icon-stripe:nth-child(even) .alpha h2 {
          padding-top: 72px; }
      .icon-stripe:nth-child(even) .beta {
        width: 28%;
        text-align: right;
        padding-right: 12px; } }

.overflow .icon {
  top: 15px; }

.triage .icon {
  top: 51.6px; }

.problem-solving .icon {
  left: 18px;
  font-size: 7.5em !important; }

.projects {
  padding-top: 0;
  padding-bottom: 72px;
  position: relative; }
  .projects #projects {
    padding-top: 72px; }
  @media (max-width: 768px) {
    .projects {
      padding-bottom: 48px; }
      .projects #projects {
        padding-top: 48px; } }

.contact-us {
  border-top: 1px solid #666;
  padding-bottom: 24px; }
  .contact-us h2 {
    padding-top: 48px; }
  .contact-us .contact-form {
    width: 100%; }
  .contact-us .form-container {
    width: 65%;
    margin: 0 auto; }
  @media (max-width: 768px) {
    .contact-us {
      padding-bottom: 0; }
      .contact-us h2 {
        padding-top: 24px; }
      .contact-us .form-container {
        width: 100%; } }

.team {
  padding-top: 0;
  padding-bottom: 0; }
  .team .exec-summary {
    padding-bottom: 0; }
  @media (min-width: 769px) {
    .team .team-about {
      padding: 24px 0; }
      .team .team-about .icon {
        position: relative; }
      .team .team-about .alpha {
        width: 28%;
        text-align: left;
        padding-left: 12px; }
      .team .team-about .beta {
        width: 72%;
        text-align: left;
        padding-left: 48px; }
    .team .exec-summary {
      padding-bottom: 24px; } }

footer {
  border-top: solid 1px #666; }
  body.front footer {
    border: 0;
    padding-top: 0; }
  footer p {
    color: #666;
    line-height: 1.7; }

img.logo {
  display: block;
  width: 36px;
  height: 36px; }
  h1 img.logo {
    float: right; }

p, ul, ol {
  margin-bottom: 24px;
  margin-top: 0; }
  p:last-child, ul:last-child, ol:last-child {
    margin-bottom: 0; }

h2, h3 {
  margin-bottom: 14.4px;
  margin-top: 0; }

h1, h2, h3, h4, h5 {
  font-family: 'Ubuntu', sans-serif;
  font-weight: 400;
  line-height: 1; }
  h1 a, h1 a:hover, h2 a, h2 a:hover, h3 a, h3 a:hover, h4 a, h4 a:hover, h5 a, h5 a:hover {
    text-decoration: none; }

h1 {
  font-size: 43.2px;
  margin: 0; }

.front h1 {
  font-size: 83.2px; }
  .front h1 div {
    font-size: 16px;
    margin-bottom: 12px; }

h2 {
  font-size: 38.4px;
  text-transform: lowercase; }

h3 {
  font-size: 30.4px;
  text-transform: lowercase; }

body.team main .stripe h2, body.team main .stripe h3,
body.download main .stripe h2,
body.download main .stripe h3 {
  text-transform: capitalize; }

h4 {
  font-size: 25.6px; }

h5 {
  font-size: 16px; }

b, strong, .bold, h4 {
  font-weight: 500; }

.capitalize {
  text-transform: capitalize; }

h5 {
  font-weight: 300; }

em, i {
  font-style: italic; }

pre {
  border-radius: 6px;
  background: #444;
  clear: both;
  color: #e4e4e4;
  font-family: "Bitstream Vera Sans Mono", "Consolas", "Courier", monospace;
  padding: 24px 12px;
  width: 100%; }

code {
  border-radius: 6px;
  background: #444;
  padding: 3px 6px;
  white-space: nowrap; }

hr {
  border: solid 2px #383838;
  clear: both;
  height: 0px;
  margin: 24px 0;
  width: 100%; }

small {
  font-size: 12.8px; }

big {
  font-size: 19.2px; }

a {
  text-decoration: none;
  outline: none;
  color: #ffb366;
  transition: all 0.3s; }
  a:hover {
    text-decoration: underline;
    color: #ffcc99; }
  .social a:hover {
    text-decoration: none; }
  a:visited, a:focus {
    outline: none; }

.bios p {
  font-size: 16px;
  line-height: 1.6; }

a.blue, span.blue, em.blue, strong.blue, .tooltip .blue.tip {
  color: #8dd9ec; }

a.blue.bg, span.blue.bg, em.blue.bg, strong.blue.bg, .tooltip .blue.bg.tip {
  background: #b9e8f4;
  color: #2b2b2b; }
  a.blue.bg:hover, span.blue.bg:hover, em.blue.bg:hover, strong.blue.bg:hover, .tooltip .blue.bg.tip:hover {
    color: #2b2b2b; }

a.blue:hover, span.blue:hover, em.blue:hover, strong.blue:hover, .tooltip .blue.tip:hover {
  color: #b9e8f4; }

a.red, span.red, em.red, strong.red, .tooltip .red.tip {
  color: #f56176; }

a.red.bg, span.red.bg, em.red.bg, strong.red.bg, .tooltip .red.bg.tip {
  background: #f891a0;
  color: #2b2b2b; }
  a.red.bg:hover, span.red.bg:hover, em.red.bg:hover, strong.red.bg:hover, .tooltip .red.bg.tip:hover {
    color: #2b2b2b; }

a.red:hover, span.red:hover, em.red:hover, strong.red:hover, .tooltip .red.tip:hover {
  color: #f891a0; }

a.green, span.green, em.green, strong.green, .tooltip .green.tip {
  color: #b3cc62; }

a.green.bg, span.green.bg, em.green.bg, strong.green.bg, .tooltip .green.bg.tip {
  background: #d8e5af;
  color: #2b2b2b; }
  a.green.bg:hover, span.green.bg:hover, em.green.bg:hover, strong.green.bg:hover, .tooltip .green.bg.tip:hover {
    color: #2b2b2b; }

a.green:hover, span.green:hover, em.green:hover, strong.green:hover, .tooltip .green.tip:hover {
  color: #d8e5af; }

a.gray, span.gray, em.gray, strong.gray, .tooltip .gray.tip {
  color: #e4e4e4; }

a.gray.bg, span.gray.bg, em.gray.bg, strong.gray.bg, .tooltip .gray.bg.tip {
  background: white;
  color: #2b2b2b; }
  a.gray.bg:hover, span.gray.bg:hover, em.gray.bg:hover, strong.gray.bg:hover, .tooltip .gray.bg.tip:hover {
    color: #2b2b2b; }

a.gray:hover, span.gray:hover, em.gray:hover, strong.gray:hover, .tooltip .gray.tip:hover {
  color: white; }

a.orange, span.orange, em.orange, strong.orange, .tooltip .orange.tip {
  color: #ffb366; }

a.orange.bg, span.orange.bg, em.orange.bg, strong.orange.bg, .tooltip .orange.bg.tip {
  background: #ffcc99;
  color: #2b2b2b; }
  a.orange.bg:hover, span.orange.bg:hover, em.orange.bg:hover, strong.orange.bg:hover, .tooltip .orange.bg.tip:hover {
    color: #2b2b2b; }

a.orange:hover, span.orange:hover, em.orange:hover, strong.orange:hover, .tooltip .orange.tip:hover {
  color: #ffcc99; }

a.purple, span.purple, em.purple, strong.purple, .tooltip .purple.tip {
  color: #a491c2; }

a.purple.bg, span.purple.bg, em.purple.bg, strong.purple.bg, .tooltip .purple.bg.tip {
  background: #cdc2de;
  color: #2b2b2b; }
  a.purple.bg:hover, span.purple.bg:hover, em.purple.bg:hover, strong.purple.bg:hover, .tooltip .purple.bg.tip:hover {
    color: #2b2b2b; }

a.purple:hover, span.purple:hover, em.purple:hover, strong.purple:hover, .tooltip .purple.tip:hover {
  color: #cdc2de; }

.breadcrumb {
  margin-top: 12px;
  text-transform: lowercase; }

.tooltip {
  border-bottom: dotted 2px #666;
  cursor: pointer;
  position: relative;
  white-space: nowrap; }
  .tooltip .tip {
    white-space: normal;
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 3;
    margin-bottom: 12px;
    margin-left: 0;
    width: 240px;
    border-radius: 6px;
    background: #fff;
    border: solid 3px #2b2b2b;
    color: #333;
    padding: 12px;
    font-size: 13px;
    font-style: normal;
    text-align: left;
    line-height: 1.4; }

@font-face {
  font-family: 'sochadev';
  src: url("../fonts/sochadev/sochadev.eot?32345647");
  src: url("../fonts/sochadev/sochadev.eot?32345647#iefix") format("embedded-opentype"), url("../fonts/sochadev/sochadev.woff?32345647") format("woff"), url("../fonts/sochadev/sochadev.ttf?32345647") format("truetype"), url("../fonts/sochadev/sochadev.svg?32345647#sochadev") format("svg");
  font-weight: normal;
  font-style: normal; }

/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */
/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */
/*
@media screen and (-webkit-min-device-pixel-ratio:0) {
  @font-face {
    font-family: 'sochadev';
    src: url('../font/sochadev.svg?32345647#sochadev') format('svg');
  }
}
*/
.icon.icon-2x {
  font-size: 2em; }

.icon.icon-3x {
  font-size: 3em; }

.icon.icon-4x {
  font-size: 4em; }

.icon.icon-5x {
  font-size: 5em; }

.icon.icon-6x {
  font-size: 6em; }

.icon.icon-7x {
  font-size: 7em; }

.icon.icon-8x {
  font-size: 8em; }

.icon.icon-9x {
  font-size: 9em; }

.icon.icon-10x {
  font-size: 10em; }

.icon.icon-11x {
  font-size: 11em; }

.icon.icon-12x {
  font-size: 12em; }

.icon-spin {
  -webkit-animation: icon-spin 2s infinite linear;
  animation: icon-spin 2s infinite linear; }

.icon-pulse {
  -webkit-animation: icon-spin 1s infinite steps(8);
  animation: icon-spin 1s infinite steps(8); }

@-webkit-keyframes icon-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg); } }

@keyframes icon-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg); } }

.icon-rotate-90 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1);
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg); }

.icon-rotate-180 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg); }

.icon-rotate-270 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
  -webkit-transform: rotate(270deg);
  -ms-transform: rotate(270deg);
  transform: rotate(270deg); }

.icon-flip-horizontal {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1);
  -webkit-transform: scale(-1, 1);
  -ms-transform: scale(-1, 1);
  transform: scale(-1, 1); }

.icon-flip-vertical {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);
  -webkit-transform: scale(1, -1);
  -ms-transform: scale(1, -1);
  transform: scale(1, -1); }

:root .fa-rotate-90,
:root .fa-rotate-180,
:root .fa-rotate-270,
:root .fa-flip-horizontal,
:root .fa-flip-vertical {
  -webkit-filter: none;
  filter: none; }

.icon {
  font-family: "sochadev";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  text-align: center;
  font-size: 1em;
  width: 1em;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-chat:before {
  content: '\e800'; }

/* '' */
.icon-comment:before {
  content: '\e801'; }

/* '' */
.icon-users:before {
  content: '\e802'; }

/* '' */
.icon-letter-a:before {
  content: '\e803'; }

/* '' */
.icon-user:before {
  content: '\e804'; }

/* '' */
.icon-heart:before {
  content: '\e805'; }

/* '' */
.icon-drupal:before {
  content: '\e806'; }

/* '' */
.icon-facebook-squared:before {
  content: '\e807'; }

/* '' */
.icon-github-circled:before {
  content: '\e808'; }

/* '' */
.icon-html5:before {
  content: '\e809'; }

/* '' */
.icon-instagram:before {
  content: '\e80a'; }

/* '' */
.icon-linkedin-squared:before {
  content: '\e80b'; }

/* '' */
.icon-youtube-play:before {
  content: '\e80c'; }

/* '' */
.icon-vimeo-squared:before {
  content: '\e80d'; }

/* '' */
.icon-twitter-squared:before {
  content: '\e80e'; }

/* '' */
.icon-slack:before {
  content: '\e80f'; }

/* '' */
.icon-stackoverflow:before {
  content: '\e810'; }

/* '' */
.icon-linux:before {
  content: '\e811'; }

/* '' */
.icon-gplus-squared:before {
  content: '\e812'; }

/* '' */
.icon-apple:before {
  content: '\e813'; }

/* '' */
.icon-android:before {
  content: '\e814'; }

/* '' */
.icon-css3:before {
  content: '\e815'; }

/* '' */
.icon-git-squared:before {
  content: '\e816'; }

/* '' */
.icon-gauge:before {
  content: '\e817'; }

/* '' */
.icon-chart-bar:before {
  content: '\e818'; }

/* '' */
.icon-chart-area:before {
  content: '\e819'; }

/* '' */
.icon-chart-pie:before {
  content: '\e81a'; }

/* '' */
.icon-chart-line:before {
  content: '\e81b'; }

/* '' */
.icon-ticket:before {
  content: '\e81c'; }

/* '' */
.icon-rocket:before {
  content: '\e81d'; }

/* '' */
.icon-bug:before {
  content: '\e81e'; }

/* '' */
.icon-certificate:before {
  content: '\e81f'; }

/* '' */
.icon-beaker:before {
  content: '\e820'; }

/* '' */
.icon-magic:before {
  content: '\e821'; }

/* '' */
.icon-truck:before {
  content: '\e822'; }

/* '' */
.icon-medkit:before {
  content: '\e823'; }

/* '' */
.icon-ambulance:before {
  content: '\e824'; }

/* '' */
.icon-bomb:before {
  content: '\e825'; }

/* '' */
.icon-shield:before {
  content: '\e826'; }

/* '' */
.icon-heartbeat:before {
  content: '\e827'; }

/* '' */
.icon-tint:before {
  content: '\e828'; }

/* '' */
.icon-star:before {
  content: '\e829'; }

/* '' */
.icon-child:before {
  content: '\e82a'; }

/* '' */
.icon-cancel-circled:before {
  content: '\e82b'; }

/* '' */
.icon-ok-circled:before {
  content: '\e82c'; }

/* '' */
.icon-help-circled:before {
  content: '\e82d'; }

/* '' */
.icon-info-circled:before {
  content: '\e82e'; }

/* '' */
.icon-thumbs-up-alt:before {
  content: '\e82f'; }

/* '' */
.icon-cog:before {
  content: '\e830'; }

/* '' */
.icon-cog-alt:before {
  content: '\e831'; }

/* '' */
.icon-play-circled:before {
  content: '\e832'; }

/* '' */
.icon-play:before {
  content: '\e833'; }

/* '' */
.icon-diamond:before {
  content: '\e834'; }

/* '' */
.icon-angle-right:before {
  content: '\e835'; }

/* '' */
.icon-puzzle:before {
  content: '\e836'; }

/* '' */
.icon-pencil:before {
  content: '\e837'; }

/* '' */
.icon-link:before {
  content: '\e838'; }

/* '' */
.icon-link-ext:before {
  content: '\e839'; }

/* '' */
.icon-flag:before {
  content: '\e83a'; }

/* '' */
.icon-picture:before {
  content: '\e83b'; }

/* '' */
.icon-mail-squared:before {
  content: '\e83c'; }

/* '' */
.icon-mail-alt:before {
  content: '\e83d'; }

/* '' */
.icon-clock:before {
  content: '\e83e'; }

/* '' */
.icon-lightbulb:before {
  content: '\e83f'; }

/* '' */
.icon-award:before {
  content: '\e840'; }

/* '' */
.icon-flash:before {
  content: '\e841'; }

/* '' */
.icon-sun:before {
  content: '\e842'; }

/* '' */
.icon-globe:before {
  content: '\e843'; }

/* '' */
.icon-circle:before {
  content: '\e844'; }

/* '' */
.icon-circle-notch:before {
  content: '\e845'; }

/* '' */
.icon-cubes:before {
  content: '\e846'; }

/* '' */
.icon-cube:before {
  content: '\e847'; }

/* '' */
.icon-tree:before {
  content: '\e848'; }

/* '' */
.icon-database:before {
  content: '\e849'; }

/* '' */
.icon-lifebuoy:before {
  content: '\e84a'; }

/* '' */
.icon-user-md:before {
  content: '\e84b'; }

/* '' */
.icon-motorcycle:before {
  content: '\e84c'; }

/* '' */
.icon-right-circled:before {
  content: '\e84d'; }

/* '' */
.icon-angle-double-right:before {
  content: '\e84e'; }

/* '' */
.icon-right-dir:before {
  content: '\e84f'; }

/* '' */
.icon-right-open:before {
  content: '\e850'; }

/* '' */
.icon-menu:before {
  content: '\e851'; }

/* '' */
.icon-phone-squared:before {
  content: '\e852'; }

/* '' */
.icon-phone:before {
  content: '\e853'; }

/* '' */
.icon-rss-squared:before {
  content: '\e854'; }

/* '' */
.icon-file-pdf:before {
  content: '\e855'; }

/* '' */
.icon-doc-text-inv:before {
  content: '\e856'; }

/* '' */
.icon-doc-inv:before {
  content: '\e857'; }

/* '' */
.icon-bell:before {
  content: '\e858'; }

/* '' */
.icon-quote-left:before {
  content: '\e859'; }

/* '' */
.icon-quote-right:before {
  content: '\e85a'; }

/* '' */
.icon-print:before {
  content: '\e85b'; }

/* '' */
.icon-attention:before {
  content: '\e85c'; }

/* '' */
.icon-attention-circled:before {
  content: '\e85d'; }

/* '' */
.icon-flag-empty:before {
  content: '\e85e'; }

/* '' */
.icon-flag-checkered:before {
  content: '\e85f'; }

/* '' */
.icon-eye:before {
  content: '\e860'; }

/* '' */
.icon-pin:before {
  content: '\e861'; }

/* '' */
.icon-search:before {
  content: '\e862'; }

/* '' */
.messages {
  border-radius: 3px;
  margin-bottom: 24px;
  padding: 24px; }
  .messages.error {
    background: #fef1f3;
    color: #b20b23; }
  .messages.success {
    background: #ebf2d5;
    color: #7f9731; }
  .messages ul, .messages li {
    margin: 0;
    padding: 0; }
  .messages ul {
    margin-left: 24px; }

label {
  font-weight: normal; }

fieldset {
  border: 0;
  margin: 24px 0 0 0;
  padding: 0; }
  fieldset.contact {
    display: none; }
    fieldset.contact .messages {
      display: none; }
    fieldset.contact .form-item {
      line-height: 1;
      margin-bottom: 12px; }
    fieldset.contact label {
      display: none; }
    fieldset.contact input,
    fieldset.contact select,
    fieldset.contact textarea {
      color: #333;
      margin-bottom: 0;
      font-size: 18.4px; }
      @media (max-width: 768px) {
        fieldset.contact input,
        fieldset.contact select,
        fieldset.contact textarea {
          font-size: 18.4px;
          line-height: 1.3;
          margin-top: 0; } }
    fieldset.contact input[type="submit"] {
      color: #fff;
      font-weight: normal;
      width: 100%;
      margin-bottom: 12px; }
      fieldset.contact input[type="submit"]:hover {
        background-color: #4bc4e2; }

.projects-list {
  margin: 0;
  padding: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-content: flex-end;
  -ms-flex-line-pack: end;
  align-content: flex-end; }
  .projects-list::after {
    clear: both;
    content: "";
    display: table; }
  .projects-list li {
    display: inline-block;
    overflow: hidden; }
    @media (min-width: 769px) {
      .projects-list li {
        width: 25%;
        padding-right: 12px;
        padding-bottom: 12px; }
        .projects-list li:nth-child(4) {
          padding-right: 0; } }

@media (max-width: 768px) and (min-width: 491px) {
  .projects-list li {
    width: 33.3333%;
    padding-right: 12px;
    padding-bottom: 12px; }
    .projects-list li:nth-child(3) {
      padding-right: 0; } }
    @media (max-width: 490px) {
      .projects-list li {
        width: 180px;
        margin: 6px auto; } }
  .projects-list a {
    background: #444;
    cursor: pointer;
    display: inline-block;
    text-indent: -9999px;
    border: 1px solid #2b2b2b;
    filter: grayscale(100);
    -webkit-filter: grayscale(100);
    -moz-filter: grayscale(100);
    filter: grayscale(100);
    filter: gray;
    -webkit-filter: grayscale(1); }
    .projects-list a:hover {
      filter: grayscale(0);
      -webkit-filter: grayscale(0);
      -moz-filter: grayscale(0);
      filter: grayscale(0);
      filter: gray;
      -webkit-filter: grayscale(0); }
    .projects-list a.socha-dev-white-label {
      background-image: url("../images/sprites.png");
      background-position: -180px -270px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.socha-dev-white-label {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }
    .projects-list a.science {
      background-image: url("../images/sprites.png");
      background-position: 0px 0px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.science {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }
    .projects-list a.discovery-education {
      background-image: url("../images/sprites.png");
      background-position: -180px 0px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.discovery-education {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }
    .projects-list a.repequity {
      background-image: url("../images/sprites.png");
      background-position: -360px -135px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.repequity {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }
    .projects-list a.fcc-gov {
      background-image: url("../images/sprites.png");
      background-position: 0px -270px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.fcc-gov {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }
    .projects-list a.the-national-press-club {
      background-image: url("../images/sprites.png");
      background-position: -180px -135px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.the-national-press-club {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }
    .projects-list a.the-cook-political-report {
      background-image: url("../images/sprites.png");
      background-position: 0px -135px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.the-cook-political-report {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }
    .projects-list a.channel-democracy {
      background-image: url("../images/sprites.png");
      background-position: -360px 0px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.channel-democracy {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }

#modal {
  display: none;
  background: rgba(0, 0, 0, 0.5);
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 10; }

.modal {
  position: relative;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 3px;
  background: #fff;
  color: #2b2b2b;
  font-size: 16px;
  margin: 24px auto;
  padding: 24px;
  max-width: 1024px; }
  .modal h3 {
    text-transform: none; }
  .modal a {
    color: #23b3d7; }
  .modal .white-label-flag {
    position: absolute;
    top: 0;
    left: 0;
    height: 126px;
    width: 126px;
    display: none;
    overflow: hidden; }
  .modal .flag {
    transform: rotate(-45deg);
    -ms-transform: rotate(-45deg);
    -webkit-transform: rotate(-45deg);
    background-color: #2b2b2b;
    color: white;
    font-size: 14px;
    height: 36px;
    left: -39px;
    line-height: 36px;
    position: absolute;
    text-align: center;
    text-transform: uppercase;
    top: 31px;
    width: 172px; }
  @media (min-width: 769px) {
    .modal.white-label {
      width: 40%;
      height: auto;
      bottom: auto; } }
  .modal.white-label .alpha {
    display: none; }
  .modal.white-label .beta {
    width: 100%; }
  .modal .alpha img {
    height: auto;
    width: 100%; }
  @media (min-width: 769px) {
    .modal .alpha {
      width: 66%;
      height: 100%;
      overflow: hidden;
      margin: 0;
      padding-right: 0; }
    .modal .beta {
      width: 34%;
      height: 100%;
      overflow: hidden;
      margin: 0;
      padding-left: 24px; } }
  @media (max-width: 768px) {
    .modal {
      display: block;
      margin: 12px;
      padding: 12px; }
      .modal .beta {
        padding: 12px 0 0 0; } }

.bios {
  padding-bottom: 96px; }
  .bios .container {
    padding: 24px 0;
    -webkit-align-items: top;
    -ms-flex-align: top;
    align-items: top;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start; }
  .bios .alpha {
    width: 18%; }
  .bios .beta {
    width: 82%; }
  .bios .avatar {
    border-radius: 6px;
    display: block;
    width: 100%;
    margin: 0 0 12px 0; }
  .bios ul.social {
    clear: both;
    list-style: none;
    margin: 0;
    padding: 0; }
    .bios ul.social li {
      float: left;
      margin: 0 12px 0 0; }
  @media (max-width: 768px) {
    .bios .container {
      display: block;
      padding-top: 36px; }
    .bios .alpha {
      width: 100%;
      text-align: center; }
    .bios .beta {
      width: 100%; }
      .bios .beta h3 {
        text-align: center; }
    .bios .avatar {
      display: inline-block;
      margin: 12px;
      width: 144px;
      border-radius: 3px; } }

.stripe.hero {
  padding: 0;
  background-repeat: no-repeat;
  background-position: center top;
  border-top: solid 1px #000;
  border-bottom: solid 1px #000; }
  @media (min-width: 769px) {
    .stripe.hero {
      height: 500px; } }
  @media (max-width: 768px) {
    .stripe.hero {
      background-size: auto 100%; } }
  body.front .stripe.hero {
    border-top: solid 1px #000;
    border-bottom: solid 1px #bbb;
    margin-top: 24px;
    padding-top: 24px; }
  .stripe.hero .hero-intro {
    border-radius: 6px;
    background: rgba(0, 0, 0, 0.6);
    margin-top: 72px;
    padding: 12px 24px; }
    @media (min-width: 769px) {
      .stripe.hero .hero-intro {
        width: 70%;
        margin: 0 auto;
        font-size: 28.8px; } }
    @media (max-width: 768px) {
      .stripe.hero .hero-intro {
        margin: 24px; } }

.workflow .container {
  max-width: 1024px; }

.workflow footer .container {
  max-width: 768px; }

.comic-banner {
  background-image: url(../images/comics/comic-bg-00.png);
  background-repeat: repeat-x;
  background-color: transparent;
  background-position: top left;
  text-align: center;
  margin: 24px 0 0 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-content: flex-end;
  -ms-flex-line-pack: end;
  align-content: flex-end;
  -webkit-align-items: top;
  -ms-flex-align: top;
  align-items: top;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  width: 100%; }
  @media (min-width: 769px) {
    .comic-banner {
      margin: 48px 0 0 0;
      border: solid 1px #444; } }
  .comic-banner .issue {
    width: 17%;
    background: #333;
    border-right: solid 1px #444;
    height: 250px;
    position: relative;
    font-size: 16px;
    font-style: normal;
    text-align: center; }
    @media (max-width: 768px) {
      .comic-banner .issue {
        display: none; } }
    .comic-banner .issue .numbers, .comic-banner .issue .numbers .date, .comic-banner .issue .publisher {
      display: block;
      position: absolute;
      left: 0;
      width: 100%;
      padding: 12px 0; }
    .comic-banner .issue .numbers {
      top: 0;
      height: 185px; }
      .comic-banner .issue .numbers .price {
        display: block;
        color: #e4e4e4;
        font-size: 51.2px;
        padding: 24px 0; }
      .comic-banner .issue .numbers .date {
        width: auto;
        left: auto;
        right: 0;
        bottom: 0;
        color: #444;
        padding: 6px 12px;
        background: url(../images/comics/comic-bg-02.png) repeat 0 0 #fff; }
        .comic-banner .issue .numbers .date .number {
          display: block;
          font-size: 25.6px;
          font-style: italic;
          font-weight: bold; }
    .comic-banner .issue .publisher {
      bottom: 0;
      background: url("../images/socha-dev.png") no-repeat 0 0;
      background-size: cover;
      border-top: solid 1px #444;
      color: #fff;
      text-transform: uppercase;
      height: 65px; }
  .comic-banner .title {
    display: block;
    position: relative;
    font-size: 32px;
    font-weight: normal; }
    @media (min-width: 769px) {
      .comic-banner .title {
        width: 83%;
        padding: 48px 0;
        font-size: 57.6px; } }
    .comic-banner .title .tooltip {
      border-bottom: 0;
      font-weight: bold;
      white-space: normal; }
      .comic-banner .title .tooltip .tip {
        font-weight: normal; }
    .comic-banner .title .authority {
      background: url("../images/comics/comics-code-authority.jpg") no-repeat 0 0;
      display: block;
      position: absolute;
      top: 0;
      right: 0;
      width: 65px;
      height: 79px;
      margin: 24px; }
      @media (max-width: 767px) {
        .comic-banner .title .authority {
          display: none; } }

ol.comic {
  font-size: 13px;
  line-height: 1.5;
  margin: 0;
  padding: 0;
  background-image: url(../images/comics/comic-bg-01.png);
  background-repeat: repeat;
  background-position: top left;
  background-color: #fff;
  color: #2b2b2b;
  padding: 12px;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-content: flex-end;
  -ms-flex-line-pack: end;
  align-content: flex-end;
  width: 100%; }
  @media (min-width: 769px) {
    ol.comic {
      border: solid 1px #444;
      padding: 12px;
      padding-bottom: 0; } }
  ol.comic > li {
    border-radius: 3px;
    background-image: url(../images/comics/comic-bg-02.png);
    background-repeat: repeat;
    background-position: top left;
    background-color: #fff;
    border: solid 1px #bbb;
    position: relative;
    margin-bottom: 12px;
    padding: 12px;
    list-style: none; }
    ol.comic > li::after {
      clear: both;
      content: "";
      display: table; }
    @media (min-width: 769px) {
      ol.comic > li {
        width: calc(33.3333% - 12px*2);
        min-height: 300px;
        margin: 12px; } }
    ol.comic > li:nth-child(2n+1) {
      border-color: #e4e4e4; }
      ol.comic > li:nth-child(2n+1) .narrator {
        border-color: #e4e4e4; }
    ol.comic > li:nth-child(4n) {
      background: #fff; }
    ol.comic > li:nth-child(6n) {
      border: solid 1px #b3b3b3; }
    ol.comic > li em,
    ol.comic > li strong,
    ol.comic > li .tooltip {
      background: #fff; }
  ol.comic ul {
    margin: 24px 0 0 24px;
    padding: 0;
    list-style: none; }
    ol.comic ul.bullets {
      list-style: disc; }
    ol.comic ul li {
      background: #fff;
      margin: 0 0 12px 0; }
      ol.comic ul li:last-child {
        margin: 0; }
  ol.comic img {
    display: block;
    float: left; }
  ol.comic img.avatar {
    border-radius: 6px;
    width: 60px;
    height: 60px;
    margin: 0 12px 0 0; }
  ol.comic img.illustration {
    display: block;
    margin: 12px auto;
    width: 100%; }
    ol.comic img.illustration::after {
      clear: both;
      content: "";
      display: table; }
    ol.comic img.illustration.top {
      margin-top: 0; }
    @media (min-width: 769px) {
      ol.comic img.illustration.bottom {
        position: absolute;
        bottom: 0;
        z-index: 0;
        width: auto;
        margin: 0 0 12px 0; } }
    @media (max-width: 768px) {
      ol.comic img.illustration.bottom {
        margin-bottom: 0; } }
  ol.comic .no-img img {
    display: none; }
  ol.comic .tooltip {
    border-bottom-color: #bbb; }
    ol.comic .tooltip .tip {
      border-color: #666;
      text-transform: none; }
    ol.comic .tooltip.no-img, ol.comic .tooltip.project {
      white-space: normal; }
  ol.comic .blue {
    color: #1c8eab; }
  ol.comic .red {
    color: #b20b23; }
  ol.comic .green {
    color: #6f842b; }
  ol.comic .gray {
    color: #bbb; }
  ol.comic .orange {
    color: #e67300; }
  ol.comic .purple {
    color: #574278; }
  ol.comic strong {
    text-transform: uppercase; }
  ol.comic .actor {
    font-weight: normal; }
  ol.comic .brand {
    color: #333;
    font-weight: bold; }
    ol.comic .brand.actor {
      color: #000;
      font-weight: normal; }
  ol.comic .narrator {
    display: block;
    background: #fff; }
    @media (min-width: 769px) {
      ol.comic .narrator {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        z-index: 1;
        border-bottom: solid 1px #bbb;
        padding: 12px; } }
  ol.comic .index {
    border-radius: 12px;
    display: block;
    width: 24px;
    height: 24px;
    margin: 12px;
    position: absolute;
    bottom: 0;
    right: 0;
    text-align: center;
    line-height: 2;
    font-size: 11px;
    background: #fff;
    border: solid 1px #e4e4e4;
    color: #bbb; }
    @media (max-width: 768px) {
      ol.comic .index {
        display: none; } }

/*# sourceMappingURL=data:application/json;base64, */
