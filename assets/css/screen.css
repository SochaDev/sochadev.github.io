@import url(https://fonts.googleapis.com/css?family=Ubuntu:400);
@import url(https://fonts.googleapis.com/css?family=Open+Sans);
html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

button, input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #41a7bf;
  border: 0;
  border-radius: 3px;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-family: "Open Sans", sans-serif;
  font-size: 22.4px;
  -webkit-font-smoothing: antialiased;
  font-weight: 600;
  line-height: 1;
  padding: 0.5em 1em;
  text-decoration: none;
  transition: background-color 150ms ease;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap; }
  button:hover, button:focus, input[type="button"]:hover, input[type="button"]:focus, input[type="reset"]:hover, input[type="reset"]:focus, input[type="submit"]:hover, input[type="submit"]:focus {
    background-color: #348699;
    color: #fff; }
  button:disabled, input[type="button"]:disabled, input[type="reset"]:disabled, input[type="submit"]:disabled {
    cursor: not-allowed;
    opacity: 0.5; }
    button:disabled:hover, input[type="button"]:disabled:hover, input[type="reset"]:disabled:hover, input[type="submit"]:disabled:hover {
      background-color: #41a7bf; }

fieldset {
  background-color: transparent;
  border: 1px solid #ddd;
  margin: 0 0 0.5em;
  padding: 1em; }

input,
label,
select {
  display: block;
  font-family: "Open Sans", sans-serif;
  font-size: 22.4px; }

label {
  font-weight: 600;
  margin-bottom: 0.25em; }
  label.required::after {
    content: "*"; }
  label abbr {
    display: none; }

input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="email"], input[type="month"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="time"], input[type="url"], input[type="week"], input:not([type]), textarea,
select[multiple=multiple] {
  background-color: #f4f4f4;
  border: 1px solid #ddd;
  border-radius: 3px;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06);
  box-sizing: border-box;
  font-family: "Open Sans", sans-serif;
  font-size: 22.4px;
  margin-bottom: 0.5em;
  padding: 0.33333em;
  transition: border-color 150ms ease;
  width: 100%; }
  input[type="color"]:hover, input[type="date"]:hover, input[type="datetime"]:hover, input[type="datetime-local"]:hover, input[type="email"]:hover, input[type="month"]:hover, input[type="number"]:hover, input[type="password"]:hover, input[type="search"]:hover, input[type="tel"]:hover, input[type="text"]:hover, input[type="time"]:hover, input[type="url"]:hover, input[type="week"]:hover, input:not([type]):hover, textarea:hover,
  select[multiple=multiple]:hover {
    border-color: #b1b1b1; }
  input[type="color"]:focus, input[type="date"]:focus, input[type="datetime"]:focus, input[type="datetime-local"]:focus, input[type="email"]:focus, input[type="month"]:focus, input[type="number"]:focus, input[type="password"]:focus, input[type="search"]:focus, input[type="tel"]:focus, input[type="text"]:focus, input[type="time"]:focus, input[type="url"]:focus, input[type="week"]:focus, input:not([type]):focus, textarea:focus,
  select[multiple=multiple]:focus {
    border-color: #41a7bf;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06), 0 0 5px rgba(58, 151, 172, 0.7);
    outline: none; }
  input[type="color"]:disabled, input[type="date"]:disabled, input[type="datetime"]:disabled, input[type="datetime-local"]:disabled, input[type="email"]:disabled, input[type="month"]:disabled, input[type="number"]:disabled, input[type="password"]:disabled, input[type="search"]:disabled, input[type="tel"]:disabled, input[type="text"]:disabled, input[type="time"]:disabled, input[type="url"]:disabled, input[type="week"]:disabled, input:not([type]):disabled, textarea:disabled,
  select[multiple=multiple]:disabled {
    background-color: #e8e8e8;
    cursor: not-allowed; }
    input[type="color"]:disabled:hover, input[type="date"]:disabled:hover, input[type="datetime"]:disabled:hover, input[type="datetime-local"]:disabled:hover, input[type="email"]:disabled:hover, input[type="month"]:disabled:hover, input[type="number"]:disabled:hover, input[type="password"]:disabled:hover, input[type="search"]:disabled:hover, input[type="tel"]:disabled:hover, input[type="text"]:disabled:hover, input[type="time"]:disabled:hover, input[type="url"]:disabled:hover, input[type="week"]:disabled:hover, input:not([type]):disabled:hover, textarea:disabled:hover,
    select[multiple=multiple]:disabled:hover {
      border: 1px solid #ddd; }

textarea {
  resize: vertical; }

input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }

input[type="checkbox"],
input[type="radio"] {
  display: inline;
  margin-right: 0.25em; }
  input[type="checkbox"] + label,
  input[type="radio"] + label {
    display: inline-block; }

input[type="file"] {
  margin-bottom: 0.5em;
  width: 100%; }

select {
  margin-bottom: 1em;
  max-width: 100%;
  width: auto; }

/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
@media (max-width: 768px) {
  footer .container .alpha, footer .container .beta, footer .container .columns-2, footer .container .columns-4, footer .container .columns-6, footer .container .columns-8, footer .container .columns-10, footer .container .columns-12 {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 100%;
    margin-left: 0%; }
    footer .container .alpha:last-child, footer .container .beta:last-child, footer .container .columns-2:last-child, footer .container .columns-4:last-child, footer .container .columns-6:last-child, footer .container .columns-8:last-child, footer .container .columns-10:last-child, footer .container .columns-12:last-child {
      margin-right: 0; }
    footer .container .alpha:nth-child(0), footer .container .beta:nth-child(0), footer .container .columns-2:nth-child(0), footer .container .columns-4:nth-child(0), footer .container .columns-6:nth-child(0), footer .container .columns-8:nth-child(0), footer .container .columns-10:nth-child(0), footer .container .columns-12:nth-child(0) {
      margin-right: 0; }
    footer .container .alpha p:last-child, footer .container .beta p:last-child, footer .container .columns-2 p:last-child, footer .container .columns-4 p:last-child, footer .container .columns-6 p:last-child, footer .container .columns-8 p:last-child, footer .container .columns-10 p:last-child, footer .container .columns-12 p:last-child {
      margin-bottom: 0; } }

body {
  font-size: 17.6px;
  line-height: 1.5;
  font-family: 'Open Sans', sans-serif;
  color: #fff;
  background-color: #2b2b2b;
  margin: 24px 0;
  padding: 0; }
  body .mark {
    position: absolute;
    top: -160px;
    right: 20%; }
  @media (max-width: 768px) {
    body {
      font-size: 18.4px;
      line-height: 1.5;
      margin-top: 0; }
      body h1 {
        font-size: 38.4px; }
      body h2 {
        font-size: 32px; }
      body h3 {
        font-size: 25.6px; }
      body.front .sprite,
      body.front .fa.fa-hide-mobile {
        display: none; } }

.clearfix::after {
  clear: both;
  content: "";
  display: table; }

.container {
  max-width: 1024px;
  margin-left: auto;
  margin-right: auto; }
  .container::after {
    clear: both;
    content: "";
    display: table; }
  body.front .container {
    max-width: 768px; }
  @media (min-width: 769px) {
    .container .columns-12 {
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 100%;
      margin-left: 0%; }
      .container .columns-12:last-child {
        margin-right: 0; }
      .container .columns-12:nth-child(0) {
        margin-right: 0; }
    .container .columns-10 {
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 82.94039%;
      margin-left: 8.5298%; }
      .container .columns-10:last-child {
        margin-right: 0; }
    .container .columns-8 {
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 65.88078%;
      margin-left: 17.05961%; }
      .container .columns-8:last-child {
        margin-right: 0; }
    .container .columns-6 {
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 48.82117%; }
      .container .columns-6:last-child {
        margin-right: 0; }
    .container .columns-4 {
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 31.76157%;
      margin-left: 34.11922%; }
      .container .columns-4:last-child {
        margin-right: 0; }
    .container .columns-2 {
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 14.70196%; }
      .container .columns-2:last-child {
        margin-right: 0; }
      .container .columns-2:nth-child(0) {
        margin-right: 0; } }

@media (min-width: 769px) {
  .stripe.blue, .stripe.red, .stripe.green {
    padding-bottom: 24px;
    padding-top: 24px; } }

.stripe {
  padding: 24px;
  position: relative;
  width: 100%;
  @extends %full-width; }
  main .stripe.first {
    border-bottom: solid 1px #666;
    margin-top: 80px; }
    body.front main .stripe.first {
      border: 0;
      padding-bottom: 0; }
      @media (min-width: 769px) {
        body.front main .stripe.first .columns-12 {
          float: left;
          display: block;
          margin-right: 2.35765%;
          width: 100%;
          /*@include shift(1);*/ }
          body.front main .stripe.first .columns-12:last-child {
            margin-right: 0; } }
  .stripe.second .alpha hr {
    margin-top: 0; }
  .stripe.second .alpha p:last-child {
    margin-bottom: 24px; }
  @media (min-width: 769px) {
    .stripe.second .alpha {
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 40.29137%;
      /*@include shift(1);*/ }
      .stripe.second .alpha:last-child {
        margin-right: 0; }
      .stripe.second .alpha p:last-child {
        margin-bottom: 24px; } }
  .stripe.second .beta {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 48.82117%;
    margin-right: 0;
    position: relative;
    z-index: 99; }
    .stripe.second .beta:last-child {
      margin-right: 0; }
    .stripe.second .beta img {
      position: absolute;
      left: 82px;
      top: -112px; }
  @media (max-width: 768px) {
    .stripe.second {
      padding-bottom: 0; } }
  .stripe.blue {
    background: #41a7bf; }
    @media (min-width: 769px) {
      .stripe.blue {
        padding: 33.6px 0; }
        .stripe.blue .alpha {
          float: left;
          display: block;
          margin-right: 2.35765%;
          width: 23.23176%; }
          .stripe.blue .alpha:last-child {
            margin-right: 0; }
        .stripe.blue .beta {
          float: left;
          display: block;
          margin-right: 2.35765%;
          width: 65.88078%;
          margin-right: 0; }
          .stripe.blue .beta:last-child {
            margin-right: 0; }
        .stripe.blue .fa {
          margin: 12px 0 0 24px; } }
  .stripe.red {
    background: #b20b23; }
    @media (min-width: 769px) {
      .stripe.red {
        padding: 33.6px 0; }
        .stripe.red .alpha {
          float: left;
          display: block;
          margin-right: 2.35765%;
          width: 65.88078%;
          margin-left: 8.5298%; }
          .stripe.red .alpha:last-child {
            margin-right: 0; }
        .stripe.red .beta {
          float: left;
          display: block;
          margin-right: 2.35765%;
          width: 23.23176%;
          margin-right: 0; }
          .stripe.red .beta:last-child {
            margin-right: 0; }
        .stripe.red .fa {
          margin: 48px 0 0 36px; } }
  .stripe.green {
    background: #6b7e28; }
    @media (min-width: 769px) {
      .stripe.green {
        padding: 33.6px 0; }
        .stripe.green .alpha {
          float: left;
          display: block;
          margin-right: 2.35765%;
          width: 23.23176%;
          /*@include shift(1);*/ }
          .stripe.green .alpha:last-child {
            margin-right: 0; }
        .stripe.green .beta {
          float: left;
          display: block;
          margin-right: 2.35765%;
          width: 57.35098%;
          margin-left: 8.5298%; }
          .stripe.green .beta:last-child {
            margin-right: 0; }
        .stripe.green .fa {
          margin: 24px 0 0 24px; } }
  .stripe.gray {
    background: #333;
    padding-bottom: 720px;
    padding-top: 48px; }
    .stripe.gray hr {
      border-color: #444;
      margin-top: 0; }
    body.front .stripe.gray {
      padding-bottom: 72px; }
  .stripe.last {
    border-top: solid 1px #666;
    padding-bottom: 0; }
  .stripe.team {
    padding-top: 0; }
    @media (min-width: 769px) {
      .stripe.team .alpha {
        float: left;
        display: block;
        margin-right: 2.35765%;
        width: 31.76157%; }
        .stripe.team .alpha:last-child {
          margin-right: 0; }
      .stripe.team .beta {
        float: left;
        display: block;
        margin-right: 2.35765%;
        width: 65.88078%; }
        .stripe.team .beta:last-child {
          margin-right: 0; }
      .stripe.team .sprite {
        float: none;
        margin: 0 auto 36px auto; } }
    .stripe.team hr:last-child {
      margin-bottom: 0; }
    @media (max-width: 768px) {
      .stripe.team .beta p:last-child {
        margin-bottom: 24px; } }
  .stripe .modal .white-label-flag {
    height: 126px;
    position: absolute;
    width: 126px;
    display: none;
    overflow: hidden; }
  .stripe .modal .flag {
    transform: rotate(-45deg);
    -ms-transform: rotate(-45deg);
    -webkit-transform: rotate(-45deg);
    background-color: #2b2b2b;
    color: white;
    font-size: 14px;
    height: 36px;
    left: -39px;
    line-height: 36px;
    position: absolute;
    text-align: center;
    text-transform: uppercase;
    top: 31px;
    width: 172px; }

header {
  background: rgba(0, 0, 0, 0.7);
  display: none;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 100; }
  header::after {
    clear: both;
    content: "";
    display: table; }
  header .stripe {
    padding-top: 12px;
    padding-bottom: 12px; }
    header .stripe .columns-12 {
      height: 36px;
      position: relative; }
  header a {
    color: #fff;
    display: block;
    height: 36px;
    line-height: 36px;
    position: absolute;
    bottom: 0;
    margin: 0;
    width: auto; }
    header a:hover {
      color: #fff; }
    header a.brand {
      left: 0;
      font-family: 'Ubuntu', sans-serif;
      font-size: 41.6px;
      font-weight: 400;
      text-decoration: none;
      width: 88%; }
      @media (max-width: 768px) {
        header a.brand {
          font-size: 38.4px; } }
    header a.logo {
      right: 0; }
  header span.tagline {
    display: block;
    font-size: 16px;
    font-weight: normal;
    line-height: 36px;
    margin: 0 0 0 0;
    text-align: center;
    text-indent: 10%;
    text-transform: lowercase; }
    body.front header span.tagline {
      text-indent: 18%; }
    @media (max-width: 768px) {
      header span.tagline {
        display: none; } }

@media (max-width: 768px) {
  main {
    margin-top: 0; } }

footer .stripe.first {
  border-top: solid 1px #666; }
  body.front footer .stripe.first {
    border: 0;
    padding-top: 0; }

footer p {
  color: #666;
  line-height: 1.7; }

img.logo {
  /*@include border-radius();*/
  display: block;
  width: 36px;
  height: 36px; }
  h1 img.logo {
    float: right; }

.sprite {
  display: block;
  float: left;
  margin: 0 24px 24px 0; }
  .sprite.a-team {
    background-image: url("../images/sprites.png");
    background-position: 0px 0px;
    width: 200px;
    height: 214px;
    background-repeat: no-repeat; }

p, ul, ol {
  margin-bottom: 24px;
  margin-top: 0; }
  p:last-child, ul:last-child, ol:last-child {
    margin-bottom: 0; }

h2, h3 {
  margin-bottom: 14.4px;
  margin-top: 0; }

h1, h2, h3, h4, h5 {
  font-family: 'Ubuntu', sans-serif;
  font-weight: 400;
  line-height: 1; }
  h1 a, h1 a:hover, h2 a, h2 a:hover, h3 a, h3 a:hover, h4 a, h4 a:hover, h5 a, h5 a:hover {
    text-decoration: none; }

h1 {
  font-size: 83.2px;
  margin: 0; }
  h1 div {
    font-size: 16px;
    margin-bottom: 12px; }

h2 {
  font-size: 38.4px;
  text-transform: lowercase; }

h3 {
  font-size: 32px;
  text-transform: lowercase; }

body.team main .stripe h2, body.team main .stripe h3,
body.download main .stripe h2,
body.download main .stripe h3 {
  text-transform: capitalize; }

h4 {
  font-size: 25.6px; }

h5 {
  font-size: 16px; }

b, strong, .bold, h4 {
  font-weight: 500; }

.capitalize {
  text-transform: capitalize; }

h5 {
  font-weight: 300; }

em, i {
  font-style: italic; }

pre {
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
  border-bottom-right-radius: 6px;
  border-top-right-radius: 6px;
  border-bottom-left-radius: 6px;
  border-bottom-right-radius: 6px;
  border-bottom-left-radius: 6px;
  border-top-left-radius: 6px;
  background: #444;
  clear: both;
  color: #e4e4e4;
  font-family: "Bitstream Vera Sans Mono", "Consolas", "Courier", monospace;
  padding: 24px 12px;
  width: 100%; }

code {
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
  border-bottom-right-radius: 6px;
  border-top-right-radius: 6px;
  border-bottom-left-radius: 6px;
  border-bottom-right-radius: 6px;
  border-bottom-left-radius: 6px;
  border-top-left-radius: 6px;
  background: #444;
  padding: 3px 6px;
  white-space: nowrap; }

hr {
  border: solid 2px #333;
  clear: both;
  height: 0px;
  margin: 24px 0;
  width: 100%; }

img {
  display: block;
  float: left; }

small {
  font-size: 12.8px; }

big {
  font-size: 19.2px; }

a {
  text-decoration: none;
  outline: none;
  color: #ffb366;
  transition: all 0.3s; }
  a:hover {
    text-decoration: underline;
    color: #ffcc99; }
  .social a:hover {
    text-decoration: none; }
  a:visited, a:focus {
    outline: none; }

.fa.fa-6x {
  font-size: 6em; }

.fa.fa-7x {
  font-size: 7em; }

.fa.fa-8x {
  font-size: 8em; }

.fa.fa-9x {
  font-size: 9em; }

.fa.fa-10x {
  font-size: 10em; }

.bios p {
  font-size: 18.4px;
  line-height: 1.5; }

a.blue, span.blue, em.blue, strong.blue, .tooltip .blue.tip {
  color: #8dcad9; }

a.blue.bg, span.blue.bg, em.blue.bg, strong.blue.bg, .tooltip .blue.bg.tip {
  background: #c7e5ec;
  color: #2b2b2b; }
  a.blue.bg:hover, span.blue.bg:hover, em.blue.bg:hover, strong.blue.bg:hover, .tooltip .blue.bg.tip:hover {
    color: #2b2b2b; }

a.blue:hover, span.blue:hover, em.blue:hover, strong.blue:hover, .tooltip .blue.tip:hover {
  color: #c7e5ec; }

a.red, span.red, em.red, strong.red, .tooltip .red.tip {
  color: #f56176; }

a.red.bg, span.red.bg, em.red.bg, strong.red.bg, .tooltip .red.bg.tip {
  background: #faa9b4;
  color: #2b2b2b; }
  a.red.bg:hover, span.red.bg:hover, em.red.bg:hover, strong.red.bg:hover, .tooltip .red.bg.tip:hover {
    color: #2b2b2b; }

a.red:hover, span.red:hover, em.red:hover, strong.red:hover, .tooltip .red.tip:hover {
  color: #faa9b4; }

a.green, span.green, em.green, strong.green, .tooltip .green.tip {
  color: #bbd16e; }

a.green.bg, span.green.bg, em.green.bg, strong.green.bg, .tooltip .green.bg.tip {
  background: #dfeabb;
  color: #2b2b2b; }
  a.green.bg:hover, span.green.bg:hover, em.green.bg:hover, strong.green.bg:hover, .tooltip .green.bg.tip:hover {
    color: #2b2b2b; }

a.green:hover, span.green:hover, em.green:hover, strong.green:hover, .tooltip .green.tip:hover {
  color: #dfeabb; }

a.gray, span.gray, em.gray, strong.gray, .tooltip .gray.tip {
  color: #e4e4e4; }

a.gray.bg, span.gray.bg, em.gray.bg, strong.gray.bg, .tooltip .gray.bg.tip {
  background: white;
  color: #2b2b2b; }
  a.gray.bg:hover, span.gray.bg:hover, em.gray.bg:hover, strong.gray.bg:hover, .tooltip .gray.bg.tip:hover {
    color: #2b2b2b; }

a.gray:hover, span.gray:hover, em.gray:hover, strong.gray:hover, .tooltip .gray.tip:hover {
  color: white; }

a.orange, span.orange, em.orange, strong.orange, .tooltip .orange.tip {
  color: #ffb366; }

a.orange.bg, span.orange.bg, em.orange.bg, strong.orange.bg, .tooltip .orange.bg.tip {
  background: #ffcc99;
  color: #2b2b2b; }
  a.orange.bg:hover, span.orange.bg:hover, em.orange.bg:hover, strong.orange.bg:hover, .tooltip .orange.bg.tip:hover {
    color: #2b2b2b; }

a.orange:hover, span.orange:hover, em.orange:hover, strong.orange:hover, .tooltip .orange.tip:hover {
  color: #ffcc99; }

a.purple, span.purple, em.purple, strong.purple, .tooltip .purple.tip {
  color: #a491c2; }

a.purple.bg, span.purple.bg, em.purple.bg, strong.purple.bg, .tooltip .purple.bg.tip {
  background: #cdc2de;
  color: #2b2b2b; }
  a.purple.bg:hover, span.purple.bg:hover, em.purple.bg:hover, strong.purple.bg:hover, .tooltip .purple.bg.tip:hover {
    color: #2b2b2b; }

a.purple:hover, span.purple:hover, em.purple:hover, strong.purple:hover, .tooltip .purple.tip:hover {
  color: #cdc2de; }

.breadcrumb {
  margin-top: 12px;
  text-transform: lowercase; }

.tooltip {
  border-bottom: dotted 2px #666;
  cursor: pointer;
  position: relative;
  white-space: nowrap; }
  .tooltip .tip {
    white-space: normal;
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 3;
    margin-bottom: 12px;
    margin-left: 0;
    width: 240px;
    border-top-left-radius: 6px;
    border-top-right-radius: 6px;
    border-bottom-right-radius: 6px;
    border-top-right-radius: 6px;
    border-bottom-left-radius: 6px;
    border-bottom-right-radius: 6px;
    border-bottom-left-radius: 6px;
    border-top-left-radius: 6px;
    background: #fff;
    border: solid 3px #2b2b2b;
    color: #333;
    padding: 12px;
    font-size: 13px;
    font-style: normal;
    text-align: left; }

.messages {
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px;
  border-top-right-radius: 3px;
  border-bottom-left-radius: 3px;
  border-bottom-right-radius: 3px;
  border-bottom-left-radius: 3px;
  border-top-left-radius: 3px;
  margin-bottom: 24px;
  padding: 24px; }
  .messages.error {
    background: #fef1f3;
    color: #b20b23; }
  .messages.success {
    background: #dfeabb;
    color: #6b7e28; }
  .messages ul, .messages li {
    margin: 0;
    padding: 0; }
  .messages ul {
    margin-left: 24px; }

label {
  font-weight: normal; }

fieldset {
  border: 0;
  margin: 24px 0 0 0;
  padding: 0; }
  fieldset.contact {
    display: none; }
    fieldset.contact .messages {
      display: none; }
    fieldset.contact .form-item {
      max-width: 1024px;
      margin-left: auto;
      margin-right: auto;
      line-height: 1;
      margin-bottom: 12px; }
      fieldset.contact .form-item::after {
        clear: both;
        content: "";
        display: table; }
    fieldset.contact label {
      display: none; }
    fieldset.contact input, fieldset.contact select, fieldset.contact textarea {
      color: #333;
      margin-bottom: 0; }
      @media (max-width: 768px) {
        fieldset.contact input, fieldset.contact select, fieldset.contact textarea {
          font-size: 18.4px;
          line-height: 1.3;
          margin-top: 0; } }
    fieldset.contact input[type="submit"] {
      color: #fff;
      font-weight: normal;
      /*text-transform: lowercase;*/
      width: 100%;
      margin-bottom: 12px; }
      fieldset.contact input[type="submit"]:hover {
        background-color: #67b9cc; }

ul.projects {
  margin: 24px 0 0 0;
  padding: 0; }
  ul.projects::after {
    clear: both;
    content: "";
    display: table; }
  ul.projects li {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 23.23176%;
    background: #fff;
    margin-bottom: 24px;
    border: solid 1px #2b2b2b;
    overflow: hidden; }
    ul.projects li:last-child {
      margin-right: 0; }
    ul.projects li:nth-child(4n) {
      margin-right: 0; }
    ul.projects li:nth-child(4n+1) {
      clear: left; }
    @media (max-width: 490px) {
      ul.projects li {
        float: left;
        display: block;
        margin-right: 2.35765%;
        width: 48.82117%;
        margin-bottom: 12px;
        min-width: 130px; }
        ul.projects li:last-child {
          margin-right: 0; }
        ul.projects li:nth-child(2n) {
          margin-right: 0; }
        ul.projects li:nth-child(2n+1) {
          clear: left; }
        ul.projects li:last-child {
          margin-bottom: 24px; } }
  ul.projects a {
    background: #444;
    cursor: pointer;
    display: block;
    float: none;
    margin: 0;
    overflow: hidden;
    padding: 48px;
    text-indent: -9999px;
    width: 180px;
    height: 135px;
    /*
    width: 100% !important;
    height: auto !important;
    */
    filter: grayscale(100);
    -webkit-filter: grayscale(100);
    -moz-filter: grayscale(100);
    filter: grayscale(100);
    filter: gray;
    -webkit-filter: grayscale(1); }
    ul.projects a:hover {
      filter: grayscale(0);
      -webkit-filter: grayscale(0);
      -moz-filter: grayscale(0);
      filter: grayscale(0);
      filter: gray;
      -webkit-filter: grayscale(0); }
    ul.projects a.socha-dev-white-label {
      background: url("../images/socha-dev.png") no-repeat 0 0;
      background-size: cover;
      /*      @include media("<=md") {
        background: url($logo-url=186) no-repeat 0 0;
        bacgkround-size: 100% auto;
      }*/ }
    ul.projects a.science {
      background-image: url("../images/sprites.png");
      background-position: -200px 0px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
    ul.projects a.discovery-education {
      background-image: url("../images/sprites.png");
      background-position: 0px -214px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
    ul.projects a.repequity {
      background-image: url("../images/sprites.png");
      background-position: 0px -349px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
    ul.projects a.fcc-gov {
      background-image: url("../images/sprites.png");
      background-position: -180px -349px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
    ul.projects a.the-national-press-club {
      background-image: url("../images/sprites.png");
      background-position: -380px 0px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
    ul.projects a.the-cook-political-report {
      background-image: url("../images/sprites.png");
      background-position: -180px -214px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
    ul.projects a.channel-democracy {
      background-image: url("../images/sprites.png");
      background-position: -380px -135px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }

#modal {
  display: none;
  background: rgba(0, 0, 0, 0.5);
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 10; }
  #modal .modal {
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;
    border-top-right-radius: 3px;
    border-bottom-left-radius: 3px;
    border-bottom-right-radius: 3px;
    border-bottom-left-radius: 3px;
    border-top-left-radius: 3px;
    background: #fff;
    color: #2b2b2b;
    font-size: 16px;
    margin: 24px auto;
    padding: 24px;
    max-width: 1024px; }
    #modal .modal::after {
      clear: both;
      content: "";
      display: table; }
    #modal .modal h3 {
      text-transform: none; }
    #modal .modal a {
      color: #41a7bf; }
    @media (min-width: 769px) {
      #modal .modal.white-label {
        width: 40%;
        height: auto;
        bottom: auto; } }
    #modal .modal.white-label .alpha {
      display: none; }
    #modal .modal.white-label .beta {
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 100%; }
      #modal .modal.white-label .beta:last-child {
        margin-right: 0; }
    @media (min-width: 769px) {
      #modal .modal .alpha {
        float: left;
        display: block;
        margin-right: 2.35765%;
        width: 65.88078%;
        margin-left: 0%;
        height: 100%;
        overflow: hidden; }
        #modal .modal .alpha:last-child {
          margin-right: 0; }
      #modal .modal .beta {
        float: left;
        display: block;
        margin-right: 2.35765%;
        width: 31.76157%;
        height: 100%;
        overflow: hidden; }
        #modal .modal .beta:last-child {
          margin-right: 0; }
        #modal .modal .beta:nth-child(0) {
          margin-right: 0; }
      #modal .modal img {
        float: left;
        height: 100%; } }
    @media (max-width: 768px) {
      #modal .modal {
        margin: 24px;
        padding: 12px; }
        #modal .modal .alpha::after {
          clear: both;
          content: "";
          display: table; }
        #modal .modal .beta {
          padding: 24px 12px 12px 12px; }
        #modal .modal img {
          height: auto;
          width: 100%; } }

@media (min-width: 768px) {
  .bios {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 82.94039%;
    margin-left: 8.5298%; }
    .bios:last-child {
      margin-right: 0; } }

.bios .container {
  margin-top: 48px; }

.bios .alpha {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 14.70196%; }
  .bios .alpha:last-child {
    margin-right: 0; }

.bios .beta {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 82.94039%; }
  .bios .beta:last-child {
    margin-right: 0; }

.bios img.avatar {
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
  border-bottom-right-radius: 6px;
  border-top-right-radius: 6px;
  border-bottom-left-radius: 6px;
  border-bottom-right-radius: 6px;
  border-bottom-left-radius: 6px;
  border-top-left-radius: 6px;
  display: block;
  width: 100%;
  margin: 0 0 12px 0; }
  @media (max-width: 767px) {
    .bios img.avatar {
      border-top-left-radius: 3px;
      border-top-right-radius: 3px;
      border-bottom-right-radius: 3px;
      border-top-right-radius: 3px;
      border-bottom-left-radius: 3px;
      border-bottom-right-radius: 3px;
      border-bottom-left-radius: 3px;
      border-top-left-radius: 3px; } }

.bios ul.social {
  list-style: none;
  margin: 0;
  padding: 0; }
  .bios ul.social li {
    float: left;
    margin: 0 12px 0 0; }

.stripe.hero {
  padding: 0;
  background-repeat: no-repeat;
  background-position: center top;
  border-top: solid 1px #000;
  border-bottom: solid 1px #000; }
  @media (min-width: 769px) {
    .stripe.hero {
      height: 500px; } }
  @media (max-width: 768px) {
    .stripe.hero {
      background-size: auto 100%; } }
  body.front .stripe.hero {
    border-top: solid 1px #000;
    border-bottom: solid 1px #bbb;
    margin-top: 24px;
    padding-top: 24px; }
  .stripe.hero .intro {
    border-top-left-radius: 6px;
    border-top-right-radius: 6px;
    border-bottom-right-radius: 6px;
    border-top-right-radius: 6px;
    border-bottom-left-radius: 6px;
    border-bottom-right-radius: 6px;
    border-bottom-left-radius: 6px;
    border-top-left-radius: 6px;
    background: rgba(0, 0, 0, 0.6);
    margin-top: 72px;
    padding: 12px 24px; }
    @media (min-width: 769px) {
      .stripe.hero .intro {
        float: left;
        display: block;
        margin-right: 2.35765%;
        width: 57.35098%;
        margin-left: 8.5298%;
        font-size: 28.8px; }
        .stripe.hero .intro:last-child {
          margin-right: 0; } }
    @media (max-width: 768px) {
      .stripe.hero .intro {
        margin: 24px; } }

.comic-banner {
  background: url(../images/comics/comic-bg-00.png) repeat-x 0 0 transparent;
  display: block;
  text-align: center;
  margin: 24px 0 0 0; }
  .comic-banner::after {
    clear: both;
    content: "";
    display: table; }
  @media (min-width: 768px) {
    .comic-banner {
      margin: 48px 0 0 0;
      border: solid 1px #444; } }
  .comic-banner .issue {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 14.70196%;
    background: #333;
    border-right: solid 1px #444;
    height: 250px;
    position: relative;
    font-size: 16px;
    font-style: normal;
    text-align: center; }
    @media (max-width: 767px) {
      .comic-banner .issue {
        display: none; } }
    .comic-banner .issue:last-child {
      margin-right: 0; }
    .comic-banner .issue .numbers, .comic-banner .issue .numbers .date, .comic-banner .issue .publisher {
      display: block;
      position: absolute;
      left: 0;
      width: 100%;
      padding: 12px 0; }
    .comic-banner .issue .numbers {
      top: 0;
      height: 185px; }
      .comic-banner .issue .numbers .price {
        display: block;
        color: #e4e4e4;
        font-size: 51.2px;
        padding: 24px 0; }
      .comic-banner .issue .numbers .date {
        width: auto;
        left: auto;
        right: 0;
        bottom: 0;
        color: #444;
        padding: 6px 12px;
        background: url(../images/comics/comic-bg-02.png) repeat 0 0 #fff; }
        .comic-banner .issue .numbers .date .number {
          display: block;
          font-size: 25.6px;
          font-style: italic;
          font-weight: bold; }
    .comic-banner .issue .publisher {
      bottom: 0;
      background: url("../images/socha-dev.png") no-repeat 0 0;
      background-size: cover;
      border-top: solid 1px #444;
      color: #fff;
      text-transform: uppercase;
      height: 65px; }
  .comic-banner .title {
    position: relative;
    font-size: 57.6px;
    font-weight: normal; }
    @media (min-width: 769px) {
      .comic-banner .title {
        float: left;
        display: block;
        margin-right: 2.35765%;
        width: 82.94039%;
        padding: 48px 0; }
        .comic-banner .title:last-child {
          margin-right: 0; } }
    .comic-banner .title .tooltip {
      border-bottom: 0;
      font-weight: bold;
      white-space: normal; }
      .comic-banner .title .tooltip .tip {
        font-weight: normal; }
    .comic-banner .title .authority {
      background: url("../images/comics/comics-code-authority.jpg") no-repeat 0 0;
      display: block;
      position: absolute;
      top: 0;
      right: 0;
      width: 65px;
      height: 79px;
      margin: 24px; }
      @media (max-width: 767px) {
        .comic-banner .title .authority {
          display: none; } }

ol.comic {
  font-size: 13px;
  line-height: 1.5;
  margin: 0;
  padding: 0;
  background: url(../images/comics/comic-bg-01.png) repeat 0 0 #fff;
  color: #2b2b2b;
  padding: 12px; }
  @media (min-width: 768px) {
    ol.comic {
      border: solid 1px #444;
      padding: 24px;
      padding-bottom: 0; } }
  ol.comic > li {
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;
    border-top-right-radius: 3px;
    border-bottom-left-radius: 3px;
    border-bottom-right-radius: 3px;
    border-bottom-left-radius: 3px;
    border-top-left-radius: 3px;
    background: url(../images/comics/comic-bg-02.png) repeat 0 0 #fff;
    border: solid 1px #bbb;
    position: relative;
    margin-bottom: 12px;
    padding: 12px;
    list-style: none; }
    @media (min-width: 768px) {
      ol.comic > li {
        float: left;
        display: block;
        margin-right: 2.35765%;
        width: 31.76157%;
        min-height: 300px;
        margin-bottom: 24px; }
        ol.comic > li:last-child {
          margin-right: 0; }
        ol.comic > li:nth-child(3n) {
          margin-right: 0; }
        ol.comic > li:nth-child(3n+1) {
          clear: left; } }
    ol.comic > li::after {
      clear: both;
      content: "";
      display: table; }
    ol.comic > li:nth-child(2n+1) {
      border-color: #e4e4e4; }
      ol.comic > li:nth-child(2n+1) .narrator {
        border-color: #e4e4e4; }
    ol.comic > li:nth-child(4n) {
      background: #fff; }
    ol.comic > li:nth-child(6n) {
      border: solid 1px #b3b3b3; }
    ol.comic > li em, ol.comic > li strong, ol.comic > li .tooltip {
      background: #fff; }
  ol.comic ul {
    margin: 24px 0 0 24px;
    padding: 0;
    list-style: none; }
    ol.comic ul.bullets {
      list-style: disc; }
    ol.comic ul li {
      background: #fff;
      margin: 0 0 12px 0; }
      ol.comic ul li:last-child {
        margin: 0; }
  ol.comic img.avatar {
    border-top-left-radius: 6px;
    border-top-right-radius: 6px;
    border-bottom-right-radius: 6px;
    border-top-right-radius: 6px;
    border-bottom-left-radius: 6px;
    border-bottom-right-radius: 6px;
    border-bottom-left-radius: 6px;
    border-top-left-radius: 6px;
    width: 60px;
    height: 60px;
    margin: 0 12px 0 0; }
  ol.comic img.illustration {
    display: block;
    margin: 12px auto;
    width: 100%; }
    ol.comic img.illustration::after {
      clear: both;
      content: "";
      display: table; }
    ol.comic img.illustration.top {
      margin-top: 0; }
    @media (min-width: 768px) {
      ol.comic img.illustration.bottom {
        position: absolute;
        bottom: 0;
        z-index: 0;
        width: auto;
        margin: 0 0 12px 0; } }
    @media (max-width: 767px) {
      ol.comic img.illustration.bottom {
        margin-bottom: 0; } }
  ol.comic .no-img img {
    display: none; }
  ol.comic .tooltip {
    border-bottom-color: #bbb; }
    ol.comic .tooltip .tip {
      border-color: #666;
      text-transform: none; }
    ol.comic .tooltip.no-img, ol.comic .tooltip.project {
      white-space: normal; }
  ol.comic .blue {
    color: #348699; }
  ol.comic .red {
    color: #b20b23; }
  ol.comic .green {
    color: #5b6b22; }
  ol.comic .gray {
    color: #bbb; }
  ol.comic .orange {
    color: #e67300; }
  ol.comic .purple {
    color: #574278; }
  ol.comic strong {
    text-transform: uppercase; }
  ol.comic .actor {
    font-weight: normal; }
  ol.comic .brand {
    color: #333;
    font-weight: bold; }
    ol.comic .brand.actor {
      color: #000;
      font-weight: normal; }
  ol.comic .narrator {
    display: block;
    background: #fff; }
    @media (min-width: 768px) {
      ol.comic .narrator {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        z-index: 1;
        border-bottom: solid 1px #bbb;
        padding: 12px; } }
  ol.comic .index {
    border-top-left-radius: 12px;
    border-top-right-radius: 12px;
    border-bottom-right-radius: 12px;
    border-top-right-radius: 12px;
    border-bottom-left-radius: 12px;
    border-bottom-right-radius: 12px;
    border-bottom-left-radius: 12px;
    border-top-left-radius: 12px;
    display: block;
    width: 24px;
    height: 24px;
    margin: 12px;
    position: absolute;
    bottom: 0;
    right: 0;
    text-align: center;
    line-height: 2;
    font-size: 11px;
    background: #fff;
    border: solid 1px #e4e4e4;
    color: #bbb; }
    @media (max-width: 767px) {
      ol.comic .index {
        display: none; } }

/*# sourceMappingURL=data:application/json;base64, */
