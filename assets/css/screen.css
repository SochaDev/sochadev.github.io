@charset "UTF-8";
@import url(https://fonts.googleapis.com/css?family=Ubuntu:400);
@import url(https://fonts.googleapis.com/css?family=Open+Sans);
button, input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: #4bc3e2;
  border: 0;
  border-radius: 3px;
  color: #fff;
  cursor: pointer;
  display: inline-block;
  font-family: "Open Sans", sans-serif;
  font-size: 22.4px;
  -webkit-font-smoothing: antialiased;
  font-weight: 600;
  line-height: 1;
  padding: 0.5em 1em;
  text-decoration: none;
  transition: background-color 150ms ease;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap; }
  button:hover, button:focus, input[type="button"]:hover, input[type="button"]:focus, input[type="reset"]:hover, input[type="reset"]:focus, input[type="submit"]:hover, input[type="submit"]:focus {
    background-color: #3c9cb5;
    color: #fff; }
  button:disabled, input[type="button"]:disabled, input[type="reset"]:disabled, input[type="submit"]:disabled {
    cursor: not-allowed;
    opacity: 0.5; }
    button:disabled:hover, input[type="button"]:disabled:hover, input[type="reset"]:disabled:hover, input[type="submit"]:disabled:hover {
      background-color: #4bc3e2; }

fieldset {
  background-color: transparent;
  border: 2px solid #ccc;
  margin: 0 0 0.5em;
  padding: 1em; }

input,
label,
select {
  display: block;
  font-family: "Open Sans", sans-serif;
  font-size: 22.4px; }

label {
  font-weight: 600;
  margin-bottom: 0.25em; }
  label.required::after {
    content: "*"; }
  label abbr {
    display: none; }

input[type="color"], input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="email"], input[type="month"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="time"], input[type="url"], input[type="week"], input:not([type]), textarea,
select[multiple=multiple] {
  background-color: #f4f4f4;
  border: 2px solid #ccc;
  border-radius: 3px;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.02);
  box-sizing: border-box;
  font-family: "Open Sans", sans-serif;
  font-size: 22.4px;
  margin-bottom: 0.5em;
  padding: 0.33333em;
  transition: border-color 150ms ease;
  width: 100%; }
  input[type="color"]:hover, input[type="date"]:hover, input[type="datetime"]:hover, input[type="datetime-local"]:hover, input[type="email"]:hover, input[type="month"]:hover, input[type="number"]:hover, input[type="password"]:hover, input[type="search"]:hover, input[type="tel"]:hover, input[type="text"]:hover, input[type="time"]:hover, input[type="url"]:hover, input[type="week"]:hover, input:not([type]):hover, textarea:hover,
  select[multiple=multiple]:hover {
    border-color: #a3a3a3; }
  input[type="color"]:focus, input[type="date"]:focus, input[type="datetime"]:focus, input[type="datetime-local"]:focus, input[type="email"]:focus, input[type="month"]:focus, input[type="number"]:focus, input[type="password"]:focus, input[type="search"]:focus, input[type="tel"]:focus, input[type="text"]:focus, input[type="time"]:focus, input[type="url"]:focus, input[type="week"]:focus, input:not([type]):focus, textarea:focus,
  select[multiple=multiple]:focus {
    border-color: #4bc3e2;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.02), 0 0 5px rgba(53, 188, 222, 0.6);
    outline: none; }
  input[type="color"]:disabled, input[type="date"]:disabled, input[type="datetime"]:disabled, input[type="datetime-local"]:disabled, input[type="email"]:disabled, input[type="month"]:disabled, input[type="number"]:disabled, input[type="password"]:disabled, input[type="search"]:disabled, input[type="tel"]:disabled, input[type="text"]:disabled, input[type="time"]:disabled, input[type="url"]:disabled, input[type="week"]:disabled, input:not([type]):disabled, textarea:disabled,
  select[multiple=multiple]:disabled {
    background-color: #e8e8e8;
    cursor: not-allowed; }
    input[type="color"]:disabled:hover, input[type="date"]:disabled:hover, input[type="datetime"]:disabled:hover, input[type="datetime-local"]:disabled:hover, input[type="email"]:disabled:hover, input[type="month"]:disabled:hover, input[type="number"]:disabled:hover, input[type="password"]:disabled:hover, input[type="search"]:disabled:hover, input[type="tel"]:disabled:hover, input[type="text"]:disabled:hover, input[type="time"]:disabled:hover, input[type="url"]:disabled:hover, input[type="week"]:disabled:hover, input:not([type]):disabled:hover, textarea:disabled:hover,
    select[multiple=multiple]:disabled:hover {
      border: 2px solid #ccc; }

textarea {
  resize: vertical; }

input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }

input[type="checkbox"],
input[type="radio"] {
  display: inline;
  margin-right: 0.25em; }
  input[type="checkbox"] + label,
  input[type="radio"] + label {
    display: inline-block; }

input[type="file"] {
  margin-bottom: 0.5em;
  width: 100%; }

select {
  margin-bottom: 1em;
  max-width: 100%;
  width: auto; }

/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
.clearfix::after {
  clear: both;
  content: "";
  display: table; }

.img-responsive {
  width: 100%;
  height: auto; }

@media (max-width: 768px) {
  .hide-mobile {
    display: none !important; } }

* {
  box-sizing: border-box; }

html {
  font-size: 17.6px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #2b2b2b; }

body {
  line-height: 1.5;
  font-family: 'Open Sans', -apple-system, ".SFNSText-Regular", "San Francisco", "Roboto", "Segoe UI", "Helvetica Neue", "Lucida Grande", sans-serif;
  color: #fff;
  background-color: #2b2b2b;
  margin: 24px 0;
  padding: 0;
  width: 100%; }
  @media (max-width: 768px) {
    body {
      font-size: 18.4px;
      margin-top: 0; }
      body h1 {
        font-size: 38.4px; }
      body h2 {
        font-size: 32px; }
      body h3 {
        font-size: 25.6px; } }

.container {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  max-width: 768px;
  margin: 0 auto; }
  .container.fullblock {
    display: block; }

.alpha {
  padding-right: 12px;
  width: 50%; }

.beta {
  padding-left: 12px;
  width: 50%; }

@media (max-width: 768px) {
  .container {
    display: block;
    max-width: 100%; }
  .alpha,
  .beta {
    width: 100%;
    padding: 0; } }

.fullwidth {
  width: 100%; }

.mark {
  position: absolute;
  top: 0;
  right: 20%;
  height: 36px;
  width: 192px; }
  .mark .band {
    display: inline-block;
    float: left;
    clear: none;
    width: 48px;
    height: 36px; }
  .mark .sochadev-gray {
    background-color: #1c1c1c; }
  .mark .sochadev-blue {
    background-color: #23b3d7; }
  .mark .sochadev-red {
    background-color: #b20b23; }
  .mark .sochadev-green {
    background-color: #7f9731; }
  @media (max-width: 768px) {
    .mark {
      right: 12px;
      height: 30px;
      width: 144px; }
      .mark .band {
        width: 36px;
        height: 30px; } }
  header .mark {
    height: 36px;
    width: 36px; }
    header .mark .band {
      width: 9px;
      height: 36px; }

header {
  background: rgba(0, 0, 0, 0.7);
  display: none;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 100; }
  header::after {
    clear: both;
    content: "";
    display: table; }
  header.stripe {
    padding: 12px; }
  header .fullwidth {
    height: 36px;
    position: relative; }
  header a {
    color: #fff;
    display: block;
    height: 36px;
    line-height: 36px;
    position: absolute;
    bottom: 0;
    margin: 0;
    width: auto; }
    header a:hover {
      color: #fff; }
    header a.brand {
      left: 0;
      font-family: 'Ubuntu', sans-serif;
      font-size: 41.6px;
      font-weight: 400;
      text-decoration: none;
      width: 88%; }
      @media (max-width: 768px) {
        header a.brand {
          font-size: 38.4px;
          left: 12px; } }
    header a.logo {
      right: 0; }
  header span.tagline {
    display: block;
    font-size: 16px;
    font-weight: normal;
    line-height: 36px;
    margin: 0 0 0 0;
    text-align: center;
    text-indent: 10%;
    text-transform: lowercase; }
    body.front header span.tagline {
      text-indent: 18%; }
    @media (max-width: 768px) {
      header span.tagline {
        display: none; } }

.stripe {
  padding: 24px;
  width: 100%; }
  .stripe.blue {
    background: #23b3d7; }
    .stripe.blue hr {
      border-color: #35bcde; }
  .stripe.red {
    background: #b20b23; }
    .stripe.red hr {
      border-color: #ca0c28; }
  .stripe.green {
    background: #7f9731; }
    .stripe.green hr {
      border-color: #8faa37; }
  .stripe.gray {
    background: #333; }
    .stripe.gray hr {
      border-color: #404040; }
  .stripe.darkgray {
    background: #2b2b2b; }
    .stripe.darkgray hr {
      border-color: #383838; }

.title {
  margin-top: 30px; }
  @media (min-width: 769px) {
    .title {
      margin-top: 0; } }

.intro {
  padding-bottom: 72px; }
  .intro .alpha {
    padding-right: 60px; }
    .intro .alpha hr {
      margin-top: 0; }
    .intro .alpha p:last-child {
      margin-bottom: 24px; }
  .intro .beta {
    padding-left: 0;
    position: relative; }
    .intro .beta > img {
      position: absolute;
      left: 12px;
      top: -270px; }
  @media (max-width: 768px) {
    .intro {
      padding-bottom: 24px; }
      .intro .alpha {
        padding-right: 0; }
      .intro .beta > img {
        display: none; } }

.icon-stripe {
  padding: 0 24px; }
  @media (max-width: 768px) {
    .icon-stripe .beta,
    .icon-stripe .alpha {
      padding-bottom: 40.8px; }
      .icon-stripe .beta h2,
      .icon-stripe .alpha h2 {
        padding-top: 40.8px; } }
  @media (min-width: 769px) {
    .icon-stripe {
      padding: 0; }
      .icon-stripe .icon {
        position: relative; }
      .icon-stripe .alpha {
        width: 28%;
        text-align: left;
        padding-left: 12px; }
      .icon-stripe .beta {
        width: 72%;
        text-align: left;
        padding-right: 48px;
        padding-top: 0;
        padding-bottom: 72px; }
        .icon-stripe .beta h2 {
          padding-top: 72px; }
      .icon-stripe:nth-child(even) .alpha {
        width: 72%;
        text-align: left;
        padding-left: 48px;
        padding-bottom: 72px; }
        .icon-stripe:nth-child(even) .alpha h2 {
          padding-top: 72px; }
      .icon-stripe:nth-child(even) .beta {
        width: 28%;
        text-align: right;
        padding-right: 12px; } }

.overflow .icon {
  top: 15px; }

.triage .icon {
  top: 51.6px; }

.problem-solving .icon {
  left: 18px;
  font-size: 7.5em !important; }

.projects {
  padding-top: 0;
  padding-bottom: 72px;
  position: relative; }
  .projects #projects {
    padding-top: 72px; }
  @media (max-width: 768px) {
    .projects {
      padding-bottom: 48px; }
      .projects #projects {
        padding-top: 48px; } }

.contact-us {
  border-top: 1px solid #666;
  padding-bottom: 24px; }
  .contact-us h2 {
    padding-top: 48px; }
  .contact-us .contact-form {
    width: 100%; }
  .contact-us .form-container {
    width: 65%;
    margin: 0 auto; }
  @media (max-width: 768px) {
    .contact-us {
      padding-bottom: 0; }
      .contact-us h2 {
        padding-top: 24px; }
      .contact-us .form-container {
        width: 100%; } }

.team {
  padding-top: 0;
  padding-bottom: 0; }
  .team .exec-summary {
    padding-bottom: 0; }
  @media (min-width: 769px) {
    .team .team-about {
      padding: 24px 0; }
      .team .team-about .icon {
        position: relative; }
      .team .team-about .alpha {
        width: 28%;
        text-align: left;
        padding-left: 12px; }
      .team .team-about .beta {
        width: 72%;
        text-align: left;
        padding-left: 48px; }
    .team .exec-summary {
      padding-bottom: 24px; } }

footer {
  border-top: solid 1px #666; }
  body.front footer {
    border: 0;
    padding-top: 0; }
  footer p {
    color: #666;
    line-height: 1.7; }

img.logo {
  display: block;
  width: 36px;
  height: 36px; }
  h1 img.logo {
    float: right; }

p, ul, ol {
  margin-bottom: 24px;
  margin-top: 0; }
  p:last-child, ul:last-child, ol:last-child {
    margin-bottom: 0; }

h2, h3 {
  margin-bottom: 14.4px;
  margin-top: 0; }

h1, h2, h3, h4, h5 {
  font-family: 'Ubuntu', sans-serif;
  font-weight: 400;
  line-height: 1; }
  h1 a, h1 a:hover, h2 a, h2 a:hover, h3 a, h3 a:hover, h4 a, h4 a:hover, h5 a, h5 a:hover {
    text-decoration: none; }

h1 {
  font-size: 43.2px;
  margin: 0; }

.front h1 {
  font-size: 83.2px; }
  .front h1 div {
    font-size: 16px;
    margin-bottom: 12px; }

h2 {
  font-size: 38.4px;
  text-transform: lowercase; }

h3 {
  font-size: 30.4px;
  text-transform: lowercase; }

body.team main .stripe h2, body.team main .stripe h3,
body.download main .stripe h2,
body.download main .stripe h3 {
  text-transform: capitalize; }

h4 {
  font-size: 25.6px; }

h5 {
  font-size: 16px; }

b, strong, .bold, h4 {
  font-weight: 500; }

.capitalize {
  text-transform: capitalize; }

h5 {
  font-weight: 300; }

em, i {
  font-style: italic; }

pre {
  border-radius: 6px;
  background: #444;
  clear: both;
  color: #e4e4e4;
  font-family: "Bitstream Vera Sans Mono", "Consolas", "Courier", monospace;
  padding: 24px 12px;
  width: 100%; }

code {
  border-radius: 6px;
  background: #444;
  padding: 3px 6px;
  white-space: nowrap; }

hr {
  border: solid 2px #383838;
  clear: both;
  height: 0px;
  margin: 24px 0;
  width: 100%; }

small {
  font-size: 12.8px; }

big {
  font-size: 19.2px; }

a {
  text-decoration: none;
  outline: none;
  color: #ffb366;
  transition: all 0.3s; }
  a:hover {
    text-decoration: underline;
    color: #ffcc99; }
  .social a:hover {
    text-decoration: none; }
  a:visited, a:focus {
    outline: none; }

.bios p {
  font-size: 16px;
  line-height: 1.6; }

a.blue, span.blue, em.blue, strong.blue, .tooltip .blue.tip {
  color: #8dd9ec; }

a.blue.bg, span.blue.bg, em.blue.bg, strong.blue.bg, .tooltip .blue.bg.tip {
  background: #b9e8f4;
  color: #2b2b2b; }
  a.blue.bg:hover, span.blue.bg:hover, em.blue.bg:hover, strong.blue.bg:hover, .tooltip .blue.bg.tip:hover {
    color: #2b2b2b; }

a.blue:hover, span.blue:hover, em.blue:hover, strong.blue:hover, .tooltip .blue.tip:hover {
  color: #b9e8f4; }

a.red, span.red, em.red, strong.red, .tooltip .red.tip {
  color: #f56176; }

a.red.bg, span.red.bg, em.red.bg, strong.red.bg, .tooltip .red.bg.tip {
  background: #f891a0;
  color: #2b2b2b; }
  a.red.bg:hover, span.red.bg:hover, em.red.bg:hover, strong.red.bg:hover, .tooltip .red.bg.tip:hover {
    color: #2b2b2b; }

a.red:hover, span.red:hover, em.red:hover, strong.red:hover, .tooltip .red.tip:hover {
  color: #f891a0; }

a.green, span.green, em.green, strong.green, .tooltip .green.tip {
  color: #b3cc62; }

a.green.bg, span.green.bg, em.green.bg, strong.green.bg, .tooltip .green.bg.tip {
  background: #d8e5af;
  color: #2b2b2b; }
  a.green.bg:hover, span.green.bg:hover, em.green.bg:hover, strong.green.bg:hover, .tooltip .green.bg.tip:hover {
    color: #2b2b2b; }

a.green:hover, span.green:hover, em.green:hover, strong.green:hover, .tooltip .green.tip:hover {
  color: #d8e5af; }

a.gray, span.gray, em.gray, strong.gray, .tooltip .gray.tip {
  color: #e4e4e4; }

a.gray.bg, span.gray.bg, em.gray.bg, strong.gray.bg, .tooltip .gray.bg.tip {
  background: white;
  color: #2b2b2b; }
  a.gray.bg:hover, span.gray.bg:hover, em.gray.bg:hover, strong.gray.bg:hover, .tooltip .gray.bg.tip:hover {
    color: #2b2b2b; }

a.gray:hover, span.gray:hover, em.gray:hover, strong.gray:hover, .tooltip .gray.tip:hover {
  color: white; }

a.orange, span.orange, em.orange, strong.orange, .tooltip .orange.tip {
  color: #ffb366; }

a.orange.bg, span.orange.bg, em.orange.bg, strong.orange.bg, .tooltip .orange.bg.tip {
  background: #ffcc99;
  color: #2b2b2b; }
  a.orange.bg:hover, span.orange.bg:hover, em.orange.bg:hover, strong.orange.bg:hover, .tooltip .orange.bg.tip:hover {
    color: #2b2b2b; }

a.orange:hover, span.orange:hover, em.orange:hover, strong.orange:hover, .tooltip .orange.tip:hover {
  color: #ffcc99; }

a.purple, span.purple, em.purple, strong.purple, .tooltip .purple.tip {
  color: #a491c2; }

a.purple.bg, span.purple.bg, em.purple.bg, strong.purple.bg, .tooltip .purple.bg.tip {
  background: #cdc2de;
  color: #2b2b2b; }
  a.purple.bg:hover, span.purple.bg:hover, em.purple.bg:hover, strong.purple.bg:hover, .tooltip .purple.bg.tip:hover {
    color: #2b2b2b; }

a.purple:hover, span.purple:hover, em.purple:hover, strong.purple:hover, .tooltip .purple.tip:hover {
  color: #cdc2de; }

.breadcrumb {
  margin-top: 12px;
  text-transform: lowercase; }

.tooltip {
  border-bottom: dotted 2px #666;
  cursor: pointer;
  position: relative;
  white-space: nowrap; }
  .tooltip .tip {
    white-space: normal;
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 111;
    margin-bottom: 12px;
    margin-left: 0;
    width: 240px;
    border-radius: 6px;
    background: #fff;
    border: solid 3px #2b2b2b;
    color: #333;
    padding: 12px;
    font-size: 13px;
    font-style: normal;
    text-align: left;
    line-height: 1.4; }

@font-face {
  font-family: 'sochadev';
  src: url("../fonts/sochadev/sochadev.eot?32345647");
  src: url("../fonts/sochadev/sochadev.eot?32345647#iefix") format("embedded-opentype"), url("../fonts/sochadev/sochadev.woff?32345647") format("woff"), url("../fonts/sochadev/sochadev.ttf?32345647") format("truetype"), url("../fonts/sochadev/sochadev.svg?32345647#sochadev") format("svg");
  font-weight: normal;
  font-style: normal; }

/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */
/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */
/*
@media screen and (-webkit-min-device-pixel-ratio:0) {
  @font-face {
    font-family: 'sochadev';
    src: url('../font/sochadev.svg?32345647#sochadev') format('svg');
  }
}
*/
.icon.icon-2x {
  font-size: 2em; }

.icon.icon-3x {
  font-size: 3em; }

.icon.icon-4x {
  font-size: 4em; }

.icon.icon-5x {
  font-size: 5em; }

.icon.icon-6x {
  font-size: 6em; }

.icon.icon-7x {
  font-size: 7em; }

.icon.icon-8x {
  font-size: 8em; }

.icon.icon-9x {
  font-size: 9em; }

.icon.icon-10x {
  font-size: 10em; }

.icon.icon-11x {
  font-size: 11em; }

.icon.icon-12x {
  font-size: 12em; }

.icon-spin {
  -webkit-animation: icon-spin 2s infinite linear;
  animation: icon-spin 2s infinite linear; }

.icon-pulse {
  -webkit-animation: icon-spin 1s infinite steps(8);
  animation: icon-spin 1s infinite steps(8); }

@-webkit-keyframes icon-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg); } }

@keyframes icon-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg); } }

.icon-rotate-90 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1);
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg); }

.icon-rotate-180 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg); }

.icon-rotate-270 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
  -webkit-transform: rotate(270deg);
  -ms-transform: rotate(270deg);
  transform: rotate(270deg); }

.icon-flip-horizontal {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1);
  -webkit-transform: scale(-1, 1);
  -ms-transform: scale(-1, 1);
  transform: scale(-1, 1); }

.icon-flip-vertical {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);
  -webkit-transform: scale(1, -1);
  -ms-transform: scale(1, -1);
  transform: scale(1, -1); }

:root .fa-rotate-90,
:root .fa-rotate-180,
:root .fa-rotate-270,
:root .fa-flip-horizontal,
:root .fa-flip-vertical {
  -webkit-filter: none;
  filter: none; }

.icon {
  font-family: "sochadev";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  text-align: center;
  font-size: 1em;
  width: 1em;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-chat:before {
  content: '\e800'; }

/* '' */
.icon-comment:before {
  content: '\e801'; }

/* '' */
.icon-users:before {
  content: '\e802'; }

/* '' */
.icon-letter-a:before {
  content: '\e803'; }

/* '' */
.icon-user:before {
  content: '\e804'; }

/* '' */
.icon-heart:before {
  content: '\e805'; }

/* '' */
.icon-drupal:before {
  content: '\e806'; }

/* '' */
.icon-facebook-squared:before {
  content: '\e807'; }

/* '' */
.icon-github-circled:before {
  content: '\e808'; }

/* '' */
.icon-html5:before {
  content: '\e809'; }

/* '' */
.icon-instagram:before {
  content: '\e80a'; }

/* '' */
.icon-linkedin-squared:before {
  content: '\e80b'; }

/* '' */
.icon-youtube-play:before {
  content: '\e80c'; }

/* '' */
.icon-vimeo-squared:before {
  content: '\e80d'; }

/* '' */
.icon-twitter-squared:before {
  content: '\e80e'; }

/* '' */
.icon-slack:before {
  content: '\e80f'; }

/* '' */
.icon-stackoverflow:before {
  content: '\e810'; }

/* '' */
.icon-linux:before {
  content: '\e811'; }

/* '' */
.icon-gplus-squared:before {
  content: '\e812'; }

/* '' */
.icon-apple:before {
  content: '\e813'; }

/* '' */
.icon-android:before {
  content: '\e814'; }

/* '' */
.icon-css3:before {
  content: '\e815'; }

/* '' */
.icon-git-squared:before {
  content: '\e816'; }

/* '' */
.icon-gauge:before {
  content: '\e817'; }

/* '' */
.icon-chart-bar:before {
  content: '\e818'; }

/* '' */
.icon-chart-area:before {
  content: '\e819'; }

/* '' */
.icon-chart-pie:before {
  content: '\e81a'; }

/* '' */
.icon-chart-line:before {
  content: '\e81b'; }

/* '' */
.icon-ticket:before {
  content: '\e81c'; }

/* '' */
.icon-rocket:before {
  content: '\e81d'; }

/* '' */
.icon-bug:before {
  content: '\e81e'; }

/* '' */
.icon-certificate:before {
  content: '\e81f'; }

/* '' */
.icon-beaker:before {
  content: '\e820'; }

/* '' */
.icon-magic:before {
  content: '\e821'; }

/* '' */
.icon-truck:before {
  content: '\e822'; }

/* '' */
.icon-medkit:before {
  content: '\e823'; }

/* '' */
.icon-ambulance:before {
  content: '\e824'; }

/* '' */
.icon-bomb:before {
  content: '\e825'; }

/* '' */
.icon-shield:before {
  content: '\e826'; }

/* '' */
.icon-heartbeat:before {
  content: '\e827'; }

/* '' */
.icon-tint:before {
  content: '\e828'; }

/* '' */
.icon-star:before {
  content: '\e829'; }

/* '' */
.icon-child:before {
  content: '\e82a'; }

/* '' */
.icon-cancel-circled:before {
  content: '\e82b'; }

/* '' */
.icon-ok-circled:before {
  content: '\e82c'; }

/* '' */
.icon-help-circled:before {
  content: '\e82d'; }

/* '' */
.icon-info-circled:before {
  content: '\e82e'; }

/* '' */
.icon-thumbs-up-alt:before {
  content: '\e82f'; }

/* '' */
.icon-cog:before {
  content: '\e830'; }

/* '' */
.icon-cog-alt:before {
  content: '\e831'; }

/* '' */
.icon-play-circled:before {
  content: '\e832'; }

/* '' */
.icon-play:before {
  content: '\e833'; }

/* '' */
.icon-diamond:before {
  content: '\e834'; }

/* '' */
.icon-angle-right:before {
  content: '\e835'; }

/* '' */
.icon-puzzle:before {
  content: '\e836'; }

/* '' */
.icon-pencil:before {
  content: '\e837'; }

/* '' */
.icon-link:before {
  content: '\e838'; }

/* '' */
.icon-link-ext:before {
  content: '\e839'; }

/* '' */
.icon-flag:before {
  content: '\e83a'; }

/* '' */
.icon-picture:before {
  content: '\e83b'; }

/* '' */
.icon-mail-squared:before {
  content: '\e83c'; }

/* '' */
.icon-mail-alt:before {
  content: '\e83d'; }

/* '' */
.icon-clock:before {
  content: '\e83e'; }

/* '' */
.icon-lightbulb:before {
  content: '\e83f'; }

/* '' */
.icon-award:before {
  content: '\e840'; }

/* '' */
.icon-flash:before {
  content: '\e841'; }

/* '' */
.icon-sun:before {
  content: '\e842'; }

/* '' */
.icon-globe:before {
  content: '\e843'; }

/* '' */
.icon-circle:before {
  content: '\e844'; }

/* '' */
.icon-circle-notch:before {
  content: '\e845'; }

/* '' */
.icon-cubes:before {
  content: '\e846'; }

/* '' */
.icon-cube:before {
  content: '\e847'; }

/* '' */
.icon-tree:before {
  content: '\e848'; }

/* '' */
.icon-database:before {
  content: '\e849'; }

/* '' */
.icon-lifebuoy:before {
  content: '\e84a'; }

/* '' */
.icon-user-md:before {
  content: '\e84b'; }

/* '' */
.icon-motorcycle:before {
  content: '\e84c'; }

/* '' */
.icon-right-circled:before {
  content: '\e84d'; }

/* '' */
.icon-angle-double-right:before {
  content: '\e84e'; }

/* '' */
.icon-right-dir:before {
  content: '\e84f'; }

/* '' */
.icon-right-open:before {
  content: '\e850'; }

/* '' */
.icon-menu:before {
  content: '\e851'; }

/* '' */
.icon-phone-squared:before {
  content: '\e852'; }

/* '' */
.icon-phone:before {
  content: '\e853'; }

/* '' */
.icon-rss-squared:before {
  content: '\e854'; }

/* '' */
.icon-file-pdf:before {
  content: '\e855'; }

/* '' */
.icon-doc-text-inv:before {
  content: '\e856'; }

/* '' */
.icon-doc-inv:before {
  content: '\e857'; }

/* '' */
.icon-bell:before {
  content: '\e858'; }

/* '' */
.icon-quote-left:before {
  content: '\e859'; }

/* '' */
.icon-quote-right:before {
  content: '\e85a'; }

/* '' */
.icon-print:before {
  content: '\e85b'; }

/* '' */
.icon-attention:before {
  content: '\e85c'; }

/* '' */
.icon-attention-circled:before {
  content: '\e85d'; }

/* '' */
.icon-flag-empty:before {
  content: '\e85e'; }

/* '' */
.icon-flag-checkered:before {
  content: '\e85f'; }

/* '' */
.icon-eye:before {
  content: '\e860'; }

/* '' */
.icon-pin:before {
  content: '\e861'; }

/* '' */
.icon-search:before {
  content: '\e862'; }

/* '' */
.messages {
  border-radius: 3px;
  margin-bottom: 24px;
  padding: 24px; }
  .messages.error {
    background: #fef1f3;
    color: #b20b23; }
  .messages.success {
    background: #ebf2d5;
    color: #7f9731; }
  .messages ul, .messages li {
    margin: 0;
    padding: 0; }
  .messages ul {
    margin-left: 24px; }

label {
  font-weight: normal; }

fieldset {
  border: 0;
  margin: 24px 0 0 0;
  padding: 0; }
  fieldset.contact {
    display: none; }
    fieldset.contact .messages {
      display: none; }
    fieldset.contact .form-item {
      line-height: 1;
      margin-bottom: 12px; }
    fieldset.contact label {
      display: none; }
    fieldset.contact input,
    fieldset.contact select,
    fieldset.contact textarea {
      color: #333;
      margin-bottom: 0;
      font-size: 18.4px; }
      @media (max-width: 768px) {
        fieldset.contact input,
        fieldset.contact select,
        fieldset.contact textarea {
          font-size: 18.4px;
          line-height: 1.3;
          margin-top: 0; } }
    fieldset.contact input[type="submit"] {
      color: #fff;
      font-weight: normal;
      width: 100%;
      margin-bottom: 12px; }
      fieldset.contact input[type="submit"]:hover {
        background-color: #4bc4e2; }

.projects-list {
  margin: 0;
  padding: 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-content: flex-end;
  -ms-flex-line-pack: end;
  align-content: flex-end; }
  .projects-list::after {
    clear: both;
    content: "";
    display: table; }
  .projects-list li {
    display: inline-block;
    overflow: hidden; }
    @media (min-width: 769px) {
      .projects-list li {
        width: 25%;
        padding-right: 12px;
        padding-bottom: 12px; }
        .projects-list li:nth-child(4) {
          padding-right: 0; } }

@media (max-width: 768px) and (min-width: 491px) {
  .projects-list li {
    width: 33.3333%;
    padding-right: 12px;
    padding-bottom: 12px; }
    .projects-list li:nth-child(3) {
      padding-right: 0; } }
    @media (max-width: 490px) {
      .projects-list li {
        width: 180px;
        margin: 6px auto; } }
  .projects-list a {
    background: #444;
    cursor: pointer;
    display: inline-block;
    text-indent: -9999px;
    border: 1px solid #2b2b2b;
    filter: grayscale(100);
    -webkit-filter: grayscale(100);
    -moz-filter: grayscale(100);
    filter: grayscale(100);
    filter: gray;
    -webkit-filter: grayscale(1); }
    .projects-list a:hover {
      filter: grayscale(0);
      -webkit-filter: grayscale(0);
      -moz-filter: grayscale(0);
      filter: grayscale(0);
      filter: gray;
      -webkit-filter: grayscale(0); }
    .projects-list a.socha-dev-white-label {
      background-image: url("../images/sprites.png");
      background-position: -180px -270px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.socha-dev-white-label {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }
    .projects-list a.science {
      background-image: url("../images/sprites.png");
      background-position: 0px 0px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.science {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }
    .projects-list a.discovery-education {
      background-image: url("../images/sprites.png");
      background-position: -180px 0px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.discovery-education {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }
    .projects-list a.repequity {
      background-image: url("../images/sprites.png");
      background-position: -360px -135px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.repequity {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }
    .projects-list a.fcc-gov {
      background-image: url("../images/sprites.png");
      background-position: 0px -270px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.fcc-gov {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }
    .projects-list a.the-national-press-club {
      background-image: url("../images/sprites.png");
      background-position: -180px -135px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.the-national-press-club {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }
    .projects-list a.the-cook-political-report {
      background-image: url("../images/sprites.png");
      background-position: 0px -135px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.the-cook-political-report {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }
    .projects-list a.channel-democracy {
      background-image: url("../images/sprites.png");
      background-position: -360px 0px;
      width: 180px;
      height: 135px;
      background-repeat: no-repeat; }
      @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
        .projects-list a.channel-democracy {
          background-image: url("../images/sprites@2x.png");
          background-size: 540px 405px; } }

#modal {
  display: none;
  background: rgba(0, 0, 0, 0.5);
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 115; }

.modal {
  position: relative;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 3px;
  background: #fff;
  color: #2b2b2b;
  font-size: 16px;
  margin: 24px auto;
  padding: 24px;
  max-width: 1024px; }
  .modal h3 {
    text-transform: none; }
  .modal a {
    color: #23b3d7; }
  .modal .white-label-flag {
    position: absolute;
    top: 0;
    left: 0;
    height: 126px;
    width: 126px;
    display: none;
    overflow: hidden; }
  .modal .flag {
    transform: rotate(-45deg);
    -ms-transform: rotate(-45deg);
    -webkit-transform: rotate(-45deg);
    background-color: #2b2b2b;
    color: white;
    font-size: 14px;
    height: 36px;
    left: -39px;
    line-height: 36px;
    position: absolute;
    text-align: center;
    text-transform: uppercase;
    top: 31px;
    width: 172px; }
  @media (min-width: 769px) {
    .modal.white-label {
      width: 40%;
      height: auto;
      bottom: auto; } }
  .modal.white-label .alpha {
    display: none; }
  .modal.white-label .beta {
    width: 100%; }
  .modal .alpha img {
    height: auto;
    width: 100%; }
  @media (min-width: 769px) {
    .modal .alpha {
      width: 66%;
      height: 100%;
      overflow: hidden;
      margin: 0;
      padding-right: 0; }
    .modal .beta {
      width: 34%;
      height: 100%;
      overflow: hidden;
      margin: 0;
      padding-left: 24px; } }
  @media (max-width: 768px) {
    .modal {
      display: block;
      margin: 12px;
      padding: 12px; }
      .modal .beta {
        padding: 12px 0 0 0; } }

.bios {
  padding-bottom: 96px; }
  .bios .container {
    padding: 24px 0;
    -webkit-align-items: top;
    -ms-flex-align: top;
    align-items: top;
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start; }
  .bios .alpha {
    width: 18%; }
  .bios .beta {
    width: 82%; }
  .bios .avatar {
    border-radius: 6px;
    display: block;
    width: 100%;
    margin: 0 0 12px 0; }
  .bios ul.social {
    clear: both;
    list-style: none;
    margin: 0;
    padding: 0; }
    .bios ul.social li {
      float: left;
      margin: 0 12px 0 0; }
  @media (max-width: 768px) {
    .bios .container {
      display: block;
      padding-top: 36px; }
    .bios .alpha {
      width: 100%;
      text-align: center; }
    .bios .beta {
      width: 100%; }
      .bios .beta h3 {
        text-align: center; }
    .bios .avatar {
      display: inline-block;
      margin: 12px;
      width: 144px;
      border-radius: 3px; } }

.stripe.hero {
  padding: 0;
  background-repeat: no-repeat;
  background-position: center top;
  border-top: solid 1px #000;
  border-bottom: solid 1px #000; }
  @media (min-width: 769px) {
    .stripe.hero {
      height: 500px; } }
  @media (max-width: 768px) {
    .stripe.hero {
      background-size: auto 100%; } }
  body.front .stripe.hero {
    border-top: solid 1px #000;
    border-bottom: solid 1px #bbb;
    margin-top: 24px;
    padding-top: 24px; }
  .stripe.hero .hero-intro {
    border-radius: 6px;
    background: rgba(0, 0, 0, 0.6);
    margin-top: 72px;
    padding: 12px 24px; }
    @media (min-width: 769px) {
      .stripe.hero .hero-intro {
        width: 70%;
        margin: 0 auto;
        font-size: 28.8px; } }
    @media (max-width: 768px) {
      .stripe.hero .hero-intro {
        margin: 24px; } }

.workflow .container {
  max-width: 1024px; }

.workflow footer .container {
  max-width: 768px; }

.comic-banner {
  background-image: url(../images/comics/comic-bg-00.png);
  background-repeat: repeat-x;
  background-color: transparent;
  background-position: top left;
  text-align: center;
  margin: 24px 0 0 0;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-content: flex-end;
  -ms-flex-line-pack: end;
  align-content: flex-end;
  -webkit-align-items: top;
  -ms-flex-align: top;
  align-items: top;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  width: 100%; }
  @media (min-width: 769px) {
    .comic-banner {
      margin: 48px 0 0 0;
      border: solid 1px #444; } }
  .comic-banner .issue {
    width: 17%;
    background: #333;
    border-right: solid 1px #444;
    height: 250px;
    position: relative;
    font-size: 16px;
    font-style: normal;
    text-align: center; }
    @media (max-width: 768px) {
      .comic-banner .issue {
        display: none; } }
    .comic-banner .issue .numbers, .comic-banner .issue .numbers .date, .comic-banner .issue .publisher {
      display: block;
      position: absolute;
      left: 0;
      width: 100%;
      padding: 12px 0; }
    .comic-banner .issue .numbers {
      top: 0;
      height: 185px; }
      .comic-banner .issue .numbers .price {
        display: block;
        color: #e4e4e4;
        font-size: 51.2px;
        padding: 24px 0; }
      .comic-banner .issue .numbers .date {
        width: auto;
        left: auto;
        right: 0;
        bottom: 0;
        color: #444;
        padding: 6px 12px;
        background: url(../images/comics/comic-bg-02.png) repeat 0 0 #fff; }
        .comic-banner .issue .numbers .date .number {
          display: block;
          font-size: 25.6px;
          font-style: italic;
          font-weight: bold; }
    .comic-banner .issue .publisher {
      bottom: 0;
      background: url("../images/socha-dev.png") no-repeat 0 0;
      background-size: cover;
      border-top: solid 1px #444;
      color: #fff;
      text-transform: uppercase;
      height: 65px; }
  .comic-banner .title {
    display: block;
    position: relative;
    font-size: 32px;
    font-weight: normal; }
    @media (min-width: 769px) {
      .comic-banner .title {
        width: 83%;
        padding: 48px 0;
        font-size: 57.6px; } }
    .comic-banner .title .tooltip {
      border-bottom: 0;
      font-weight: bold;
      white-space: normal; }
      .comic-banner .title .tooltip .tip {
        font-weight: normal; }
    .comic-banner .title .authority {
      background: url("../images/comics/comics-code-authority.jpg") no-repeat 0 0;
      display: block;
      position: absolute;
      top: 0;
      right: 0;
      width: 65px;
      height: 79px;
      margin: 24px; }
      @media (max-width: 767px) {
        .comic-banner .title .authority {
          display: none; } }

ol.comic {
  font-size: 13px;
  line-height: 1.5;
  margin: 0;
  padding: 0;
  background-image: url(../images/comics/comic-bg-01.png);
  background-repeat: repeat;
  background-position: top left;
  background-color: #fff;
  color: #2b2b2b;
  padding: 12px;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-content: flex-end;
  -ms-flex-line-pack: end;
  align-content: flex-end;
  width: 100%; }
  @media (min-width: 769px) {
    ol.comic {
      border: solid 1px #444;
      padding: 12px;
      padding-bottom: 0; } }
  ol.comic > li {
    border-radius: 3px;
    background-image: url(../images/comics/comic-bg-02.png);
    background-repeat: repeat;
    background-position: top left;
    background-color: #fff;
    border: solid 1px #bbb;
    position: relative;
    margin-bottom: 12px;
    padding: 12px;
    list-style: none; }
    ol.comic > li::after {
      clear: both;
      content: "";
      display: table; }
    @media (min-width: 769px) {
      ol.comic > li {
        width: calc(33.3333% - 12px*2);
        min-height: 300px;
        margin: 12px; } }
    ol.comic > li:nth-child(2n+1) {
      border-color: #e4e4e4; }
      ol.comic > li:nth-child(2n+1) .narrator {
        border-color: #e4e4e4; }
    ol.comic > li:nth-child(4n) {
      background: #fff; }
    ol.comic > li:nth-child(6n) {
      border: solid 1px #b3b3b3; }
    ol.comic > li em,
    ol.comic > li strong,
    ol.comic > li .tooltip {
      background: #fff; }
  ol.comic ul {
    margin: 24px 0 0 24px;
    padding: 0;
    list-style: none; }
    ol.comic ul.bullets {
      list-style: disc; }
    ol.comic ul li {
      background: #fff;
      margin: 0 0 12px 0; }
      ol.comic ul li:last-child {
        margin: 0; }
  ol.comic img {
    display: block;
    float: left; }
  ol.comic img.avatar {
    border-radius: 6px;
    width: 60px;
    height: 60px;
    margin: 0 12px 0 0; }
  ol.comic img.illustration {
    display: block;
    margin: 12px auto;
    width: 100%; }
    ol.comic img.illustration::after {
      clear: both;
      content: "";
      display: table; }
    ol.comic img.illustration.top {
      margin-top: 0; }
    @media (min-width: 769px) {
      ol.comic img.illustration.bottom {
        position: absolute;
        bottom: 0;
        z-index: 0;
        width: auto;
        margin: 0 0 12px 0; } }
    @media (max-width: 768px) {
      ol.comic img.illustration.bottom {
        margin-bottom: 0; } }
  ol.comic .no-img img {
    display: none; }
  ol.comic .tooltip {
    border-bottom-color: #bbb; }
    ol.comic .tooltip .tip {
      border-color: #666;
      text-transform: none; }
    ol.comic .tooltip.no-img, ol.comic .tooltip.project {
      white-space: normal; }
  ol.comic .blue {
    color: #1c8eab; }
  ol.comic .red {
    color: #b20b23; }
  ol.comic .green {
    color: #6f842b; }
  ol.comic .gray {
    color: #bbb; }
  ol.comic .orange {
    color: #e67300; }
  ol.comic .purple {
    color: #574278; }
  ol.comic strong {
    text-transform: uppercase; }
  ol.comic .actor {
    font-weight: normal; }
  ol.comic .brand {
    color: #333;
    font-weight: bold; }
    ol.comic .brand.actor {
      color: #000;
      font-weight: normal; }
  ol.comic .narrator {
    display: block;
    background: #fff; }
    @media (min-width: 769px) {
      ol.comic .narrator {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        z-index: 1;
        border-bottom: solid 1px #bbb;
        padding: 12px; } }
  ol.comic .index {
    border-radius: 12px;
    display: block;
    width: 24px;
    height: 24px;
    margin: 12px;
    position: absolute;
    bottom: 0;
    right: 0;
    text-align: center;
    line-height: 2;
    font-size: 11px;
    background: #fff;
    border: solid 1px #e4e4e4;
    color: #bbb; }
    @media (max-width: 768px) {
      ol.comic .index {
        display: none; } }

.announcement {
  position: fixed;
  z-index: 110;
  left: 0;
  right: 0;
  top: 0;
  min-height: 350px;
  margin: 145px 0 0 0;
  padding-bottom: 40px;
  background: url("../images/paper.png") no-repeat 50% 0 transparent;
  background-size: cover;
  color: #333;
  transition: margin-top 600ms; }
  @media (max-width: 768px) {
    .announcement {
      min-height: 420px; } }
  .announcement.sticky {
    margin-top: 45px; }
  .announcement .fullwidth {
    padding-top: 12px; }
  .announcement .taoti {
    display: block;
    width: 600px;
    min-height: 93px;
    background: url("../images/taoti.png") no-repeat 0 0 transparent;
    background-size: 100% auto;
    margin: 0 0 24px 0; }
    @media (max-width: 768px) {
      .announcement .taoti {
        width: 100%;
        height: auto;
        min-height: 115px;
        background-size: 100% auto;
        margin: 1rem 0; } }
    @media (max-width: 400px) {
      .announcement .taoti {
        min-height: 50px; } }
  .announcement p {
    margin: 0; }
  .announcement a {
    color: #b20b23; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmVlbi5jc3MiLCJjb21wb25lbnRzL190eXBvZ3JhcGh5LnNjc3MiLCJ2ZW5kb3IvYml0dGVycy9fYnV0dG9ucy5zY3NzIiwidmVuZG9yL2JpdHRlcnMvX3ZhcmlhYmxlcy5zY3NzIiwidmVuZG9yL2JvdXJib24vZnVuY3Rpb25zL19zaGFkZS5zY3NzIiwidmVuZG9yL2JpdHRlcnMvX2Zvcm1zLnNjc3MiLCJ2ZW5kb3IvX25vcm1hbGl6ZS5zY3NzIiwiX3Nwcml0ZXMuc2NzcyIsImNvbXBvbmVudHMvX3V0aWxpdHkuc2NzcyIsInZlbmRvci9ib3VyYm9uL2FkZG9ucy9fY2xlYXJmaXguc2NzcyIsInZlbmRvci9faW5jbHVkZS1tZWRpYS5zY3NzIiwiX2dsb2JhbC5zY3NzIiwiX3NldHRpbmdzLnNjc3MiLCJ2ZW5kb3IvYm91cmJvbi9hZGRvbnMvX2ZvbnQtc3RhY2tzLnNjc3MiLCJ2ZW5kb3IvYm91cmJvbi9hZGRvbnMvX3ByZWZpeGVyLnNjc3MiLCJjb21wb25lbnRzL190ZWFtLnNjc3MiLCJjb21wb25lbnRzL19mb250aWNvbnMuc2NzcyIsImNvbXBvbmVudHMvX2Zvcm1zLnNjc3MiLCJjb21wb25lbnRzL19wcm9qZWN0cy5zY3NzIiwiY29tcG9uZW50cy9fbWl4aW5zLnNjc3MiLCJfc3ByaXRlLW1peGlucy5zY3NzIiwiY29tcG9uZW50cy9faGVyb2VzLnNjc3MiLCJjb21wb25lbnRzL19jb21pY3Muc2NzcyIsImNvbXBvbmVudHMvX2Fubm91bmNlbWVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjtBQ0NmLGdFQUFZO0FBQ1osK0RBQVk7QUNGZDtFQUNFLHlCQUFpQjtFQUFqQixzQkFBaUI7RUFBakIsaUJBQWlCO0VBQ2pCLDBCQ2dCVztFRGZYLFVBQVU7RUFDVixtQkNRc0I7RURQdEIsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixzQkFBc0I7RUFDdEIscUNDUHdDO0VEUXhDLGtCQ0ptQjtFREtuQixvQ0FBb0M7RUFD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QkFBaUI7TUFDakIsYUFBYTtNQUNiLDZCQUF5QixFRHdDWTtJQTlDdkM7TUVxQkUsK0NBQXFCO01BTHJCLG1DYm1Gd0Q7TWExRnhELGFiMEYrRDtNYXpGL0QsY2J5RnNFO01hL0R0RSw2QkFBNkIsRUZZaUY7TUVWOUc7UUZ0Q0Y7VUVxQkUsa0RBQXFCO1VBbUJuQiw2QmJxSnNCLEVXN0lzRixFQUFBO0lBaERoSDtNRXFCRSwrQ0FBcUI7TUFMckIsNkJiTWdDO01hYmhDLGFiYXVDO01hWnZDLGNiWThDO01hYzlDLDZCQUE2QixFRmF1QztNRVhwRTtRRnRDRjtVRXFCRSxrREFBcUI7VUFtQm5CLDZCYnFKc0IsRVc1STRDLEVBQUE7SUFqRHRFO01FcUJFLCtDQUFxQjtNQUxyQixnQ2JpQjRDO01heEI1QyxhYndCbUQ7TWF2Qm5ELGNidUIwRDtNYUcxRCw2QkFBNkIsRUZjaUU7TUVaOUY7UUZ0Q0Y7VUVxQkUsa0RBQXFCO1VBbUJuQiw2QmJxSnNCLEVXM0lzRSxFQUFBO0lBbERoRztNRXFCRSwrQ0FBcUI7TUFMckIsbUNiNkR1QztNYXBFdkMsYWJvRThDO01hbkU5QyxjYm1FcUQ7TWF6Q3JELDZCQUE2QixFRmVtQztNRWJoRTtRRnRDRjtVRXFCRSxrREFBcUI7VUFtQm5CLDZCYnFKc0IsRVcxSXdDLEVBQUE7SUFuRGxFO01FcUJFLCtDQUFxQjtNQUxyQixnQ2J3RXNDO01hL0V0QyxhYitFNkM7TWE5RTdDLGNiOEVvRDtNYXBEcEQsNkJBQTZCLEVGZ0J5QztNRWR0RTtRRnRDRjtVRXFCRSxrREFBcUI7VUFtQm5CLDZCYnFKc0IsRVd6SThDLEVBQUE7SUFwRHhFO01FcUJFLCtDQUFxQjtNQUxyQixtQ2J1QzJFO01hOUMzRSxhYjhDa0Y7TWE3Q2xGLGNiNkN5RjtNYW5CekYsNkJBQTZCLEVGaUJ5SDtNRWZ0SjtRRnRDRjtVRXFCRSxrREFBcUI7VUFtQm5CLDZCYnFKc0IsRVd4SThILEVBQUE7SUFyRHhKO01FcUJFLCtDQUFxQjtNQUxyQixnQ2I0QndFO01hbkN4RSxhYm1DK0U7TWFsQy9FLGNia0NzRjtNYVJ0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QjtJVWtUbEIsWVZuVGEsRVV3VGQ7SVpvT0M7TVlyYUo7UUErTE0sY0FBYyxFQUVqQixFQUFBOztBQ3JVSDtFQUNFLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2IsUUFBUTtFQUNSLFNBQVM7RUFDVCxPQUFPO0VBQ1Asa0JBQWtCO0VBQ2xCLG9CQUFvQjtFQUNwQixxQkFBcUI7RUFDckIsbUVBQWtFO0VBQ2xFLHVCQUF1QjtFQUN2QixZWERjO0VXUWQsNkJBQTZCLEVBcUM5QjtFYmtmRztJYXppQko7TUFjSSxrQkFBa0IsRUF5Q3JCLEVBQUE7RUF2REQ7SUFvQkksaUJBQWlCLEVBQ2xCO0VBckJIO0lBd0JJLGtCWE1NLEVXTFA7RUF6Qkg7SUE0QkksZUFBZTtJQUNmLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsaUVBQWdFO0lBQ2hFLDJCQUEyQjtJQUMzQixtQkFBbUIsRUFhcEI7SWIyZkM7TWF6aUJKO1FBb0NNLFlBQVk7UUFDWixhQUFhO1FBQ2Isa0JBQWtCO1FBQ2xCLDJCQUEyQjtRQUMzQixlQUFlLEVBTWxCLEVBQUE7SWIyZkM7TWF6aUJKO1FBNENNLGlCQUFpQixFQUVwQixFQUFBO0VBOUNIO0lBaURJLFVBQVUsRUFDWDtFQWxESDtJQXFESSxlWHBDUyxFV3FDViIsImZpbGUiOiJzY3JlZW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVVidW50dTo0MDApO1xuQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2Fucyk7XG5idXR0b24sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIGlucHV0W3R5cGU9XCJyZXNldFwiXSwgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0YmMzZTI7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBjb2xvcjogI2ZmZjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDIyLjRweDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAxNTBtcyBlYXNlO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfVxuICBidXR0b246aG92ZXIsIGJ1dHRvbjpmb2N1cywgaW5wdXRbdHlwZT1cImJ1dHRvblwiXTpob3ZlciwgaW5wdXRbdHlwZT1cImJ1dHRvblwiXTpmb2N1cywgaW5wdXRbdHlwZT1cInJlc2V0XCJdOmhvdmVyLCBpbnB1dFt0eXBlPVwicmVzZXRcIl06Zm9jdXMsIGlucHV0W3R5cGU9XCJzdWJtaXRcIl06aG92ZXIsIGlucHV0W3R5cGU9XCJzdWJtaXRcIl06Zm9jdXMge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzYzljYjU7XG4gICAgY29sb3I6ICNmZmY7IH1cbiAgYnV0dG9uOmRpc2FibGVkLCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdOmRpc2FibGVkLCBpbnB1dFt0eXBlPVwicmVzZXRcIl06ZGlzYWJsZWQsIGlucHV0W3R5cGU9XCJzdWJtaXRcIl06ZGlzYWJsZWQge1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgb3BhY2l0eTogMC41OyB9XG4gICAgYnV0dG9uOmRpc2FibGVkOmhvdmVyLCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdOmRpc2FibGVkOmhvdmVyLCBpbnB1dFt0eXBlPVwicmVzZXRcIl06ZGlzYWJsZWQ6aG92ZXIsIGlucHV0W3R5cGU9XCJzdWJtaXRcIl06ZGlzYWJsZWQ6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzRiYzNlMjsgfVxuXG5maWVsZHNldCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDJweCBzb2xpZCAjY2NjO1xuICBtYXJnaW46IDAgMCAwLjVlbTtcbiAgcGFkZGluZzogMWVtOyB9XG5cbmlucHV0LFxubGFiZWwsXG5zZWxlY3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMjIuNHB4OyB9XG5cbmxhYmVsIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbWFyZ2luLWJvdHRvbTogMC4yNWVtOyB9XG4gIGxhYmVsLnJlcXVpcmVkOjphZnRlciB7XG4gICAgY29udGVudDogXCIqXCI7IH1cbiAgbGFiZWwgYWJiciB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuXG5pbnB1dFt0eXBlPVwiY29sb3JcIl0sIGlucHV0W3R5cGU9XCJkYXRlXCJdLCBpbnB1dFt0eXBlPVwiZGF0ZXRpbWVcIl0sIGlucHV0W3R5cGU9XCJkYXRldGltZS1sb2NhbFwiXSwgaW5wdXRbdHlwZT1cImVtYWlsXCJdLCBpbnB1dFt0eXBlPVwibW9udGhcIl0sIGlucHV0W3R5cGU9XCJudW1iZXJcIl0sIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSwgaW5wdXRbdHlwZT1cInNlYXJjaFwiXSwgaW5wdXRbdHlwZT1cInRlbFwiXSwgaW5wdXRbdHlwZT1cInRleHRcIl0sIGlucHV0W3R5cGU9XCJ0aW1lXCJdLCBpbnB1dFt0eXBlPVwidXJsXCJdLCBpbnB1dFt0eXBlPVwid2Vla1wiXSwgaW5wdXQ6bm90KFt0eXBlXSksIHRleHRhcmVhLFxuc2VsZWN0W211bHRpcGxlPW11bHRpcGxlXSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4wMik7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDIyLjRweDtcbiAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gIHBhZGRpbmc6IDAuMzMzMzNlbTtcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDE1MG1zIGVhc2U7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIGlucHV0W3R5cGU9XCJjb2xvclwiXTpob3ZlciwgaW5wdXRbdHlwZT1cImRhdGVcIl06aG92ZXIsIGlucHV0W3R5cGU9XCJkYXRldGltZVwiXTpob3ZlciwgaW5wdXRbdHlwZT1cImRhdGV0aW1lLWxvY2FsXCJdOmhvdmVyLCBpbnB1dFt0eXBlPVwiZW1haWxcIl06aG92ZXIsIGlucHV0W3R5cGU9XCJtb250aFwiXTpob3ZlciwgaW5wdXRbdHlwZT1cIm51bWJlclwiXTpob3ZlciwgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdOmhvdmVyLCBpbnB1dFt0eXBlPVwic2VhcmNoXCJdOmhvdmVyLCBpbnB1dFt0eXBlPVwidGVsXCJdOmhvdmVyLCBpbnB1dFt0eXBlPVwidGV4dFwiXTpob3ZlciwgaW5wdXRbdHlwZT1cInRpbWVcIl06aG92ZXIsIGlucHV0W3R5cGU9XCJ1cmxcIl06aG92ZXIsIGlucHV0W3R5cGU9XCJ3ZWVrXCJdOmhvdmVyLCBpbnB1dDpub3QoW3R5cGVdKTpob3ZlciwgdGV4dGFyZWE6aG92ZXIsXG4gIHNlbGVjdFttdWx0aXBsZT1tdWx0aXBsZV06aG92ZXIge1xuICAgIGJvcmRlci1jb2xvcjogI2EzYTNhMzsgfVxuICBpbnB1dFt0eXBlPVwiY29sb3JcIl06Zm9jdXMsIGlucHV0W3R5cGU9XCJkYXRlXCJdOmZvY3VzLCBpbnB1dFt0eXBlPVwiZGF0ZXRpbWVcIl06Zm9jdXMsIGlucHV0W3R5cGU9XCJkYXRldGltZS1sb2NhbFwiXTpmb2N1cywgaW5wdXRbdHlwZT1cImVtYWlsXCJdOmZvY3VzLCBpbnB1dFt0eXBlPVwibW9udGhcIl06Zm9jdXMsIGlucHV0W3R5cGU9XCJudW1iZXJcIl06Zm9jdXMsIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXTpmb2N1cywgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTpmb2N1cywgaW5wdXRbdHlwZT1cInRlbFwiXTpmb2N1cywgaW5wdXRbdHlwZT1cInRleHRcIl06Zm9jdXMsIGlucHV0W3R5cGU9XCJ0aW1lXCJdOmZvY3VzLCBpbnB1dFt0eXBlPVwidXJsXCJdOmZvY3VzLCBpbnB1dFt0eXBlPVwid2Vla1wiXTpmb2N1cywgaW5wdXQ6bm90KFt0eXBlXSk6Zm9jdXMsIHRleHRhcmVhOmZvY3VzLFxuICBzZWxlY3RbbXVsdGlwbGU9bXVsdGlwbGVdOmZvY3VzIHtcbiAgICBib3JkZXItY29sb3I6ICM0YmMzZTI7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4wMiksIDAgMCA1cHggcmdiYSg1MywgMTg4LCAyMjIsIDAuNik7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuICBpbnB1dFt0eXBlPVwiY29sb3JcIl06ZGlzYWJsZWQsIGlucHV0W3R5cGU9XCJkYXRlXCJdOmRpc2FibGVkLCBpbnB1dFt0eXBlPVwiZGF0ZXRpbWVcIl06ZGlzYWJsZWQsIGlucHV0W3R5cGU9XCJkYXRldGltZS1sb2NhbFwiXTpkaXNhYmxlZCwgaW5wdXRbdHlwZT1cImVtYWlsXCJdOmRpc2FibGVkLCBpbnB1dFt0eXBlPVwibW9udGhcIl06ZGlzYWJsZWQsIGlucHV0W3R5cGU9XCJudW1iZXJcIl06ZGlzYWJsZWQsIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXTpkaXNhYmxlZCwgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTpkaXNhYmxlZCwgaW5wdXRbdHlwZT1cInRlbFwiXTpkaXNhYmxlZCwgaW5wdXRbdHlwZT1cInRleHRcIl06ZGlzYWJsZWQsIGlucHV0W3R5cGU9XCJ0aW1lXCJdOmRpc2FibGVkLCBpbnB1dFt0eXBlPVwidXJsXCJdOmRpc2FibGVkLCBpbnB1dFt0eXBlPVwid2Vla1wiXTpkaXNhYmxlZCwgaW5wdXQ6bm90KFt0eXBlXSk6ZGlzYWJsZWQsIHRleHRhcmVhOmRpc2FibGVkLFxuICBzZWxlY3RbbXVsdGlwbGU9bXVsdGlwbGVdOmRpc2FibGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZThlOGU4O1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7IH1cbiAgICBpbnB1dFt0eXBlPVwiY29sb3JcIl06ZGlzYWJsZWQ6aG92ZXIsIGlucHV0W3R5cGU9XCJkYXRlXCJdOmRpc2FibGVkOmhvdmVyLCBpbnB1dFt0eXBlPVwiZGF0ZXRpbWVcIl06ZGlzYWJsZWQ6aG92ZXIsIGlucHV0W3R5cGU9XCJkYXRldGltZS1sb2NhbFwiXTpkaXNhYmxlZDpob3ZlciwgaW5wdXRbdHlwZT1cImVtYWlsXCJdOmRpc2FibGVkOmhvdmVyLCBpbnB1dFt0eXBlPVwibW9udGhcIl06ZGlzYWJsZWQ6aG92ZXIsIGlucHV0W3R5cGU9XCJudW1iZXJcIl06ZGlzYWJsZWQ6aG92ZXIsIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXTpkaXNhYmxlZDpob3ZlciwgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTpkaXNhYmxlZDpob3ZlciwgaW5wdXRbdHlwZT1cInRlbFwiXTpkaXNhYmxlZDpob3ZlciwgaW5wdXRbdHlwZT1cInRleHRcIl06ZGlzYWJsZWQ6aG92ZXIsIGlucHV0W3R5cGU9XCJ0aW1lXCJdOmRpc2FibGVkOmhvdmVyLCBpbnB1dFt0eXBlPVwidXJsXCJdOmRpc2FibGVkOmhvdmVyLCBpbnB1dFt0eXBlPVwid2Vla1wiXTpkaXNhYmxlZDpob3ZlciwgaW5wdXQ6bm90KFt0eXBlXSk6ZGlzYWJsZWQ6aG92ZXIsIHRleHRhcmVhOmRpc2FibGVkOmhvdmVyLFxuICAgIHNlbGVjdFttdWx0aXBsZT1tdWx0aXBsZV06ZGlzYWJsZWQ6aG92ZXIge1xuICAgICAgYm9yZGVyOiAycHggc29saWQgI2NjYzsgfVxuXG50ZXh0YXJlYSB7XG4gIHJlc2l6ZTogdmVydGljYWw7IH1cblxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIGFwcGVhcmFuY2U6IG5vbmU7IH1cblxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgZGlzcGxheTogaW5saW5lO1xuICBtYXJnaW4tcmlnaHQ6IDAuMjVlbTsgfVxuICBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0gKyBsYWJlbCxcbiAgaW5wdXRbdHlwZT1cInJhZGlvXCJdICsgbGFiZWwge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG5pbnB1dFt0eXBlPVwiZmlsZVwiXSB7XG4gIG1hcmdpbi1ib3R0b206IDAuNWVtO1xuICB3aWR0aDogMTAwJTsgfVxuXG5zZWxlY3Qge1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIG1heC13aWR0aDogMTAwJTtcbiAgd2lkdGg6IGF1dG87IH1cblxuLyohIG5vcm1hbGl6ZS5jc3MgdjMuMC4yIHwgTUlUIExpY2Vuc2UgfCBnaXQuaW8vbm9ybWFsaXplICovXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmdcbiAqICAgIHVzZXIgem9vbS5cbiAqL1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBhbnkgSFRNTDUgZWxlbWVudCBpbiBJRSA4LzkuXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYGRldGFpbHNgIG9yIGBzdW1tYXJ5YCBpbiBJRSAxMC8xMVxuICogYW5kIEZpcmVmb3guXG4gKiBDb3JyZWN0IGBibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBmb3IgYG1haW5gIGluIElFIDExLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGlubGluZS1ibG9ja2AgZGlzcGxheSBub3QgZGVmaW5lZCBpbiBJRSA4LzkuXG4gKiAyLiBOb3JtYWxpemUgdmVydGljYWwgYWxpZ25tZW50IG9mIGBwcm9ncmVzc2AgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgLyogMSAqL1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFByZXZlbnQgbW9kZXJuIGJyb3dzZXJzIGZyb20gZGlzcGxheWluZyBgYXVkaW9gIHdpdGhvdXQgY29udHJvbHMuXG4gKiBSZW1vdmUgZXhjZXNzIGhlaWdodCBpbiBpT1MgNSBkZXZpY2VzLlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGBbaGlkZGVuXWAgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAuXG4gKiBIaWRlIHRoZSBgdGVtcGxhdGVgIGVsZW1lbnQgaW4gSUUgOC85LzExLCBTYWZhcmksIGFuZCBGaXJlZm94IDwgMjIuXG4gKi9cbltoaWRkZW5dLFxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBjb2xvciBmcm9tIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi8qKlxuICogSW1wcm92ZSByZWFkYWJpbGl0eSB3aGVuIGZvY3VzZWQgYW5kIGFsc28gbW91c2UgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkOyB9XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwOyB9XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuaHIge1xuICAtbW96LWJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7IH1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lXG4gKiAgICAoaW5jbHVkZSBgLW1vemAgdG8gZnV0dXJlLXByb29mKS5cbiAqL1xuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDIgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IH1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAqL1xuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG5sZWdlbmQge1xuICBib3JkZXI6IDA7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLlxuICovXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbnRkLFxudGgge1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qXG5TQ1NTIHZhcmlhYmxlcyBhcmUgaW5mb3JtYXRpb24gYWJvdXQgaWNvbidzIGNvbXBpbGVkIHN0YXRlLCBzdG9yZWQgdW5kZXIgaXRzIG9yaWdpbmFsIGZpbGUgbmFtZVxuXG4uaWNvbi1ob21lIHtcbiAgd2lkdGg6ICRpY29uLWhvbWUtd2lkdGg7XG59XG5cblRoZSBsYXJnZSBhcnJheS1saWtlIHZhcmlhYmxlcyBjb250YWluIGFsbCBpbmZvcm1hdGlvbiBhYm91dCBhIHNpbmdsZSBpY29uXG4kaWNvbi1ob21lOiB4IHkgb2Zmc2V0X3ggb2Zmc2V0X3kgd2lkdGggaGVpZ2h0IHRvdGFsX3dpZHRoIHRvdGFsX2hlaWdodCBpbWFnZV9wYXRoO1xuXG5BdCB0aGUgYm90dG9tIG9mIHRoaXMgc2VjdGlvbiwgd2UgcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgc3ByaXRlc2hlZXQgaXRzZWxmXG4kc3ByaXRlc2hlZXQ6IHdpZHRoIGhlaWdodCBpbWFnZSAkc3ByaXRlc2hlZXQtc3ByaXRlcztcbiovXG4vKlxuVGhlc2UgXCJyZXRpbmEgZ3JvdXBcIiB2YXJpYWJsZXMgYXJlIG1hcHBpbmdzIGZvciB0aGUgbmFtaW5nIGFuZCBwYWlyaW5nIG9mIG5vcm1hbCBhbmQgcmV0aW5hIHNwcml0ZXMuXG5cblRoZSBsaXN0IGZvcm1hdHRlZCB2YXJpYWJsZXMgYXJlIGludGVuZGVkIGZvciBtaXhpbnMgbGlrZSBgcmV0aW5hLXNwcml0ZWAgYW5kIGByZXRpbmEtc3ByaXRlc2AuXG4qL1xuLmNsZWFyZml4OjphZnRlciB7XG4gIGNsZWFyOiBib3RoO1xuICBjb250ZW50OiBcIlwiO1xuICBkaXNwbGF5OiB0YWJsZTsgfVxuXG4uaW1nLXJlc3BvbnNpdmUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuaGlkZS1tb2JpbGUge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSB9XG5cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE3LjZweDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyYjJiMmI7IH1cblxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgLWFwcGxlLXN5c3RlbSwgXCIuU0ZOU1RleHQtUmVndWxhclwiLCBcIlNhbiBGcmFuY2lzY29cIiwgXCJSb2JvdG9cIiwgXCJTZWdvZSBVSVwiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiTHVjaWRhIEdyYW5kZVwiLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJiMmIyYjtcbiAgbWFyZ2luOiAyNHB4IDA7XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIGJvZHkge1xuICAgICAgZm9udC1zaXplOiAxOC40cHg7XG4gICAgICBtYXJnaW4tdG9wOiAwOyB9XG4gICAgICBib2R5IGgxIHtcbiAgICAgICAgZm9udC1zaXplOiAzOC40cHg7IH1cbiAgICAgIGJvZHkgaDIge1xuICAgICAgICBmb250LXNpemU6IDMycHg7IH1cbiAgICAgIGJvZHkgaDMge1xuICAgICAgICBmb250LXNpemU6IDI1LjZweDsgfSB9XG5cbi5jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogNzY4cHg7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG4gIC5jb250YWluZXIuZnVsbGJsb2NrIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuXG4uYWxwaGEge1xuICBwYWRkaW5nLXJpZ2h0OiAxMnB4O1xuICB3aWR0aDogNTAlOyB9XG5cbi5iZXRhIHtcbiAgcGFkZGluZy1sZWZ0OiAxMnB4O1xuICB3aWR0aDogNTAlOyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAuY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXgtd2lkdGg6IDEwMCU7IH1cbiAgLmFscGhhLFxuICAuYmV0YSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMDsgfSB9XG5cbi5mdWxsd2lkdGgge1xuICB3aWR0aDogMTAwJTsgfVxuXG4ubWFyayB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMjAlO1xuICBoZWlnaHQ6IDM2cHg7XG4gIHdpZHRoOiAxOTJweDsgfVxuICAubWFyayAuYmFuZCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGNsZWFyOiBub25lO1xuICAgIHdpZHRoOiA0OHB4O1xuICAgIGhlaWdodDogMzZweDsgfVxuICAubWFyayAuc29jaGFkZXYtZ3JheSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzFjMWMxYzsgfVxuICAubWFyayAuc29jaGFkZXYtYmx1ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIzYjNkNzsgfVxuICAubWFyayAuc29jaGFkZXYtcmVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjIwYjIzOyB9XG4gIC5tYXJrIC5zb2NoYWRldi1ncmVlbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzdmOTczMTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubWFyayB7XG4gICAgICByaWdodDogMTJweDtcbiAgICAgIGhlaWdodDogMzBweDtcbiAgICAgIHdpZHRoOiAxNDRweDsgfVxuICAgICAgLm1hcmsgLmJhbmQge1xuICAgICAgICB3aWR0aDogMzZweDtcbiAgICAgICAgaGVpZ2h0OiAzMHB4OyB9IH1cbiAgaGVhZGVyIC5tYXJrIHtcbiAgICBoZWlnaHQ6IDM2cHg7XG4gICAgd2lkdGg6IDM2cHg7IH1cbiAgICBoZWFkZXIgLm1hcmsgLmJhbmQge1xuICAgICAgd2lkdGg6IDlweDtcbiAgICAgIGhlaWdodDogMzZweDsgfVxuXG5oZWFkZXIge1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNyk7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgei1pbmRleDogMTAwOyB9XG4gIGhlYWRlcjo6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgaGVhZGVyLnN0cmlwZSB7XG4gICAgcGFkZGluZzogMTJweDsgfVxuICBoZWFkZXIgLmZ1bGx3aWR0aCB7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICBoZWFkZXIgYSB7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAzNnB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIHdpZHRoOiBhdXRvOyB9XG4gICAgaGVhZGVyIGE6aG92ZXIge1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICBoZWFkZXIgYS5icmFuZCB7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgZm9udC1mYW1pbHk6ICdVYnVudHUnLCBzYW5zLXNlcmlmO1xuICAgICAgZm9udC1zaXplOiA0MS42cHg7XG4gICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgd2lkdGg6IDg4JTsgfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIGhlYWRlciBhLmJyYW5kIHtcbiAgICAgICAgICBmb250LXNpemU6IDM4LjRweDtcbiAgICAgICAgICBsZWZ0OiAxMnB4OyB9IH1cbiAgICBoZWFkZXIgYS5sb2dvIHtcbiAgICAgIHJpZ2h0OiAwOyB9XG4gIGhlYWRlciBzcGFuLnRhZ2xpbmUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIGxpbmUtaGVpZ2h0OiAzNnB4O1xuICAgIG1hcmdpbjogMCAwIDAgMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdGV4dC1pbmRlbnQ6IDEwJTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbG93ZXJjYXNlOyB9XG4gICAgYm9keS5mcm9udCBoZWFkZXIgc3Bhbi50YWdsaW5lIHtcbiAgICAgIHRleHQtaW5kZW50OiAxOCU7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIGhlYWRlciBzcGFuLnRhZ2xpbmUge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLnN0cmlwZSB7XG4gIHBhZGRpbmc6IDI0cHg7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC5zdHJpcGUuYmx1ZSB7XG4gICAgYmFja2dyb3VuZDogIzIzYjNkNzsgfVxuICAgIC5zdHJpcGUuYmx1ZSBociB7XG4gICAgICBib3JkZXItY29sb3I6ICMzNWJjZGU7IH1cbiAgLnN0cmlwZS5yZWQge1xuICAgIGJhY2tncm91bmQ6ICNiMjBiMjM7IH1cbiAgICAuc3RyaXBlLnJlZCBociB7XG4gICAgICBib3JkZXItY29sb3I6ICNjYTBjMjg7IH1cbiAgLnN0cmlwZS5ncmVlbiB7XG4gICAgYmFja2dyb3VuZDogIzdmOTczMTsgfVxuICAgIC5zdHJpcGUuZ3JlZW4gaHIge1xuICAgICAgYm9yZGVyLWNvbG9yOiAjOGZhYTM3OyB9XG4gIC5zdHJpcGUuZ3JheSB7XG4gICAgYmFja2dyb3VuZDogIzMzMzsgfVxuICAgIC5zdHJpcGUuZ3JheSBociB7XG4gICAgICBib3JkZXItY29sb3I6ICM0MDQwNDA7IH1cbiAgLnN0cmlwZS5kYXJrZ3JheSB7XG4gICAgYmFja2dyb3VuZDogIzJiMmIyYjsgfVxuICAgIC5zdHJpcGUuZGFya2dyYXkgaHIge1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMzgzODM4OyB9XG5cbi50aXRsZSB7XG4gIG1hcmdpbi10b3A6IDMwcHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgLnRpdGxlIHtcbiAgICAgIG1hcmdpbi10b3A6IDA7IH0gfVxuXG4uaW50cm8ge1xuICBwYWRkaW5nLWJvdHRvbTogNzJweDsgfVxuICAuaW50cm8gLmFscGhhIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiA2MHB4OyB9XG4gICAgLmludHJvIC5hbHBoYSBociB7XG4gICAgICBtYXJnaW4tdG9wOiAwOyB9XG4gICAgLmludHJvIC5hbHBoYSBwOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMjRweDsgfVxuICAuaW50cm8gLmJldGEge1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAuaW50cm8gLmJldGEgPiBpbWcge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogMTJweDtcbiAgICAgIHRvcDogLTI3MHB4OyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5pbnRybyB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMjRweDsgfVxuICAgICAgLmludHJvIC5hbHBoYSB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgICAgIC5pbnRybyAuYmV0YSA+IGltZyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4uaWNvbi1zdHJpcGUge1xuICBwYWRkaW5nOiAwIDI0cHg7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmljb24tc3RyaXBlIC5iZXRhLFxuICAgIC5pY29uLXN0cmlwZSAuYWxwaGEge1xuICAgICAgcGFkZGluZy1ib3R0b206IDQwLjhweDsgfVxuICAgICAgLmljb24tc3RyaXBlIC5iZXRhIGgyLFxuICAgICAgLmljb24tc3RyaXBlIC5hbHBoYSBoMiB7XG4gICAgICAgIHBhZGRpbmctdG9wOiA0MC44cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY5cHgpIHtcbiAgICAuaWNvbi1zdHJpcGUge1xuICAgICAgcGFkZGluZzogMDsgfVxuICAgICAgLmljb24tc3RyaXBlIC5pY29uIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICAuaWNvbi1zdHJpcGUgLmFscGhhIHtcbiAgICAgICAgd2lkdGg6IDI4JTtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxMnB4OyB9XG4gICAgICAuaWNvbi1zdHJpcGUgLmJldGEge1xuICAgICAgICB3aWR0aDogNzIlO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiA0OHB4O1xuICAgICAgICBwYWRkaW5nLXRvcDogMDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDcycHg7IH1cbiAgICAgICAgLmljb24tc3RyaXBlIC5iZXRhIGgyIHtcbiAgICAgICAgICBwYWRkaW5nLXRvcDogNzJweDsgfVxuICAgICAgLmljb24tc3RyaXBlOm50aC1jaGlsZChldmVuKSAuYWxwaGEge1xuICAgICAgICB3aWR0aDogNzIlO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDQ4cHg7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiA3MnB4OyB9XG4gICAgICAgIC5pY29uLXN0cmlwZTpudGgtY2hpbGQoZXZlbikgLmFscGhhIGgyIHtcbiAgICAgICAgICBwYWRkaW5nLXRvcDogNzJweDsgfVxuICAgICAgLmljb24tc3RyaXBlOm50aC1jaGlsZChldmVuKSAuYmV0YSB7XG4gICAgICAgIHdpZHRoOiAyOCU7XG4gICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMnB4OyB9IH1cblxuLm92ZXJmbG93IC5pY29uIHtcbiAgdG9wOiAxNXB4OyB9XG5cbi50cmlhZ2UgLmljb24ge1xuICB0b3A6IDUxLjZweDsgfVxuXG4ucHJvYmxlbS1zb2x2aW5nIC5pY29uIHtcbiAgbGVmdDogMThweDtcbiAgZm9udC1zaXplOiA3LjVlbSAhaW1wb3J0YW50OyB9XG5cbi5wcm9qZWN0cyB7XG4gIHBhZGRpbmctdG9wOiAwO1xuICBwYWRkaW5nLWJvdHRvbTogNzJweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5wcm9qZWN0cyAjcHJvamVjdHMge1xuICAgIHBhZGRpbmctdG9wOiA3MnB4OyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5wcm9qZWN0cyB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogNDhweDsgfVxuICAgICAgLnByb2plY3RzICNwcm9qZWN0cyB7XG4gICAgICAgIHBhZGRpbmctdG9wOiA0OHB4OyB9IH1cblxuLmNvbnRhY3QtdXMge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgIzY2NjtcbiAgcGFkZGluZy1ib3R0b206IDI0cHg7IH1cbiAgLmNvbnRhY3QtdXMgaDIge1xuICAgIHBhZGRpbmctdG9wOiA0OHB4OyB9XG4gIC5jb250YWN0LXVzIC5jb250YWN0LWZvcm0ge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5jb250YWN0LXVzIC5mb3JtLWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDY1JTtcbiAgICBtYXJnaW46IDAgYXV0bzsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuY29udGFjdC11cyB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMDsgfVxuICAgICAgLmNvbnRhY3QtdXMgaDIge1xuICAgICAgICBwYWRkaW5nLXRvcDogMjRweDsgfVxuICAgICAgLmNvbnRhY3QtdXMgLmZvcm0tY29udGFpbmVyIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4udGVhbSB7XG4gIHBhZGRpbmctdG9wOiAwO1xuICBwYWRkaW5nLWJvdHRvbTogMDsgfVxuICAudGVhbSAuZXhlYy1zdW1tYXJ5IHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY5cHgpIHtcbiAgICAudGVhbSAudGVhbS1hYm91dCB7XG4gICAgICBwYWRkaW5nOiAyNHB4IDA7IH1cbiAgICAgIC50ZWFtIC50ZWFtLWFib3V0IC5pY29uIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICAudGVhbSAudGVhbS1hYm91dCAuYWxwaGEge1xuICAgICAgICB3aWR0aDogMjglO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDEycHg7IH1cbiAgICAgIC50ZWFtIC50ZWFtLWFib3V0IC5iZXRhIHtcbiAgICAgICAgd2lkdGg6IDcyJTtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA0OHB4OyB9XG4gICAgLnRlYW0gLmV4ZWMtc3VtbWFyeSB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMjRweDsgfSB9XG5cbmZvb3RlciB7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAjNjY2OyB9XG4gIGJvZHkuZnJvbnQgZm9vdGVyIHtcbiAgICBib3JkZXI6IDA7XG4gICAgcGFkZGluZy10b3A6IDA7IH1cbiAgZm9vdGVyIHAge1xuICAgIGNvbG9yOiAjNjY2O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjc7IH1cblxuaW1nLmxvZ28ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDM2cHg7XG4gIGhlaWdodDogMzZweDsgfVxuICBoMSBpbWcubG9nbyB7XG4gICAgZmxvYXQ6IHJpZ2h0OyB9XG5cbnAsIHVsLCBvbCB7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gIG1hcmdpbi10b3A6IDA7IH1cbiAgcDpsYXN0LWNoaWxkLCB1bDpsYXN0LWNoaWxkLCBvbDpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbmgyLCBoMyB7XG4gIG1hcmdpbi1ib3R0b206IDE0LjRweDtcbiAgbWFyZ2luLXRvcDogMDsgfVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUge1xuICBmb250LWZhbWlseTogJ1VidW50dScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGxpbmUtaGVpZ2h0OiAxOyB9XG4gIGgxIGEsIGgxIGE6aG92ZXIsIGgyIGEsIGgyIGE6aG92ZXIsIGgzIGEsIGgzIGE6aG92ZXIsIGg0IGEsIGg0IGE6aG92ZXIsIGg1IGEsIGg1IGE6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogNDMuMnB4O1xuICBtYXJnaW46IDA7IH1cblxuLmZyb250IGgxIHtcbiAgZm9udC1zaXplOiA4My4ycHg7IH1cbiAgLmZyb250IGgxIGRpdiB7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDEycHg7IH1cblxuaDIge1xuICBmb250LXNpemU6IDM4LjRweDtcbiAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTsgfVxuXG5oMyB7XG4gIGZvbnQtc2l6ZTogMzAuNHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogbG93ZXJjYXNlOyB9XG5cbmJvZHkudGVhbSBtYWluIC5zdHJpcGUgaDIsIGJvZHkudGVhbSBtYWluIC5zdHJpcGUgaDMsXG5ib2R5LmRvd25sb2FkIG1haW4gLnN0cmlwZSBoMixcbmJvZHkuZG93bmxvYWQgbWFpbiAuc3RyaXBlIGgzIHtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7IH1cblxuaDQge1xuICBmb250LXNpemU6IDI1LjZweDsgfVxuXG5oNSB7XG4gIGZvbnQtc2l6ZTogMTZweDsgfVxuXG5iLCBzdHJvbmcsIC5ib2xkLCBoNCB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7IH1cblxuLmNhcGl0YWxpemUge1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsgfVxuXG5oNSB7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7IH1cblxuZW0sIGkge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxucHJlIHtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBiYWNrZ3JvdW5kOiAjNDQ0O1xuICBjbGVhcjogYm90aDtcbiAgY29sb3I6ICNlNGU0ZTQ7XG4gIGZvbnQtZmFtaWx5OiBcIkJpdHN0cmVhbSBWZXJhIFNhbnMgTW9ub1wiLCBcIkNvbnNvbGFzXCIsIFwiQ291cmllclwiLCBtb25vc3BhY2U7XG4gIHBhZGRpbmc6IDI0cHggMTJweDtcbiAgd2lkdGg6IDEwMCU7IH1cblxuY29kZSB7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgYmFja2dyb3VuZDogIzQ0NDtcbiAgcGFkZGluZzogM3B4IDZweDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfVxuXG5ociB7XG4gIGJvcmRlcjogc29saWQgMnB4ICMzODM4Mzg7XG4gIGNsZWFyOiBib3RoO1xuICBoZWlnaHQ6IDBweDtcbiAgbWFyZ2luOiAyNHB4IDA7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiAxMi44cHg7IH1cblxuYmlnIHtcbiAgZm9udC1zaXplOiAxOS4ycHg7IH1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgY29sb3I6ICNmZmIzNjY7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gIC1tb3otdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzOyB9XG4gIGE6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIGNvbG9yOiAjZmZjYzk5OyB9XG4gIC5zb2NpYWwgYTpob3ZlciB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIGE6dmlzaXRlZCwgYTpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuXG4uYmlvcyBwIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMS42OyB9XG5cbmEuYmx1ZSwgc3Bhbi5ibHVlLCBlbS5ibHVlLCBzdHJvbmcuYmx1ZSwgLnRvb2x0aXAgLmJsdWUudGlwIHtcbiAgY29sb3I6ICM4ZGQ5ZWM7IH1cblxuYS5ibHVlLmJnLCBzcGFuLmJsdWUuYmcsIGVtLmJsdWUuYmcsIHN0cm9uZy5ibHVlLmJnLCAudG9vbHRpcCAuYmx1ZS5iZy50aXAge1xuICBiYWNrZ3JvdW5kOiAjYjllOGY0O1xuICBjb2xvcjogIzJiMmIyYjsgfVxuICBhLmJsdWUuYmc6aG92ZXIsIHNwYW4uYmx1ZS5iZzpob3ZlciwgZW0uYmx1ZS5iZzpob3Zlciwgc3Ryb25nLmJsdWUuYmc6aG92ZXIsIC50b29sdGlwIC5ibHVlLmJnLnRpcDpob3ZlciB7XG4gICAgY29sb3I6ICMyYjJiMmI7IH1cblxuYS5ibHVlOmhvdmVyLCBzcGFuLmJsdWU6aG92ZXIsIGVtLmJsdWU6aG92ZXIsIHN0cm9uZy5ibHVlOmhvdmVyLCAudG9vbHRpcCAuYmx1ZS50aXA6aG92ZXIge1xuICBjb2xvcjogI2I5ZThmNDsgfVxuXG5hLnJlZCwgc3Bhbi5yZWQsIGVtLnJlZCwgc3Ryb25nLnJlZCwgLnRvb2x0aXAgLnJlZC50aXAge1xuICBjb2xvcjogI2Y1NjE3NjsgfVxuXG5hLnJlZC5iZywgc3Bhbi5yZWQuYmcsIGVtLnJlZC5iZywgc3Ryb25nLnJlZC5iZywgLnRvb2x0aXAgLnJlZC5iZy50aXAge1xuICBiYWNrZ3JvdW5kOiAjZjg5MWEwO1xuICBjb2xvcjogIzJiMmIyYjsgfVxuICBhLnJlZC5iZzpob3Zlciwgc3Bhbi5yZWQuYmc6aG92ZXIsIGVtLnJlZC5iZzpob3Zlciwgc3Ryb25nLnJlZC5iZzpob3ZlciwgLnRvb2x0aXAgLnJlZC5iZy50aXA6aG92ZXIge1xuICAgIGNvbG9yOiAjMmIyYjJiOyB9XG5cbmEucmVkOmhvdmVyLCBzcGFuLnJlZDpob3ZlciwgZW0ucmVkOmhvdmVyLCBzdHJvbmcucmVkOmhvdmVyLCAudG9vbHRpcCAucmVkLnRpcDpob3ZlciB7XG4gIGNvbG9yOiAjZjg5MWEwOyB9XG5cbmEuZ3JlZW4sIHNwYW4uZ3JlZW4sIGVtLmdyZWVuLCBzdHJvbmcuZ3JlZW4sIC50b29sdGlwIC5ncmVlbi50aXAge1xuICBjb2xvcjogI2IzY2M2MjsgfVxuXG5hLmdyZWVuLmJnLCBzcGFuLmdyZWVuLmJnLCBlbS5ncmVlbi5iZywgc3Ryb25nLmdyZWVuLmJnLCAudG9vbHRpcCAuZ3JlZW4uYmcudGlwIHtcbiAgYmFja2dyb3VuZDogI2Q4ZTVhZjtcbiAgY29sb3I6ICMyYjJiMmI7IH1cbiAgYS5ncmVlbi5iZzpob3Zlciwgc3Bhbi5ncmVlbi5iZzpob3ZlciwgZW0uZ3JlZW4uYmc6aG92ZXIsIHN0cm9uZy5ncmVlbi5iZzpob3ZlciwgLnRvb2x0aXAgLmdyZWVuLmJnLnRpcDpob3ZlciB7XG4gICAgY29sb3I6ICMyYjJiMmI7IH1cblxuYS5ncmVlbjpob3Zlciwgc3Bhbi5ncmVlbjpob3ZlciwgZW0uZ3JlZW46aG92ZXIsIHN0cm9uZy5ncmVlbjpob3ZlciwgLnRvb2x0aXAgLmdyZWVuLnRpcDpob3ZlciB7XG4gIGNvbG9yOiAjZDhlNWFmOyB9XG5cbmEuZ3JheSwgc3Bhbi5ncmF5LCBlbS5ncmF5LCBzdHJvbmcuZ3JheSwgLnRvb2x0aXAgLmdyYXkudGlwIHtcbiAgY29sb3I6ICNlNGU0ZTQ7IH1cblxuYS5ncmF5LmJnLCBzcGFuLmdyYXkuYmcsIGVtLmdyYXkuYmcsIHN0cm9uZy5ncmF5LmJnLCAudG9vbHRpcCAuZ3JheS5iZy50aXAge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgY29sb3I6ICMyYjJiMmI7IH1cbiAgYS5ncmF5LmJnOmhvdmVyLCBzcGFuLmdyYXkuYmc6aG92ZXIsIGVtLmdyYXkuYmc6aG92ZXIsIHN0cm9uZy5ncmF5LmJnOmhvdmVyLCAudG9vbHRpcCAuZ3JheS5iZy50aXA6aG92ZXIge1xuICAgIGNvbG9yOiAjMmIyYjJiOyB9XG5cbmEuZ3JheTpob3Zlciwgc3Bhbi5ncmF5OmhvdmVyLCBlbS5ncmF5OmhvdmVyLCBzdHJvbmcuZ3JheTpob3ZlciwgLnRvb2x0aXAgLmdyYXkudGlwOmhvdmVyIHtcbiAgY29sb3I6IHdoaXRlOyB9XG5cbmEub3JhbmdlLCBzcGFuLm9yYW5nZSwgZW0ub3JhbmdlLCBzdHJvbmcub3JhbmdlLCAudG9vbHRpcCAub3JhbmdlLnRpcCB7XG4gIGNvbG9yOiAjZmZiMzY2OyB9XG5cbmEub3JhbmdlLmJnLCBzcGFuLm9yYW5nZS5iZywgZW0ub3JhbmdlLmJnLCBzdHJvbmcub3JhbmdlLmJnLCAudG9vbHRpcCAub3JhbmdlLmJnLnRpcCB7XG4gIGJhY2tncm91bmQ6ICNmZmNjOTk7XG4gIGNvbG9yOiAjMmIyYjJiOyB9XG4gIGEub3JhbmdlLmJnOmhvdmVyLCBzcGFuLm9yYW5nZS5iZzpob3ZlciwgZW0ub3JhbmdlLmJnOmhvdmVyLCBzdHJvbmcub3JhbmdlLmJnOmhvdmVyLCAudG9vbHRpcCAub3JhbmdlLmJnLnRpcDpob3ZlciB7XG4gICAgY29sb3I6ICMyYjJiMmI7IH1cblxuYS5vcmFuZ2U6aG92ZXIsIHNwYW4ub3JhbmdlOmhvdmVyLCBlbS5vcmFuZ2U6aG92ZXIsIHN0cm9uZy5vcmFuZ2U6aG92ZXIsIC50b29sdGlwIC5vcmFuZ2UudGlwOmhvdmVyIHtcbiAgY29sb3I6ICNmZmNjOTk7IH1cblxuYS5wdXJwbGUsIHNwYW4ucHVycGxlLCBlbS5wdXJwbGUsIHN0cm9uZy5wdXJwbGUsIC50b29sdGlwIC5wdXJwbGUudGlwIHtcbiAgY29sb3I6ICNhNDkxYzI7IH1cblxuYS5wdXJwbGUuYmcsIHNwYW4ucHVycGxlLmJnLCBlbS5wdXJwbGUuYmcsIHN0cm9uZy5wdXJwbGUuYmcsIC50b29sdGlwIC5wdXJwbGUuYmcudGlwIHtcbiAgYmFja2dyb3VuZDogI2NkYzJkZTtcbiAgY29sb3I6ICMyYjJiMmI7IH1cbiAgYS5wdXJwbGUuYmc6aG92ZXIsIHNwYW4ucHVycGxlLmJnOmhvdmVyLCBlbS5wdXJwbGUuYmc6aG92ZXIsIHN0cm9uZy5wdXJwbGUuYmc6aG92ZXIsIC50b29sdGlwIC5wdXJwbGUuYmcudGlwOmhvdmVyIHtcbiAgICBjb2xvcjogIzJiMmIyYjsgfVxuXG5hLnB1cnBsZTpob3Zlciwgc3Bhbi5wdXJwbGU6aG92ZXIsIGVtLnB1cnBsZTpob3Zlciwgc3Ryb25nLnB1cnBsZTpob3ZlciwgLnRvb2x0aXAgLnB1cnBsZS50aXA6aG92ZXIge1xuICBjb2xvcjogI2NkYzJkZTsgfVxuXG4uYnJlYWRjcnVtYiB7XG4gIG1hcmdpbi10b3A6IDEycHg7XG4gIHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2U7IH1cblxuLnRvb2x0aXAge1xuICBib3JkZXItYm90dG9tOiBkb3R0ZWQgMnB4ICM2NjY7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9XG4gIC50b29sdGlwIC50aXAge1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHotaW5kZXg6IDExMTtcbiAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIHdpZHRoOiAyNDBweDtcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXI6IHNvbGlkIDNweCAjMmIyYjJiO1xuICAgIGNvbG9yOiAjMzMzO1xuICAgIHBhZGRpbmc6IDEycHg7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnc29jaGFkZXYnO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL3NvY2hhZGV2L3NvY2hhZGV2LmVvdD8zMjM0NTY0N1wiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9zb2NoYWRldi9zb2NoYWRldi5lb3Q/MzIzNDU2NDcjaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnRzL3NvY2hhZGV2L3NvY2hhZGV2LndvZmY/MzIzNDU2NDdcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvc29jaGFkZXYvc29jaGFkZXYudHRmPzMyMzQ1NjQ3XCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIuLi9mb250cy9zb2NoYWRldi9zb2NoYWRldi5zdmc/MzIzNDU2NDcjc29jaGFkZXZcIikgZm9ybWF0KFwic3ZnXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuLyogQ2hyb21lIGhhY2s6IFNWRyBpcyByZW5kZXJlZCBtb3JlIHNtb290aCBpbiBXaW5kb3p6ZS4gMTAwJSBtYWdpYywgdW5jb21tZW50IGlmIHlvdSBuZWVkIGl0LiAqL1xuLyogTm90ZSwgdGhhdCB3aWxsIGJyZWFrIGhpbnRpbmchIEluIG90aGVyIE9TLWVzIGZvbnQgd2lsbCBiZSBub3QgYXMgc2hhcnAgYXMgaXQgY291bGQgYmUgKi9cbi8qXG5AbWVkaWEgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOjApIHtcbiAgQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdzb2NoYWRldic7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnQvc29jaGFkZXYuc3ZnPzMyMzQ1NjQ3I3NvY2hhZGV2JykgZm9ybWF0KCdzdmcnKTtcbiAgfVxufVxuKi9cbi5pY29uLmljb24tMngge1xuICBmb250LXNpemU6IDJlbTsgfVxuXG4uaWNvbi5pY29uLTN4IHtcbiAgZm9udC1zaXplOiAzZW07IH1cblxuLmljb24uaWNvbi00eCB7XG4gIGZvbnQtc2l6ZTogNGVtOyB9XG5cbi5pY29uLmljb24tNXgge1xuICBmb250LXNpemU6IDVlbTsgfVxuXG4uaWNvbi5pY29uLTZ4IHtcbiAgZm9udC1zaXplOiA2ZW07IH1cblxuLmljb24uaWNvbi03eCB7XG4gIGZvbnQtc2l6ZTogN2VtOyB9XG5cbi5pY29uLmljb24tOHgge1xuICBmb250LXNpemU6IDhlbTsgfVxuXG4uaWNvbi5pY29uLTl4IHtcbiAgZm9udC1zaXplOiA5ZW07IH1cblxuLmljb24uaWNvbi0xMHgge1xuICBmb250LXNpemU6IDEwZW07IH1cblxuLmljb24uaWNvbi0xMXgge1xuICBmb250LXNpemU6IDExZW07IH1cblxuLmljb24uaWNvbi0xMngge1xuICBmb250LXNpemU6IDEyZW07IH1cblxuLmljb24tc3BpbiB7XG4gIC13ZWJraXQtYW5pbWF0aW9uOiBpY29uLXNwaW4gMnMgaW5maW5pdGUgbGluZWFyO1xuICBhbmltYXRpb246IGljb24tc3BpbiAycyBpbmZpbml0ZSBsaW5lYXI7IH1cblxuLmljb24tcHVsc2Uge1xuICAtd2Via2l0LWFuaW1hdGlvbjogaWNvbi1zcGluIDFzIGluZmluaXRlIHN0ZXBzKDgpO1xuICBhbmltYXRpb246IGljb24tc3BpbiAxcyBpbmZpbml0ZSBzdGVwcyg4KTsgfVxuXG5Aa2V5ZnJhbWVzIGljb24tc3BpbiB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XG4gIDEwMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMzU5ZGVnKTtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNTlkZWcpOyB9IH1cblxuLmljb24tcm90YXRlLTkwIHtcbiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQmFzaWNJbWFnZShyb3RhdGlvbj0xKTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTsgfVxuXG4uaWNvbi1yb3RhdGUtMTgwIHtcbiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQmFzaWNJbWFnZShyb3RhdGlvbj0yKTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTsgfVxuXG4uaWNvbi1yb3RhdGUtMjcwIHtcbiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQmFzaWNJbWFnZShyb3RhdGlvbj0zKTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgyNzBkZWcpO1xuICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMjcwZGVnKTtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMjcwZGVnKTsgfVxuXG4uaWNvbi1mbGlwLWhvcml6b250YWwge1xuICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5CYXNpY0ltYWdlKHJvdGF0aW9uPTAsIG1pcnJvcj0xKTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKC0xLCAxKTtcbiAgLW1zLXRyYW5zZm9ybTogc2NhbGUoLTEsIDEpO1xuICB0cmFuc2Zvcm06IHNjYWxlKC0xLCAxKTsgfVxuXG4uaWNvbi1mbGlwLXZlcnRpY2FsIHtcbiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQmFzaWNJbWFnZShyb3RhdGlvbj0yLCBtaXJyb3I9MSk7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLCAtMSk7XG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEsIC0xKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLCAtMSk7IH1cblxuOnJvb3QgLmZhLXJvdGF0ZS05MCxcbjpyb290IC5mYS1yb3RhdGUtMTgwLFxuOnJvb3QgLmZhLXJvdGF0ZS0yNzAsXG46cm9vdCAuZmEtZmxpcC1ob3Jpem9udGFsLFxuOnJvb3QgLmZhLWZsaXAtdmVydGljYWwge1xuICBmaWx0ZXI6IG5vbmU7IH1cblxuLmljb24ge1xuICBmb250LWZhbWlseTogXCJzb2NoYWRldlwiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIHNwZWFrOiBub25lO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDtcbiAgZm9udC12YXJpYW50OiBub3JtYWw7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBsaW5lLWhlaWdodDogMTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDFlbTtcbiAgd2lkdGg6IDFlbTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7IH1cblxuLmljb24tY2hhdDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODAwJzsgfVxuXG4vKiAn7qCAJyAqL1xuLmljb24tY29tbWVudDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODAxJzsgfVxuXG4vKiAn7qCBJyAqL1xuLmljb24tdXNlcnM6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgwMic7IH1cblxuLyogJ+6ggicgKi9cbi5pY29uLWxldHRlci1hOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MDMnOyB9XG5cbi8qICfuoIMnICovXG4uaWNvbi11c2VyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MDQnOyB9XG5cbi8qICfuoIQnICovXG4uaWNvbi1oZWFydDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODA1JzsgfVxuXG4vKiAn7qCFJyAqL1xuLmljb24tZHJ1cGFsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MDYnOyB9XG5cbi8qICfuoIYnICovXG4uaWNvbi1mYWNlYm9vay1zcXVhcmVkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MDcnOyB9XG5cbi8qICfuoIcnICovXG4uaWNvbi1naXRodWItY2lyY2xlZDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODA4JzsgfVxuXG4vKiAn7qCIJyAqL1xuLmljb24taHRtbDU6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgwOSc7IH1cblxuLyogJ+6giScgKi9cbi5pY29uLWluc3RhZ3JhbTpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODBhJzsgfVxuXG4vKiAn7qCKJyAqL1xuLmljb24tbGlua2VkaW4tc3F1YXJlZDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODBiJzsgfVxuXG4vKiAn7qCLJyAqL1xuLmljb24teW91dHViZS1wbGF5OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MGMnOyB9XG5cbi8qICfuoIwnICovXG4uaWNvbi12aW1lby1zcXVhcmVkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MGQnOyB9XG5cbi8qICfuoI0nICovXG4uaWNvbi10d2l0dGVyLXNxdWFyZWQ6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgwZSc7IH1cblxuLyogJ+6gjicgKi9cbi5pY29uLXNsYWNrOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MGYnOyB9XG5cbi8qICfuoI8nICovXG4uaWNvbi1zdGFja292ZXJmbG93OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MTAnOyB9XG5cbi8qICfuoJAnICovXG4uaWNvbi1saW51eDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODExJzsgfVxuXG4vKiAn7qCRJyAqL1xuLmljb24tZ3BsdXMtc3F1YXJlZDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODEyJzsgfVxuXG4vKiAn7qCSJyAqL1xuLmljb24tYXBwbGU6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgxMyc7IH1cblxuLyogJ+6gkycgKi9cbi5pY29uLWFuZHJvaWQ6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgxNCc7IH1cblxuLyogJ+6glCcgKi9cbi5pY29uLWNzczM6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgxNSc7IH1cblxuLyogJ+6glScgKi9cbi5pY29uLWdpdC1zcXVhcmVkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MTYnOyB9XG5cbi8qICfuoJYnICovXG4uaWNvbi1nYXVnZTpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODE3JzsgfVxuXG4vKiAn7qCXJyAqL1xuLmljb24tY2hhcnQtYmFyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MTgnOyB9XG5cbi8qICfuoJgnICovXG4uaWNvbi1jaGFydC1hcmVhOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MTknOyB9XG5cbi8qICfuoJknICovXG4uaWNvbi1jaGFydC1waWU6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgxYSc7IH1cblxuLyogJ+6gmicgKi9cbi5pY29uLWNoYXJ0LWxpbmU6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgxYic7IH1cblxuLyogJ+6gmycgKi9cbi5pY29uLXRpY2tldDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODFjJzsgfVxuXG4vKiAn7qCcJyAqL1xuLmljb24tcm9ja2V0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MWQnOyB9XG5cbi8qICfuoJ0nICovXG4uaWNvbi1idWc6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgxZSc7IH1cblxuLyogJ+6gnicgKi9cbi5pY29uLWNlcnRpZmljYXRlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MWYnOyB9XG5cbi8qICfuoJ8nICovXG4uaWNvbi1iZWFrZXI6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgyMCc7IH1cblxuLyogJ+6goCcgKi9cbi5pY29uLW1hZ2ljOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MjEnOyB9XG5cbi8qICfuoKEnICovXG4uaWNvbi10cnVjazpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODIyJzsgfVxuXG4vKiAn7qCiJyAqL1xuLmljb24tbWVka2l0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MjMnOyB9XG5cbi8qICfuoKMnICovXG4uaWNvbi1hbWJ1bGFuY2U6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgyNCc7IH1cblxuLyogJ+6gpCcgKi9cbi5pY29uLWJvbWI6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgyNSc7IH1cblxuLyogJ+6gpScgKi9cbi5pY29uLXNoaWVsZDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODI2JzsgfVxuXG4vKiAn7qCmJyAqL1xuLmljb24taGVhcnRiZWF0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MjcnOyB9XG5cbi8qICfuoKcnICovXG4uaWNvbi10aW50OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MjgnOyB9XG5cbi8qICfuoKgnICovXG4uaWNvbi1zdGFyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MjknOyB9XG5cbi8qICfuoKknICovXG4uaWNvbi1jaGlsZDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODJhJzsgfVxuXG4vKiAn7qCqJyAqL1xuLmljb24tY2FuY2VsLWNpcmNsZWQ6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgyYic7IH1cblxuLyogJ+6gqycgKi9cbi5pY29uLW9rLWNpcmNsZWQ6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgyYyc7IH1cblxuLyogJ+6grCcgKi9cbi5pY29uLWhlbHAtY2lyY2xlZDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODJkJzsgfVxuXG4vKiAn7qCtJyAqL1xuLmljb24taW5mby1jaXJjbGVkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MmUnOyB9XG5cbi8qICfuoK4nICovXG4uaWNvbi10aHVtYnMtdXAtYWx0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MmYnOyB9XG5cbi8qICfuoK8nICovXG4uaWNvbi1jb2c6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgzMCc7IH1cblxuLyogJ+6gsCcgKi9cbi5pY29uLWNvZy1hbHQ6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgzMSc7IH1cblxuLyogJ+6gsScgKi9cbi5pY29uLXBsYXktY2lyY2xlZDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODMyJzsgfVxuXG4vKiAn7qCyJyAqL1xuLmljb24tcGxheTpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODMzJzsgfVxuXG4vKiAn7qCzJyAqL1xuLmljb24tZGlhbW9uZDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODM0JzsgfVxuXG4vKiAn7qC0JyAqL1xuLmljb24tYW5nbGUtcmlnaHQ6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgzNSc7IH1cblxuLyogJ+6gtScgKi9cbi5pY29uLXB1enpsZTpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODM2JzsgfVxuXG4vKiAn7qC2JyAqL1xuLmljb24tcGVuY2lsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MzcnOyB9XG5cbi8qICfuoLcnICovXG4uaWNvbi1saW5rOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4MzgnOyB9XG5cbi8qICfuoLgnICovXG4uaWNvbi1saW5rLWV4dDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODM5JzsgfVxuXG4vKiAn7qC5JyAqL1xuLmljb24tZmxhZzpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODNhJzsgfVxuXG4vKiAn7qC6JyAqL1xuLmljb24tcGljdHVyZTpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODNiJzsgfVxuXG4vKiAn7qC7JyAqL1xuLmljb24tbWFpbC1zcXVhcmVkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4M2MnOyB9XG5cbi8qICfuoLwnICovXG4uaWNvbi1tYWlsLWFsdDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODNkJzsgfVxuXG4vKiAn7qC9JyAqL1xuLmljb24tY2xvY2s6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTgzZSc7IH1cblxuLyogJ+6gvicgKi9cbi5pY29uLWxpZ2h0YnVsYjpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODNmJzsgfVxuXG4vKiAn7qC/JyAqL1xuLmljb24tYXdhcmQ6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTg0MCc7IH1cblxuLyogJ+6hgCcgKi9cbi5pY29uLWZsYXNoOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4NDEnOyB9XG5cbi8qICfuoYEnICovXG4uaWNvbi1zdW46YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTg0Mic7IH1cblxuLyogJ+6hgicgKi9cbi5pY29uLWdsb2JlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4NDMnOyB9XG5cbi8qICfuoYMnICovXG4uaWNvbi1jaXJjbGU6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTg0NCc7IH1cblxuLyogJ+6hhCcgKi9cbi5pY29uLWNpcmNsZS1ub3RjaDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODQ1JzsgfVxuXG4vKiAn7qGFJyAqL1xuLmljb24tY3ViZXM6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTg0Nic7IH1cblxuLyogJ+6hhicgKi9cbi5pY29uLWN1YmU6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTg0Nyc7IH1cblxuLyogJ+6hhycgKi9cbi5pY29uLXRyZWU6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTg0OCc7IH1cblxuLyogJ+6hiCcgKi9cbi5pY29uLWRhdGFiYXNlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4NDknOyB9XG5cbi8qICfuoYknICovXG4uaWNvbi1saWZlYnVveTpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODRhJzsgfVxuXG4vKiAn7qGKJyAqL1xuLmljb24tdXNlci1tZDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODRiJzsgfVxuXG4vKiAn7qGLJyAqL1xuLmljb24tbW90b3JjeWNsZTpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODRjJzsgfVxuXG4vKiAn7qGMJyAqL1xuLmljb24tcmlnaHQtY2lyY2xlZDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODRkJzsgfVxuXG4vKiAn7qGNJyAqL1xuLmljb24tYW5nbGUtZG91YmxlLXJpZ2h0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4NGUnOyB9XG5cbi8qICfuoY4nICovXG4uaWNvbi1yaWdodC1kaXI6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTg0Zic7IH1cblxuLyogJ+6hjycgKi9cbi5pY29uLXJpZ2h0LW9wZW46YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTg1MCc7IH1cblxuLyogJ+6hkCcgKi9cbi5pY29uLW1lbnU6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTg1MSc7IH1cblxuLyogJ+6hkScgKi9cbi5pY29uLXBob25lLXNxdWFyZWQ6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTg1Mic7IH1cblxuLyogJ+6hkicgKi9cbi5pY29uLXBob25lOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4NTMnOyB9XG5cbi8qICfuoZMnICovXG4uaWNvbi1yc3Mtc3F1YXJlZDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODU0JzsgfVxuXG4vKiAn7qGUJyAqL1xuLmljb24tZmlsZS1wZGY6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTg1NSc7IH1cblxuLyogJ+6hlScgKi9cbi5pY29uLWRvYy10ZXh0LWludjpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODU2JzsgfVxuXG4vKiAn7qGWJyAqL1xuLmljb24tZG9jLWludjpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODU3JzsgfVxuXG4vKiAn7qGXJyAqL1xuLmljb24tYmVsbDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODU4JzsgfVxuXG4vKiAn7qGYJyAqL1xuLmljb24tcXVvdGUtbGVmdDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODU5JzsgfVxuXG4vKiAn7qGZJyAqL1xuLmljb24tcXVvdGUtcmlnaHQ6YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTg1YSc7IH1cblxuLyogJ+6hmicgKi9cbi5pY29uLXByaW50OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4NWInOyB9XG5cbi8qICfuoZsnICovXG4uaWNvbi1hdHRlbnRpb246YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTg1Yyc7IH1cblxuLyogJ+6hnCcgKi9cbi5pY29uLWF0dGVudGlvbi1jaXJjbGVkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4NWQnOyB9XG5cbi8qICfuoZ0nICovXG4uaWNvbi1mbGFnLWVtcHR5OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4NWUnOyB9XG5cbi8qICfuoZ4nICovXG4uaWNvbi1mbGFnLWNoZWNrZXJlZDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODVmJzsgfVxuXG4vKiAn7qGfJyAqL1xuLmljb24tZXllOmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGU4NjAnOyB9XG5cbi8qICfuoaAnICovXG4uaWNvbi1waW46YmVmb3JlIHtcbiAgY29udGVudDogJ1xcZTg2MSc7IH1cblxuLyogJ+6hoScgKi9cbi5pY29uLXNlYXJjaDpiZWZvcmUge1xuICBjb250ZW50OiAnXFxlODYyJzsgfVxuXG4vKiAn7qGiJyAqL1xuLm1lc3NhZ2VzIHtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICBwYWRkaW5nOiAyNHB4OyB9XG4gIC5tZXNzYWdlcy5lcnJvciB7XG4gICAgYmFja2dyb3VuZDogI2ZlZjFmMztcbiAgICBjb2xvcjogI2IyMGIyMzsgfVxuICAubWVzc2FnZXMuc3VjY2VzcyB7XG4gICAgYmFja2dyb3VuZDogI2ViZjJkNTtcbiAgICBjb2xvcjogIzdmOTczMTsgfVxuICAubWVzc2FnZXMgdWwsIC5tZXNzYWdlcyBsaSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgLm1lc3NhZ2VzIHVsIHtcbiAgICBtYXJnaW4tbGVmdDogMjRweDsgfVxuXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7IH1cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDA7XG4gIG1hcmdpbjogMjRweCAwIDAgMDtcbiAgcGFkZGluZzogMDsgfVxuICBmaWVsZHNldC5jb250YWN0IHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgZmllbGRzZXQuY29udGFjdCAubWVzc2FnZXMge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgIGZpZWxkc2V0LmNvbnRhY3QgLmZvcm0taXRlbSB7XG4gICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7IH1cbiAgICBmaWVsZHNldC5jb250YWN0IGxhYmVsIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICBmaWVsZHNldC5jb250YWN0IGlucHV0LFxuICAgIGZpZWxkc2V0LmNvbnRhY3Qgc2VsZWN0LFxuICAgIGZpZWxkc2V0LmNvbnRhY3QgdGV4dGFyZWEge1xuICAgICAgY29sb3I6ICMzMzM7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgICAgZm9udC1zaXplOiAxOC40cHg7IH1cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICBmaWVsZHNldC5jb250YWN0IGlucHV0LFxuICAgICAgICBmaWVsZHNldC5jb250YWN0IHNlbGVjdCxcbiAgICAgICAgZmllbGRzZXQuY29udGFjdCB0ZXh0YXJlYSB7XG4gICAgICAgICAgZm9udC1zaXplOiAxOC40cHg7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMztcbiAgICAgICAgICBtYXJnaW4tdG9wOiAwOyB9IH1cbiAgICBmaWVsZHNldC5jb250YWN0IGlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxMnB4OyB9XG4gICAgICBmaWVsZHNldC5jb250YWN0IGlucHV0W3R5cGU9XCJzdWJtaXRcIl06aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGJjNGUyOyB9XG5cbi5wcm9qZWN0cy1saXN0IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBhbGlnbi1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAucHJvamVjdHMtbGlzdDo6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgLnByb2plY3RzLWxpc3QgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgICAucHJvamVjdHMtbGlzdCBsaSB7XG4gICAgICAgIHdpZHRoOiAyNSU7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDEycHg7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMnB4OyB9XG4gICAgICAgIC5wcm9qZWN0cy1saXN0IGxpOm50aC1jaGlsZCg0KSB7XG4gICAgICAgICAgcGFkZGluZy1yaWdodDogMDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkgYW5kIChtaW4td2lkdGg6IDQ5MXB4KSB7XG4gIC5wcm9qZWN0cy1saXN0IGxpIHtcbiAgICB3aWR0aDogMzMuMzMzMyU7XG4gICAgcGFkZGluZy1yaWdodDogMTJweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTJweDsgfVxuICAgIC5wcm9qZWN0cy1saXN0IGxpOm50aC1jaGlsZCgzKSB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDkwcHgpIHtcbiAgICAgIC5wcm9qZWN0cy1saXN0IGxpIHtcbiAgICAgICAgd2lkdGg6IDE4MHB4O1xuICAgICAgICBtYXJnaW46IDZweCBhdXRvOyB9IH1cbiAgLnByb2plY3RzLWxpc3QgYSB7XG4gICAgYmFja2dyb3VuZDogIzQ0NDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHRleHQtaW5kZW50OiAtOTk5OXB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMyYjJiMmI7XG4gICAgZmlsdGVyOiBncmF5c2NhbGUoMTAwKTtcbiAgICAtd2Via2l0LWZpbHRlcjogZ3JheXNjYWxlKDEwMCk7XG4gICAgLW1vei1maWx0ZXI6IGdyYXlzY2FsZSgxMDApO1xuICAgIGZpbHRlcjogZ3JheXNjYWxlKDEwMCk7XG4gICAgZmlsdGVyOiBncmF5O1xuICAgIC13ZWJraXQtZmlsdGVyOiBncmF5c2NhbGUoMSk7IH1cbiAgICAucHJvamVjdHMtbGlzdCBhOmhvdmVyIHtcbiAgICAgIGZpbHRlcjogZ3JheXNjYWxlKDApO1xuICAgICAgLXdlYmtpdC1maWx0ZXI6IGdyYXlzY2FsZSgwKTtcbiAgICAgIC1tb3otZmlsdGVyOiBncmF5c2NhbGUoMCk7XG4gICAgICBmaWx0ZXI6IGdyYXlzY2FsZSgwKTtcbiAgICAgIGZpbHRlcjogZ3JheTtcbiAgICAgIC13ZWJraXQtZmlsdGVyOiBncmF5c2NhbGUoMCk7IH1cbiAgICAucHJvamVjdHMtbGlzdCBhLnNvY2hhLWRldi13aGl0ZS1sYWJlbCB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvc3ByaXRlcy5wbmdcIik7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTgwcHggLTI3MHB4O1xuICAgICAgd2lkdGg6IDE4MHB4O1xuICAgICAgaGVpZ2h0OiAxMzVweDtcbiAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7IH1cbiAgICAgIEBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIHtcbiAgICAgICAgLnByb2plY3RzLWxpc3QgYS5zb2NoYS1kZXYtd2hpdGUtbGFiZWwge1xuICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9zcHJpdGVzQDJ4LnBuZ1wiKTtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDU0MHB4IDQwNXB4OyB9IH1cbiAgICAucHJvamVjdHMtbGlzdCBhLnNjaWVuY2Uge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Nwcml0ZXMucG5nXCIpO1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMHB4IDBweDtcbiAgICAgIHdpZHRoOiAxODBweDtcbiAgICAgIGhlaWdodDogMTM1cHg7XG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyB9XG4gICAgICBAbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSB7XG4gICAgICAgIC5wcm9qZWN0cy1saXN0IGEuc2NpZW5jZSB7XG4gICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Nwcml0ZXNAMngucG5nXCIpO1xuICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogNTQwcHggNDA1cHg7IH0gfVxuICAgIC5wcm9qZWN0cy1saXN0IGEuZGlzY292ZXJ5LWVkdWNhdGlvbiB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvc3ByaXRlcy5wbmdcIik7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTgwcHggMHB4O1xuICAgICAgd2lkdGg6IDE4MHB4O1xuICAgICAgaGVpZ2h0OiAxMzVweDtcbiAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7IH1cbiAgICAgIEBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIHtcbiAgICAgICAgLnByb2plY3RzLWxpc3QgYS5kaXNjb3ZlcnktZWR1Y2F0aW9uIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvc3ByaXRlc0AyeC5wbmdcIik7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiA1NDBweCA0MDVweDsgfSB9XG4gICAgLnByb2plY3RzLWxpc3QgYS5yZXBlcXVpdHkge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2VzL3Nwcml0ZXMucG5nXCIpO1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTM2MHB4IC0xMzVweDtcbiAgICAgIHdpZHRoOiAxODBweDtcbiAgICAgIGhlaWdodDogMTM1cHg7XG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyB9XG4gICAgICBAbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSB7XG4gICAgICAgIC5wcm9qZWN0cy1saXN0IGEucmVwZXF1aXR5IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvc3ByaXRlc0AyeC5wbmdcIik7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiA1NDBweCA0MDVweDsgfSB9XG4gICAgLnByb2plY3RzLWxpc3QgYS5mY2MtZ292IHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9zcHJpdGVzLnBuZ1wiKTtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDBweCAtMjcwcHg7XG4gICAgICB3aWR0aDogMTgwcHg7XG4gICAgICBoZWlnaHQ6IDEzNXB4O1xuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgfVxuICAgICAgQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkge1xuICAgICAgICAucHJvamVjdHMtbGlzdCBhLmZjYy1nb3Yge1xuICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9zcHJpdGVzQDJ4LnBuZ1wiKTtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDU0MHB4IDQwNXB4OyB9IH1cbiAgICAucHJvamVjdHMtbGlzdCBhLnRoZS1uYXRpb25hbC1wcmVzcy1jbHViIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9zcHJpdGVzLnBuZ1wiKTtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC0xODBweCAtMTM1cHg7XG4gICAgICB3aWR0aDogMTgwcHg7XG4gICAgICBoZWlnaHQ6IDEzNXB4O1xuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgfVxuICAgICAgQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkge1xuICAgICAgICAucHJvamVjdHMtbGlzdCBhLnRoZS1uYXRpb25hbC1wcmVzcy1jbHViIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvc3ByaXRlc0AyeC5wbmdcIik7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiA1NDBweCA0MDVweDsgfSB9XG4gICAgLnByb2plY3RzLWxpc3QgYS50aGUtY29vay1wb2xpdGljYWwtcmVwb3J0IHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9zcHJpdGVzLnBuZ1wiKTtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDBweCAtMTM1cHg7XG4gICAgICB3aWR0aDogMTgwcHg7XG4gICAgICBoZWlnaHQ6IDEzNXB4O1xuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgfVxuICAgICAgQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkge1xuICAgICAgICAucHJvamVjdHMtbGlzdCBhLnRoZS1jb29rLXBvbGl0aWNhbC1yZXBvcnQge1xuICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9zcHJpdGVzQDJ4LnBuZ1wiKTtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IDU0MHB4IDQwNXB4OyB9IH1cbiAgICAucHJvamVjdHMtbGlzdCBhLmNoYW5uZWwtZGVtb2NyYWN5IHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9zcHJpdGVzLnBuZ1wiKTtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC0zNjBweCAwcHg7XG4gICAgICB3aWR0aDogMTgwcHg7XG4gICAgICBoZWlnaHQ6IDEzNXB4O1xuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgfVxuICAgICAgQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkge1xuICAgICAgICAucHJvamVjdHMtbGlzdCBhLmNoYW5uZWwtZGVtb2NyYWN5IHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvc3ByaXRlc0AyeC5wbmdcIik7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiA1NDBweCA0MDVweDsgfSB9XG5cbiNtb2RhbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC41KTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIHotaW5kZXg6IDExNTsgfVxuXG4ubW9kYWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGNvbG9yOiAjMmIyYjJiO1xuICBmb250LXNpemU6IDE2cHg7XG4gIG1hcmdpbjogMjRweCBhdXRvO1xuICBwYWRkaW5nOiAyNHB4O1xuICBtYXgtd2lkdGg6IDEwMjRweDsgfVxuICAubW9kYWwgaDMge1xuICAgIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG4gIC5tb2RhbCBhIHtcbiAgICBjb2xvcjogIzIzYjNkNzsgfVxuICAubW9kYWwgLndoaXRlLWxhYmVsLWZsYWcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBoZWlnaHQ6IDEyNnB4O1xuICAgIHdpZHRoOiAxMjZweDtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgLm1vZGFsIC5mbGFnIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmIyYjJiO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIGxlZnQ6IC0zOXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAzNnB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICB0b3A6IDMxcHg7XG4gICAgd2lkdGg6IDE3MnB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjlweCkge1xuICAgIC5tb2RhbC53aGl0ZS1sYWJlbCB7XG4gICAgICB3aWR0aDogNDAlO1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgYm90dG9tOiBhdXRvOyB9IH1cbiAgLm1vZGFsLndoaXRlLWxhYmVsIC5hbHBoYSB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAubW9kYWwud2hpdGUtbGFiZWwgLmJldGEge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5tb2RhbCAuYWxwaGEgaW1nIHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgLm1vZGFsIC5hbHBoYSB7XG4gICAgICB3aWR0aDogNjYlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgICAubW9kYWwgLmJldGEge1xuICAgICAgd2lkdGg6IDM0JTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7IH0gfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubW9kYWwge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW46IDEycHg7XG4gICAgICBwYWRkaW5nOiAxMnB4OyB9XG4gICAgICAubW9kYWwgLmJldGEge1xuICAgICAgICBwYWRkaW5nOiAxMnB4IDAgMCAwOyB9IH1cblxuLmJpb3Mge1xuICBwYWRkaW5nLWJvdHRvbTogOTZweDsgfVxuICAuYmlvcyAuY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiAyNHB4IDA7XG4gICAgYWxpZ24taXRlbXM6IHRvcDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsgfVxuICAuYmlvcyAuYWxwaGEge1xuICAgIHdpZHRoOiAxOCU7IH1cbiAgLmJpb3MgLmJldGEge1xuICAgIHdpZHRoOiA4MiU7IH1cbiAgLmJpb3MgLmF2YXRhciB7XG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogMCAwIDEycHggMDsgfVxuICAuYmlvcyB1bC5zb2NpYWwge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgICAuYmlvcyB1bC5zb2NpYWwgbGkge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW46IDAgMTJweCAwIDA7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmJpb3MgLmNvbnRhaW5lciB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBhZGRpbmctdG9wOiAzNnB4OyB9XG4gICAgLmJpb3MgLmFscGhhIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgLmJpb3MgLmJldGEge1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAgIC5iaW9zIC5iZXRhIGgzIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgLmJpb3MgLmF2YXRhciB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtYXJnaW46IDEycHg7XG4gICAgICB3aWR0aDogMTQ0cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiAzcHg7IH0gfVxuXG4uc3RyaXBlLmhlcm8ge1xuICBwYWRkaW5nOiAwO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgdG9wO1xuICBib3JkZXItdG9wOiBzb2xpZCAxcHggIzAwMDtcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4ICMwMDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgLnN0cmlwZS5oZXJvIHtcbiAgICAgIGhlaWdodDogNTAwcHg7IH0gfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAuc3RyaXBlLmhlcm8ge1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDEwMCU7IH0gfVxuICBib2R5LmZyb250IC5zdHJpcGUuaGVybyB7XG4gICAgYm9yZGVyLXRvcDogc29saWQgMXB4ICMwMDA7XG4gICAgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4ICNiYmI7XG4gICAgbWFyZ2luLXRvcDogMjRweDtcbiAgICBwYWRkaW5nLXRvcDogMjRweDsgfVxuICAuc3RyaXBlLmhlcm8gLmhlcm8taW50cm8ge1xuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNik7XG4gICAgbWFyZ2luLXRvcDogNzJweDtcbiAgICBwYWRkaW5nOiAxMnB4IDI0cHg7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY5cHgpIHtcbiAgICAgIC5zdHJpcGUuaGVybyAuaGVyby1pbnRybyB7XG4gICAgICAgIHdpZHRoOiA3MCU7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICBmb250LXNpemU6IDI4LjhweDsgfSB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuc3RyaXBlLmhlcm8gLmhlcm8taW50cm8ge1xuICAgICAgICBtYXJnaW46IDI0cHg7IH0gfVxuXG4ud29ya2Zsb3cgLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogMTAyNHB4OyB9XG5cbi53b3JrZmxvdyBmb290ZXIgLmNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogNzY4cHg7IH1cblxuLmNvbWljLWJhbm5lciB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvY29taWNzL2NvbWljLWJnLTAwLnBuZyk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcCBsZWZ0O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMjRweCAwIDAgMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24tY29udGVudDogZmxleC1lbmQ7XG4gIGFsaWduLWl0ZW1zOiB0b3A7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICB3aWR0aDogMTAwJTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY5cHgpIHtcbiAgICAuY29taWMtYmFubmVyIHtcbiAgICAgIG1hcmdpbjogNDhweCAwIDAgMDtcbiAgICAgIGJvcmRlcjogc29saWQgMXB4ICM0NDQ7IH0gfVxuICAuY29taWMtYmFubmVyIC5pc3N1ZSB7XG4gICAgd2lkdGg6IDE3JTtcbiAgICBiYWNrZ3JvdW5kOiAjMzMzO1xuICAgIGJvcmRlci1yaWdodDogc29saWQgMXB4ICM0NDQ7XG4gICAgaGVpZ2h0OiAyNTBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5jb21pYy1iYW5uZXIgLmlzc3VlIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gICAgLmNvbWljLWJhbm5lciAuaXNzdWUgLm51bWJlcnMsIC5jb21pYy1iYW5uZXIgLmlzc3VlIC5udW1iZXJzIC5kYXRlLCAuY29taWMtYmFubmVyIC5pc3N1ZSAucHVibGlzaGVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgcGFkZGluZzogMTJweCAwOyB9XG4gICAgLmNvbWljLWJhbm5lciAuaXNzdWUgLm51bWJlcnMge1xuICAgICAgdG9wOiAwO1xuICAgICAgaGVpZ2h0OiAxODVweDsgfVxuICAgICAgLmNvbWljLWJhbm5lciAuaXNzdWUgLm51bWJlcnMgLnByaWNlIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGNvbG9yOiAjZTRlNGU0O1xuICAgICAgICBmb250LXNpemU6IDUxLjJweDtcbiAgICAgICAgcGFkZGluZzogMjRweCAwOyB9XG4gICAgICAuY29taWMtYmFubmVyIC5pc3N1ZSAubnVtYmVycyAuZGF0ZSB7XG4gICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICBsZWZ0OiBhdXRvO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBjb2xvcjogIzQ0NDtcbiAgICAgICAgcGFkZGluZzogNnB4IDEycHg7XG4gICAgICAgIGJhY2tncm91bmQ6IHVybCguLi9pbWFnZXMvY29taWNzL2NvbWljLWJnLTAyLnBuZykgcmVwZWF0IDAgMCAjZmZmOyB9XG4gICAgICAgIC5jb21pYy1iYW5uZXIgLmlzc3VlIC5udW1iZXJzIC5kYXRlIC5udW1iZXIge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMjUuNnB4O1xuICAgICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsgfVxuICAgIC5jb21pYy1iYW5uZXIgLmlzc3VlIC5wdWJsaXNoZXIge1xuICAgICAgYm90dG9tOiAwO1xuICAgICAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1hZ2VzL3NvY2hhLWRldi5wbmdcIikgbm8tcmVwZWF0IDAgMDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICBib3JkZXItdG9wOiBzb2xpZCAxcHggIzQ0NDtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGhlaWdodDogNjVweDsgfVxuICAuY29taWMtYmFubmVyIC50aXRsZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgICAuY29taWMtYmFubmVyIC50aXRsZSB7XG4gICAgICAgIHdpZHRoOiA4MyU7XG4gICAgICAgIHBhZGRpbmc6IDQ4cHggMDtcbiAgICAgICAgZm9udC1zaXplOiA1Ny42cHg7IH0gfVxuICAgIC5jb21pYy1iYW5uZXIgLnRpdGxlIC50b29sdGlwIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7IH1cbiAgICAgIC5jb21pYy1iYW5uZXIgLnRpdGxlIC50b29sdGlwIC50aXAge1xuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsOyB9XG4gICAgLmNvbWljLWJhbm5lciAudGl0bGUgLmF1dGhvcml0eSB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvY29taWNzL2NvbWljcy1jb2RlLWF1dGhvcml0eS5qcGdcIikgbm8tcmVwZWF0IDAgMDtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICB3aWR0aDogNjVweDtcbiAgICAgIGhlaWdodDogNzlweDtcbiAgICAgIG1hcmdpbjogMjRweDsgfVxuICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAgIC5jb21pYy1iYW5uZXIgLnRpdGxlIC5hdXRob3JpdHkge1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG5vbC5jb21pYyB7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vaW1hZ2VzL2NvbWljcy9jb21pYy1iZy0wMS5wbmcpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgbGVmdDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgY29sb3I6ICMyYjJiMmI7XG4gIHBhZGRpbmc6IDEycHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGFsaWduLWNvbnRlbnQ6IGZsZXgtZW5kO1xuICB3aWR0aDogMTAwJTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNzY5cHgpIHtcbiAgICBvbC5jb21pYyB7XG4gICAgICBib3JkZXI6IHNvbGlkIDFweCAjNDQ0O1xuICAgICAgcGFkZGluZzogMTJweDtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAwOyB9IH1cbiAgb2wuY29taWMgPiBsaSB7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvY29taWNzL2NvbWljLWJnLTAyLnBuZyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgbGVmdDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJvcmRlcjogc29saWQgMXB4ICNiYmI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1ib3R0b206IDEycHg7XG4gICAgcGFkZGluZzogMTJweDtcbiAgICBsaXN0LXN0eWxlOiBub25lOyB9XG4gICAgb2wuY29taWMgPiBsaTo6YWZ0ZXIge1xuICAgICAgY2xlYXI6IGJvdGg7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgZGlzcGxheTogdGFibGU7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY5cHgpIHtcbiAgICAgIG9sLmNvbWljID4gbGkge1xuICAgICAgICB3aWR0aDogY2FsYygzMy4zMzMzJSAtIDEycHgqMik7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDMwMHB4O1xuICAgICAgICBtYXJnaW46IDEycHg7IH0gfVxuICAgIG9sLmNvbWljID4gbGk6bnRoLWNoaWxkKDJuKzEpIHtcbiAgICAgIGJvcmRlci1jb2xvcjogI2U0ZTRlNDsgfVxuICAgICAgb2wuY29taWMgPiBsaTpudGgtY2hpbGQoMm4rMSkgLm5hcnJhdG9yIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZTRlNGU0OyB9XG4gICAgb2wuY29taWMgPiBsaTpudGgtY2hpbGQoNG4pIHtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmY7IH1cbiAgICBvbC5jb21pYyA+IGxpOm50aC1jaGlsZCg2bikge1xuICAgICAgYm9yZGVyOiBzb2xpZCAxcHggI2IzYjNiMzsgfVxuICAgIG9sLmNvbWljID4gbGkgZW0sXG4gICAgb2wuY29taWMgPiBsaSBzdHJvbmcsXG4gICAgb2wuY29taWMgPiBsaSAudG9vbHRpcCB7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmOyB9XG4gIG9sLmNvbWljIHVsIHtcbiAgICBtYXJnaW46IDI0cHggMCAwIDI0cHg7XG4gICAgcGFkZGluZzogMDtcbiAgICBsaXN0LXN0eWxlOiBub25lOyB9XG4gICAgb2wuY29taWMgdWwuYnVsbGV0cyB7XG4gICAgICBsaXN0LXN0eWxlOiBkaXNjOyB9XG4gICAgb2wuY29taWMgdWwgbGkge1xuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgIG1hcmdpbjogMCAwIDEycHggMDsgfVxuICAgICAgb2wuY29taWMgdWwgbGk6bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbjogMDsgfVxuICBvbC5jb21pYyBpbWcge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZsb2F0OiBsZWZ0OyB9XG4gIG9sLmNvbWljIGltZy5hdmF0YXIge1xuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICB3aWR0aDogNjBweDtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgbWFyZ2luOiAwIDEycHggMCAwOyB9XG4gIG9sLmNvbWljIGltZy5pbGx1c3RyYXRpb24ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMTJweCBhdXRvO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgb2wuY29taWMgaW1nLmlsbHVzdHJhdGlvbjo6YWZ0ZXIge1xuICAgICAgY2xlYXI6IGJvdGg7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgZGlzcGxheTogdGFibGU7IH1cbiAgICBvbC5jb21pYyBpbWcuaWxsdXN0cmF0aW9uLnRvcCB7XG4gICAgICBtYXJnaW4tdG9wOiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OXB4KSB7XG4gICAgICBvbC5jb21pYyBpbWcuaWxsdXN0cmF0aW9uLmJvdHRvbSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICB6LWluZGV4OiAwO1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgbWFyZ2luOiAwIDAgMTJweCAwOyB9IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIG9sLmNvbWljIGltZy5pbGx1c3RyYXRpb24uYm90dG9tIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDsgfSB9XG4gIG9sLmNvbWljIC5uby1pbWcgaW1nIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIG9sLmNvbWljIC50b29sdGlwIHtcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjYmJiOyB9XG4gICAgb2wuY29taWMgLnRvb2x0aXAgLnRpcCB7XG4gICAgICBib3JkZXItY29sb3I6ICM2NjY7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuICAgIG9sLmNvbWljIC50b29sdGlwLm5vLWltZywgb2wuY29taWMgLnRvb2x0aXAucHJvamVjdCB7XG4gICAgICB3aGl0ZS1zcGFjZTogbm9ybWFsOyB9XG4gIG9sLmNvbWljIC5ibHVlIHtcbiAgICBjb2xvcjogIzFjOGVhYjsgfVxuICBvbC5jb21pYyAucmVkIHtcbiAgICBjb2xvcjogI2IyMGIyMzsgfVxuICBvbC5jb21pYyAuZ3JlZW4ge1xuICAgIGNvbG9yOiAjNmY4NDJiOyB9XG4gIG9sLmNvbWljIC5ncmF5IHtcbiAgICBjb2xvcjogI2JiYjsgfVxuICBvbC5jb21pYyAub3JhbmdlIHtcbiAgICBjb2xvcjogI2U2NzMwMDsgfVxuICBvbC5jb21pYyAucHVycGxlIHtcbiAgICBjb2xvcjogIzU3NDI3ODsgfVxuICBvbC5jb21pYyBzdHJvbmcge1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgb2wuY29taWMgLmFjdG9yIHtcbiAgICBmb250LXdlaWdodDogbm9ybWFsOyB9XG4gIG9sLmNvbWljIC5icmFuZCB7XG4gICAgY29sb3I6ICMzMzM7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgICBvbC5jb21pYyAuYnJhbmQuYWN0b3Ige1xuICAgICAgY29sb3I6ICMwMDA7XG4gICAgICBmb250LXdlaWdodDogbm9ybWFsOyB9XG4gIG9sLmNvbWljIC5uYXJyYXRvciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZDogI2ZmZjsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjlweCkge1xuICAgICAgb2wuY29taWMgLm5hcnJhdG9yIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICBib3JkZXItYm90dG9tOiBzb2xpZCAxcHggI2JiYjtcbiAgICAgICAgcGFkZGluZzogMTJweDsgfSB9XG4gIG9sLmNvbWljIC5pbmRleCB7XG4gICAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMjRweDtcbiAgICBoZWlnaHQ6IDI0cHg7XG4gICAgbWFyZ2luOiAxMnB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAyO1xuICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGJvcmRlcjogc29saWQgMXB4ICNlNGU0ZTQ7XG4gICAgY29sb3I6ICNiYmI7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIG9sLmNvbWljIC5pbmRleCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4uYW5ub3VuY2VtZW50IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAxMTA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIG1pbi1oZWlnaHQ6IDM1MHB4O1xuICBtYXJnaW46IDE0NXB4IDAgMCAwO1xuICBwYWRkaW5nLWJvdHRvbTogNDBweDtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1hZ2VzL3BhcGVyLnBuZ1wiKSBuby1yZXBlYXQgNTAlIDAgdHJhbnNwYXJlbnQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGNvbG9yOiAjMzMzO1xuICAtd2Via2l0LXRyYW5zaXRpb246IG1hcmdpbi10b3AgNjAwbXM7XG4gIHRyYW5zaXRpb246IG1hcmdpbi10b3AgNjAwbXM7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmFubm91bmNlbWVudCB7XG4gICAgICBtaW4taGVpZ2h0OiA0MjBweDsgfSB9XG4gIC5hbm5vdW5jZW1lbnQuc3RpY2t5IHtcbiAgICBtYXJnaW4tdG9wOiA0NXB4OyB9XG4gIC5hbm5vdW5jZW1lbnQgLmZ1bGx3aWR0aCB7XG4gICAgcGFkZGluZy10b3A6IDEycHg7IH1cbiAgLmFubm91bmNlbWVudCAudGFvdGkge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiA2MDBweDtcbiAgICBtaW4taGVpZ2h0OiA5M3B4O1xuICAgIGJhY2tncm91bmQ6IHVybChcIi4uL2ltYWdlcy90YW90aS5wbmdcIikgbm8tcmVwZWF0IDAgMCB0cmFuc3BhcmVudDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgYXV0bztcbiAgICBtYXJnaW46IDAgMCAyNHB4IDA7IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5hbm5vdW5jZW1lbnQgLnRhb3RpIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgbWluLWhlaWdodDogMTE1cHg7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJSBhdXRvO1xuICAgICAgICBtYXJnaW46IDFyZW0gMDsgfSB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gICAgICAuYW5ub3VuY2VtZW50IC50YW90aSB7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDUwcHg7IH0gfVxuICAuYW5ub3VuY2VtZW50IHAge1xuICAgIG1hcmdpbjogMDsgfVxuICAuYW5ub3VuY2VtZW50IGEge1xuICAgIGNvbG9yOiAjYjIwYjIzOyB9XG4iLCIvLyBUeXBvZ3JhcGh5IHN0dWZmLlxuICBAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9VWJ1bnR1OjQwMCk7XG4gIEBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnMpO1xuXG4gIHAsIHVsLCBvbCB7XG4gICAgbWFyZ2luLWJvdHRvbTogJGRtcmc7XG4gICAgbWFyZ2luLXRvcDogMDtcblxuICAgICY6bGFzdC1jaGlsZCB7IG1hcmdpbi1ib3R0b206IDA7IH1cbiAgfVxuICBoMiwgaDMge1xuICAgIG1hcmdpbi1ib3R0b206ICRtcmcgKiAxLjI7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxuICBoMSwgaDIsIGgzLCBoNCwgaDUge1xuICAgIGZvbnQtZmFtaWx5OiAnVWJ1bnR1Jywgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuXG4gICAgYSwgYTpob3ZlciB7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICB9XG4gIGgxIHtcbiAgICBmb250LXNpemU6ICRiYXNlICogMi43O1xuICAgIG1hcmdpbjogMDtcbiAgfVxuICAuZnJvbnQge1xuICAgIGgxIHtcbiAgICAgIGZvbnQtc2l6ZTogJGJhc2UgKiA1LjI7XG4gICAgICBkaXYge1xuICAgICAgICBmb250LXNpemU6ICRiYXNlO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAoJGRtcmcvMik7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGgyIHtcbiAgICBmb250LXNpemU6ICRiYXNlICogMi40O1xuICAgIHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2U7XG4gIH1cbiAgaDMge1xuICAgIGZvbnQtc2l6ZTogJGJhc2UgKiAxLjk7XG4gICAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTtcbiAgfVxuXG4gIGJvZHkudGVhbSBtYWluIC5zdHJpcGUsXG4gIGJvZHkuZG93bmxvYWQgbWFpbiAuc3RyaXBlIHtcbiAgICBoMiwgaDMge1xuICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gICAgfVxuICB9XG5cbiAgaDQgeyBmb250LXNpemU6ICRiYXNlICogMS42OyB9XG4gIGg1IHsgZm9udC1zaXplOiAkYmFzZTsgfVxuXG4gIGIsIHN0cm9uZywgLmJvbGQsIGg0IHsgZm9udC13ZWlnaHQ6IDUwMDsgfVxuICAuY2FwaXRhbGl6ZSB7IHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOyB9XG4gIGg1IHsgZm9udC13ZWlnaHQ6IDMwMDsgfVxuICBlbSwgaSB7IGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4gIHByZSB7XG4gICAgYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXMgKiAyO1xuICAgIGJhY2tncm91bmQ6ICRncmF5LTQ7XG4gICAgY2xlYXI6IGJvdGg7XG4gICAgY29sb3I6ICR0ZXh0O1xuICAgIGZvbnQtZmFtaWx5OiAkbW9ub3NwYWNlO1xuICAgIHBhZGRpbmc6ICRkbXJnICRtcmc7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICBjb2RlIHtcbiAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cyAqIDI7XG4gICAgYmFja2dyb3VuZDogJGdyYXktNDtcbiAgICBwYWRkaW5nOiAkYm9yZGVyLXJhZGl1cyAoJGJvcmRlci1yYWRpdXMgKiAyKTtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB9XG5cbiAgaHIge1xuICAgIGJvcmRlcjogc29saWQgMnB4IGxpZ2h0ZW4oJGdyYXktZGFya2VyLCA1JSk7XG4gICAgY2xlYXI6IGJvdGg7XG4gICAgaGVpZ2h0OiAwcHg7XG4gICAgbWFyZ2luOiAkZG1yZyAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLy8gaW1nIHtcbiAgLy8gICBkaXNwbGF5OiBibG9jaztcbiAgLy8gICBmbG9hdDogbGVmdDtcbiAgLy8gfVxuXG4gIHNtYWxsIHsgZm9udC1zaXplOiAkYmFzZSAqIDAuOCB9XG5cbiAgYmlnIHsgZm9udC1zaXplOiAkYmFzZSAqIDEuMiB9XG5cbiAgYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbihhbGwgMC4zcyk7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgY29sb3I6IGxpZ2h0ZW4oJG9yYW5nZSwgMTAlKTtcbiAgICB9XG4gICAgLnNvY2lhbCAmOmhvdmVyIHtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB9XG4gICAgJjp2aXNpdGVkLFxuICAgICY6Zm9jdXMge1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG4gIH1cblxuICAvLyBEZW5zZSB0ZXh0IGVsZW1lbnRzLlxuICAldGV4dC1kZW5zZSB7XG4gICAgZm9udC1zaXplOiAkYmFzZSAqIDEuMDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgfVxuXG4gIC8vIFRleHQgaGlnaGxpZ2h0aW5nLlxuICAldGV4dC1oaWdobGlnaHQge1xuICAgICYuYmx1ZSB7IGNvbG9yOiBsaWdodGVuKCRibHVlLCAyNSUpOyB9XG4gICAgJGJsdWUtbGlnaHRlcjogbGlnaHRlbigkYmx1ZSwgMzUlKTtcbiAgICAmLmJsdWUuYmcge1xuICAgICAgYmFja2dyb3VuZDogJGJsdWUtbGlnaHRlcjtcbiAgICAgIGNvbG9yOiAkZ3JheS1kYXJrZXI7XG4gICAgICAmOmhvdmVyIHsgY29sb3I6ICRncmF5LWRhcmtlcjsgfVxuICAgIH1cbiAgICAmLmJsdWU6aG92ZXIgeyBjb2xvcjogJGJsdWUtbGlnaHRlcjsgfVxuXG4gICAgJi5yZWQgeyBjb2xvcjogbGlnaHRlbigkcmVkLCAzMCUpOyB9XG4gICAgJHJlZC1saWdodGVyOiBsaWdodGVuKCRyZWQsIDQwJSk7XG4gICAgJi5yZWQuYmcge1xuICAgICAgYmFja2dyb3VuZDogJHJlZC1saWdodGVyO1xuICAgICAgY29sb3I6ICRncmF5LWRhcmtlcjtcbiAgICAgICY6aG92ZXIgeyBjb2xvcjogJGdyYXktZGFya2VyOyB9XG4gICAgfVxuICAgICYucmVkOmhvdmVyIHsgY29sb3I6ICRyZWQtbGlnaHRlcjsgfVxuXG4gICAgJi5ncmVlbiB7IGNvbG9yOiBsaWdodGVuKCRncmVlbiwgMjAlKTsgfVxuICAgICRncmVlbi1saWdodGVyOiBsaWdodGVuKCRncmVlbiwgNDAlKTtcbiAgICAmLmdyZWVuLmJnIHtcbiAgICAgIGJhY2tncm91bmQ6ICRncmVlbi1saWdodGVyO1xuICAgICAgY29sb3I6ICRncmF5LWRhcmtlcjtcbiAgICAgICY6aG92ZXIgeyBjb2xvcjogJGdyYXktZGFya2VyOyB9XG4gICAgfVxuICAgICYuZ3JlZW46aG92ZXIgeyBjb2xvcjogJGdyZWVuLWxpZ2h0ZXI7IH1cblxuICAgICYuZ3JheSB7IGNvbG9yOiAkZ3JheS1saWdodGVyOyB9XG4gICAgJGdyYXktbGlnaHRlc3Q6IGxpZ2h0ZW4oJGdyYXktbGlnaHRlciwgMTAwJSk7XG4gICAgJi5ncmF5LmJnIHtcbiAgICAgIGJhY2tncm91bmQ6ICRncmF5LWxpZ2h0ZXN0O1xuICAgICAgY29sb3I6ICRncmF5LWRhcmtlcjtcbiAgICAgICY6aG92ZXIgeyBjb2xvcjogJGdyYXktZGFya2VyOyB9XG4gICAgfVxuICAgICYuZ3JheTpob3ZlciB7IGNvbG9yOiAkZ3JheS1saWdodGVzdDsgfVxuXG4gICAgJi5vcmFuZ2UgeyBjb2xvcjogJG9yYW5nZTsgfVxuICAgICRvcmFuZ2UtbGlnaHRlcjogbGlnaHRlbigkb3JhbmdlLCAxMCUpO1xuICAgICYub3JhbmdlLmJnIHtcbiAgICAgIGJhY2tncm91bmQ6ICRvcmFuZ2UtbGlnaHRlcjtcbiAgICAgIGNvbG9yOiAkZ3JheS1kYXJrZXI7XG4gICAgICAmOmhvdmVyIHsgY29sb3I6ICRncmF5LWRhcmtlcjsgfVxuICAgIH1cbiAgICAmLm9yYW5nZTpob3ZlciB7IGNvbG9yOiAkb3JhbmdlLWxpZ2h0ZXI7IH1cblxuICAgICYucHVycGxlIHsgY29sb3I6IGxpZ2h0ZW4oJHB1cnBsZSwgMjAlKTsgfVxuICAgICRwdXJwbGUtbGlnaHRlcjogbGlnaHRlbigkcHVycGxlLCAzNSUpO1xuICAgICYucHVycGxlLmJnIHtcbiAgICAgIGJhY2tncm91bmQ6ICRwdXJwbGUtbGlnaHRlcjtcbiAgICAgIGNvbG9yOiAkZ3JheS1kYXJrZXI7XG4gICAgICAmOmhvdmVyIHsgY29sb3I6ICRncmF5LWRhcmtlcjsgfVxuICAgIH1cbiAgICAmLnB1cnBsZTpob3ZlciB7IGNvbG9yOiAkcHVycGxlLWxpZ2h0ZXI7IH1cbiAgfVxuXG4gIGEsIHNwYW4sIGVtLCBzdHJvbmcge1xuICAgIEBleHRlbmQgJXRleHQtaGlnaGxpZ2h0O1xuICB9XG4gIC5icmVhZGNydW1iIHtcbiAgICBtYXJnaW4tdG9wOiAkbXJnO1xuICAgIHRleHQtdHJhbnNmb3JtOiBsb3dlcmNhc2U7XG4gIH1cblxuICAudG9vbHRpcCB7XG4gICAgYm9yZGVyLWJvdHRvbTogZG90dGVkIDJweCAkZ3JheTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cbiAgICAudGlwIHtcbiAgICAgIEBleHRlbmQgJXRleHQtaGlnaGxpZ2h0O1xuICAgICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB6LWluZGV4OiAxMTE7XG4gICAgICBtYXJnaW4tYm90dG9tOiAkbXJnO1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICB3aWR0aDogKCRtcmcgKiAyMCk7XG4gICAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cyAqIDI7XG4gICAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7XG4gICAgICBib3JkZXI6IHNvbGlkICRib3JkZXItcmFkaXVzICRncmF5LWRhcmtlcjtcbiAgICAgIGNvbG9yOiAkZ3JheS1kYXJrO1xuICAgICAgcGFkZGluZzogJG1yZztcbiAgICAgIGZvbnQtc2l6ZTogJGJhc2UgLSAzO1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgfVxuICB9XG4iLCIjeyRhbGwtYnV0dG9uc30ge1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWN0aW9uLWNvbG9yO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6ICRiYXNlLWJvcmRlci1yYWRpdXM7XG4gIGNvbG9yOiAjZmZmO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQtZmFtaWx5O1xuICBmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBwYWRkaW5nOiAkc21hbGwtc3BhY2luZyAkYmFzZS1zcGFjaW5nO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgJGJhc2UtZHVyYXRpb24gJGJhc2UtdGltaW5nO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcblxuICAmOmhvdmVyLFxuICAmOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBzaGFkZSgkYWN0aW9uLWNvbG9yLCAyMCUpO1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG5cbiAgJjpkaXNhYmxlZCB7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICBvcGFjaXR5OiAwLjU7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRhY3Rpb24tY29sb3I7XG4gICAgfVxuICB9XG59XG4iLCIvLyBUeXBvZ3JhcGh5XG4kYmFzZS1mb250LWZhbWlseTogJ09wZW4gU2FucycsIHNhbnMtc2VyaWY7XG4kaGVhZGluZy1mb250LWZhbWlseTogJGJhc2UtZm9udC1mYW1pbHk7XG5cbi8vIEZvbnQgU2l6ZXNcbiRiYXNlLWZvbnQtc2l6ZTogMTZweCAqIDEuNDtcblxuLy8gTGluZSBoZWlnaHRcbiRiYXNlLWxpbmUtaGVpZ2h0OiAxO1xuJGhlYWRpbmctbGluZS1oZWlnaHQ6IDE7XG5cbi8vIE90aGVyIFNpemVzXG4kYmFzZS1ib3JkZXItcmFkaXVzOiAzcHg7XG4kYmFzZS1zcGFjaW5nOiAkYmFzZS1saW5lLWhlaWdodCAqIDFlbTtcbiRzbWFsbC1zcGFjaW5nOiAkYmFzZS1zcGFjaW5nIC8gMjtcbiRiYXNlLXotaW5kZXg6IDA7XG5cbi8vIENvbG9yc1xuJGJsdWU6IGRhcmtlbigjNzdkMmU5LCAxMCUpO1xuJGdyZWVuOiBkYXJrZW4oIzhmYWEzNywgNSUpO1xuJGRhcmstZ3JheTogIzMzMztcbiRtZWRpdW0tZ3JheTogIzg4ODtcbiRsaWdodC1ncmF5OiAjZGRkO1xuXG4vLyBGb250IENvbG9yc1xuJGJhc2UtZm9udC1jb2xvcjogJGRhcmstZ3JheTtcbiRhY3Rpb24tY29sb3I6ICRibHVlO1xuXG4vLyBCb3JkZXJcbiRiYXNlLWJvcmRlci1jb2xvcjogI2NjYztcbiRiYXNlLWJvcmRlcjogMnB4IHNvbGlkICRiYXNlLWJvcmRlci1jb2xvcjtcblxuLy8gQmFja2dyb3VuZCBDb2xvcnNcbiRiYXNlLWJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7XG4kc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXG4vLyBGb3Jtc1xuJGZvcm0tYm94LXNoYWRvdzogaW5zZXQgMCAxcHggM3B4IHJnYmEoIzAwMCwgMC4wMik7XG4kZm9ybS1ib3gtc2hhZG93LWZvY3VzOiAkZm9ybS1ib3gtc2hhZG93LCAwIDAgNXB4IGFkanVzdC1jb2xvcigkYWN0aW9uLWNvbG9yLCAkbGlnaHRuZXNzOiAtNSUsICRhbHBoYTogLTAuNCk7XG5cbi8vIEFuaW1hdGlvbnNcbiRiYXNlLWR1cmF0aW9uOiAxNTBtcztcbiRiYXNlLXRpbWluZzogZWFzZTtcbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcblxuLy8vIE1peGVzIGEgY29sb3Igd2l0aCBibGFjay5cbi8vL1xuLy8vIEBwYXJhbSB7Q29sb3J9ICRjb2xvclxuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXIgKFBlcmNlbnRhZ2UpfSAkcGVyY2VudFxuLy8vICAgVGhlIGFtb3VudCBvZiBibGFjayB0byBiZSBtaXhlZCBpbi5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBzaGFkZSgjZmZiYjUyLCA2MCUpO1xuLy8vICAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgY3NzIC0gQ1NTIE91dHB1dFxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjY0YTIwO1xuLy8vICAgfVxuLy8vXG4vLy8gQHJldHVybiB7Q29sb3J9XG5cbkBmdW5jdGlvbiBzaGFkZSgkY29sb3IsICRwZXJjZW50KSB7XG4gIEByZXR1cm4gbWl4KCMwMDAsICRjb2xvciwgJHBlcmNlbnQpO1xufVxuIiwiZmllbGRzZXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7XG4gIGJvcmRlcjogJGJhc2UtYm9yZGVyO1xuICBtYXJnaW46IDAgMCAkc21hbGwtc3BhY2luZztcbiAgcGFkZGluZzogJGJhc2Utc3BhY2luZztcbn1cblxuaW5wdXQsXG5sYWJlbCxcbnNlbGVjdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LWZhbWlseTogJGJhc2UtZm9udC1mYW1pbHk7XG4gIGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplO1xufVxuXG5sYWJlbCB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIG1hcmdpbi1ib3R0b206ICRzbWFsbC1zcGFjaW5nIC8gMjtcblxuICAmLnJlcXVpcmVkOjphZnRlciB7XG4gICAgY29udGVudDogXCIqXCI7XG4gIH1cblxuICBhYmJyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbiN7JGFsbC10ZXh0LWlucHV0c30sXG5zZWxlY3RbbXVsdGlwbGU9bXVsdGlwbGVdIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJhc2UtYmFja2dyb3VuZC1jb2xvcjtcbiAgYm9yZGVyOiAkYmFzZS1ib3JkZXI7XG4gIGJvcmRlci1yYWRpdXM6ICRiYXNlLWJvcmRlci1yYWRpdXM7XG4gIGJveC1zaGFkb3c6ICRmb3JtLWJveC1zaGFkb3c7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZvbnQtZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseTtcbiAgZm9udC1zaXplOiAkYmFzZS1mb250LXNpemU7XG4gIG1hcmdpbi1ib3R0b206ICRzbWFsbC1zcGFjaW5nO1xuICBwYWRkaW5nOiAkYmFzZS1zcGFjaW5nIC8gMztcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yICRiYXNlLWR1cmF0aW9uICRiYXNlLXRpbWluZztcbiAgd2lkdGg6IDEwMCU7XG5cbiAgJjpob3ZlciB7XG4gICAgYm9yZGVyLWNvbG9yOiBzaGFkZSgkYmFzZS1ib3JkZXItY29sb3IsIDIwJSk7XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBib3JkZXItY29sb3I6ICRhY3Rpb24tY29sb3I7XG4gICAgYm94LXNoYWRvdzogJGZvcm0tYm94LXNoYWRvdy1mb2N1cztcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG5cbiAgJjpkaXNhYmxlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogc2hhZGUoJGJhc2UtYmFja2dyb3VuZC1jb2xvciwgNSUpO1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIGJvcmRlcjogJGJhc2UtYm9yZGVyO1xuICAgIH1cbiAgfVxufVxuXG50ZXh0YXJlYSB7XG4gIHJlc2l6ZTogdmVydGljYWw7XG59XG5cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICBhcHBlYXJhbmNlOiBub25lO1xufVxuXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0sXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICBkaXNwbGF5OiBpbmxpbmU7XG4gIG1hcmdpbi1yaWdodDogJHNtYWxsLXNwYWNpbmcgLyAyO1xuXG4gICsgbGFiZWwge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxufVxuXG5pbnB1dFt0eXBlPVwiZmlsZVwiXSB7XG4gIG1hcmdpbi1ib3R0b206ICRzbWFsbC1zcGFjaW5nO1xuICB3aWR0aDogMTAwJTtcbn1cblxuc2VsZWN0IHtcbiAgbWFyZ2luLWJvdHRvbTogJGJhc2Utc3BhY2luZztcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICB3aWR0aDogYXV0bztcbn1cbiIsIi8qISBub3JtYWxpemUuY3NzIHYzLjAuMiB8IE1JVCBMaWNlbnNlIHwgZ2l0LmlvL25vcm1hbGl6ZSAqL1xuXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyB0ZXh0IHNpemUgYWRqdXN0IGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZSwgd2l0aG91dCBkaXNhYmxpbmdcbiAqICAgIHVzZXIgem9vbS5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIEltcHJvdmUgcmVhZGFiaWxpdHkgd2hlbiBmb2N1c2VkIGFuZCBhbHNvIG1vdXNlIGhvdmVyZWQgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBkb3R0ZWQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQ6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIGJvcmRlciB3aGVuIGluc2lkZSBgYWAgZWxlbWVudCBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyOiAwO1xufVxuXG4vKipcbiAqIENvcnJlY3Qgb3ZlcmZsb3cgbm90IGhpZGRlbiBpbiBJRSA5LzEwLzExLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuXG5ociB7XG4gIC1tb3otYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogS25vd24gbGltaXRhdGlvbjogYnkgZGVmYXVsdCwgQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWRcbiAqIHN0eWxpbmcgb2YgYHNlbGVjdGAsIHVubGVzcyBhIGBib3JkZXJgIHByb3BlcnR5IGlzIHNldC5cbiAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgY29sb3Igbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqICAgIEtub3duIGlzc3VlOiBhZmZlY3RzIGNvbG9yIG9mIGRpc2FibGVkIGVsZW1lbnRzLlxuICogMi4gQ29ycmVjdCBmb250IHByb3BlcnRpZXMgbm90IGJlaW5nIGluaGVyaXRlZC5cbiAqIDMuIEFkZHJlc3MgbWFyZ2lucyBzZXQgZGlmZmVyZW50bHkgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0OyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbiAgbWFyZ2luOiAwOyAvKiAzICovXG59XG5cbi8qKlxuICogQWRkcmVzcyBgb3ZlcmZsb3dgIHNldCB0byBgaGlkZGVuYCBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cblxuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogQWRkcmVzcyBpbmNvbnNpc3RlbnQgYHRleHQtdHJhbnNmb3JtYCBpbmhlcml0YW5jZSBmb3IgYGJ1dHRvbmAgYW5kIGBzZWxlY3RgLlxuICogQWxsIG90aGVyIGZvcm0gY29udHJvbCBlbGVtZW50cyBkbyBub3QgaW5oZXJpdCBgdGV4dC10cmFuc2Zvcm1gIHZhbHVlcy5cbiAqIENvcnJlY3QgYGJ1dHRvbmAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveCwgSUUgOC85LzEwLzExLCBhbmQgT3BlcmEuXG4gKiBDb3JyZWN0IGBzZWxlY3RgIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQXZvaWQgdGhlIFdlYktpdCBidWcgaW4gQW5kcm9pZCA0LjAuKiB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2BcbiAqICAgIGFuZCBgdmlkZW9gIGNvbnRyb2xzLlxuICogMi4gQ29ycmVjdCBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIGBpbnB1dGAgdHlwZXMgaW4gaU9TLlxuICogMy4gSW1wcm92ZSB1c2FiaWxpdHkgYW5kIGNvbnNpc3RlbmN5IG9mIGN1cnNvciBzdHlsZSBiZXR3ZWVuIGltYWdlLXR5cGVcbiAqICAgIGBpbnB1dGAgYW5kIG90aGVycy5cbiAqL1xuXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cbmlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7IC8qIDMgKi9cbn1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cblxuaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xufVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cblxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cblxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lXG4gKiAgICAoaW5jbHVkZSBgLW1vemAgdG8gZnV0dXJlLXByb29mKS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMiAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7XG59XG4iLCIvKlxuU0NTUyB2YXJpYWJsZXMgYXJlIGluZm9ybWF0aW9uIGFib3V0IGljb24ncyBjb21waWxlZCBzdGF0ZSwgc3RvcmVkIHVuZGVyIGl0cyBvcmlnaW5hbCBmaWxlIG5hbWVcblxuLmljb24taG9tZSB7XG4gIHdpZHRoOiAkaWNvbi1ob21lLXdpZHRoO1xufVxuXG5UaGUgbGFyZ2UgYXJyYXktbGlrZSB2YXJpYWJsZXMgY29udGFpbiBhbGwgaW5mb3JtYXRpb24gYWJvdXQgYSBzaW5nbGUgaWNvblxuJGljb24taG9tZTogeCB5IG9mZnNldF94IG9mZnNldF95IHdpZHRoIGhlaWdodCB0b3RhbF93aWR0aCB0b3RhbF9oZWlnaHQgaW1hZ2VfcGF0aDtcblxuQXQgdGhlIGJvdHRvbSBvZiB0aGlzIHNlY3Rpb24sIHdlIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHNwcml0ZXNoZWV0IGl0c2VsZlxuJHNwcml0ZXNoZWV0OiB3aWR0aCBoZWlnaHQgaW1hZ2UgJHNwcml0ZXNoZWV0LXNwcml0ZXM7XG4qL1xuJGFhYXMtc2NpZW5jZS1uYW1lOiAnYWFhcy1zY2llbmNlJztcbiRhYWFzLXNjaWVuY2UteDogMHB4O1xuJGFhYXMtc2NpZW5jZS15OiAwcHg7XG4kYWFhcy1zY2llbmNlLW9mZnNldC14OiAwcHg7XG4kYWFhcy1zY2llbmNlLW9mZnNldC15OiAwcHg7XG4kYWFhcy1zY2llbmNlLXdpZHRoOiAxODBweDtcbiRhYWFzLXNjaWVuY2UtaGVpZ2h0OiAxMzVweDtcbiRhYWFzLXNjaWVuY2UtdG90YWwtd2lkdGg6IDU0MHB4O1xuJGFhYXMtc2NpZW5jZS10b3RhbC1oZWlnaHQ6IDQwNXB4O1xuJGFhYXMtc2NpZW5jZS1pbWFnZTogJ3Nwcml0ZXMucG5nJztcbiRhYWFzLXNjaWVuY2U6ICgwcHgsIDBweCwgMHB4LCAwcHgsIDE4MHB4LCAxMzVweCwgNTQwcHgsIDQwNXB4LCAnc3ByaXRlcy5wbmcnLCAnYWFhcy1zY2llbmNlJywgKTtcbiRkaXNjb3ZlcnktZWR1Y2F0aW9uLW5hbWU6ICdkaXNjb3ZlcnktZWR1Y2F0aW9uJztcbiRkaXNjb3ZlcnktZWR1Y2F0aW9uLXg6IDE4MHB4O1xuJGRpc2NvdmVyeS1lZHVjYXRpb24teTogMHB4O1xuJGRpc2NvdmVyeS1lZHVjYXRpb24tb2Zmc2V0LXg6IC0xODBweDtcbiRkaXNjb3ZlcnktZWR1Y2F0aW9uLW9mZnNldC15OiAwcHg7XG4kZGlzY292ZXJ5LWVkdWNhdGlvbi13aWR0aDogMTgwcHg7XG4kZGlzY292ZXJ5LWVkdWNhdGlvbi1oZWlnaHQ6IDEzNXB4O1xuJGRpc2NvdmVyeS1lZHVjYXRpb24tdG90YWwtd2lkdGg6IDU0MHB4O1xuJGRpc2NvdmVyeS1lZHVjYXRpb24tdG90YWwtaGVpZ2h0OiA0MDVweDtcbiRkaXNjb3ZlcnktZWR1Y2F0aW9uLWltYWdlOiAnc3ByaXRlcy5wbmcnO1xuJGRpc2NvdmVyeS1lZHVjYXRpb246ICgxODBweCwgMHB4LCAtMTgwcHgsIDBweCwgMTgwcHgsIDEzNXB4LCA1NDBweCwgNDA1cHgsICdzcHJpdGVzLnBuZycsICdkaXNjb3ZlcnktZWR1Y2F0aW9uJywgKTtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydC1uYW1lOiAnaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1jb29rLXBvbGl0aWNhbC1yZXBvcnQnO1xuJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtY29vay1wb2xpdGljYWwtcmVwb3J0LXg6IDBweDtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydC15OiAxMzVweDtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydC1vZmZzZXQteDogMHB4O1xuJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtY29vay1wb2xpdGljYWwtcmVwb3J0LW9mZnNldC15OiAtMTM1cHg7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1jb29rLXBvbGl0aWNhbC1yZXBvcnQtd2lkdGg6IDE4MHB4O1xuJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtY29vay1wb2xpdGljYWwtcmVwb3J0LWhlaWdodDogMTM1cHg7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1jb29rLXBvbGl0aWNhbC1yZXBvcnQtdG90YWwtd2lkdGg6IDU0MHB4O1xuJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtY29vay1wb2xpdGljYWwtcmVwb3J0LXRvdGFsLWhlaWdodDogNDA1cHg7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1jb29rLXBvbGl0aWNhbC1yZXBvcnQtaW1hZ2U6ICdzcHJpdGVzLnBuZyc7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1jb29rLXBvbGl0aWNhbC1yZXBvcnQ6ICgwcHgsIDEzNXB4LCAwcHgsIC0xMzVweCwgMTgwcHgsIDEzNXB4LCA1NDBweCwgNDA1cHgsICdzcHJpdGVzLnBuZycsICdob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydCcsICk7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViLW5hbWU6ICdob21lLWZyb250LWNvbW11bmljYXRpb25zLW5hdGlvbmFsLXByZXNzLWNsdWInO1xuJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtbmF0aW9uYWwtcHJlc3MtY2x1Yi14OiAxODBweDtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLW5hdGlvbmFsLXByZXNzLWNsdWIteTogMTM1cHg7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViLW9mZnNldC14OiAtMTgwcHg7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViLW9mZnNldC15OiAtMTM1cHg7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViLXdpZHRoOiAxODBweDtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLW5hdGlvbmFsLXByZXNzLWNsdWItaGVpZ2h0OiAxMzVweDtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLW5hdGlvbmFsLXByZXNzLWNsdWItdG90YWwtd2lkdGg6IDU0MHB4O1xuJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtbmF0aW9uYWwtcHJlc3MtY2x1Yi10b3RhbC1oZWlnaHQ6IDQwNXB4O1xuJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtbmF0aW9uYWwtcHJlc3MtY2x1Yi1pbWFnZTogJ3Nwcml0ZXMucG5nJztcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLW5hdGlvbmFsLXByZXNzLWNsdWI6ICgxODBweCwgMTM1cHgsIC0xODBweCwgLTEzNXB4LCAxODBweCwgMTM1cHgsIDU0MHB4LCA0MDVweCwgJ3Nwcml0ZXMucG5nJywgJ2hvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtbmF0aW9uYWwtcHJlc3MtY2x1YicsICk7XG4kaXdzLWNoYW5uZWwtZGVtb2NyYWN5LW5hbWU6ICdpd3MtY2hhbm5lbC1kZW1vY3JhY3knO1xuJGl3cy1jaGFubmVsLWRlbW9jcmFjeS14OiAzNjBweDtcbiRpd3MtY2hhbm5lbC1kZW1vY3JhY3kteTogMHB4O1xuJGl3cy1jaGFubmVsLWRlbW9jcmFjeS1vZmZzZXQteDogLTM2MHB4O1xuJGl3cy1jaGFubmVsLWRlbW9jcmFjeS1vZmZzZXQteTogMHB4O1xuJGl3cy1jaGFubmVsLWRlbW9jcmFjeS13aWR0aDogMTgwcHg7XG4kaXdzLWNoYW5uZWwtZGVtb2NyYWN5LWhlaWdodDogMTM1cHg7XG4kaXdzLWNoYW5uZWwtZGVtb2NyYWN5LXRvdGFsLXdpZHRoOiA1NDBweDtcbiRpd3MtY2hhbm5lbC1kZW1vY3JhY3ktdG90YWwtaGVpZ2h0OiA0MDVweDtcbiRpd3MtY2hhbm5lbC1kZW1vY3JhY3ktaW1hZ2U6ICdzcHJpdGVzLnBuZyc7XG4kaXdzLWNoYW5uZWwtZGVtb2NyYWN5OiAoMzYwcHgsIDBweCwgLTM2MHB4LCAwcHgsIDE4MHB4LCAxMzVweCwgNTQwcHgsIDQwNXB4LCAnc3ByaXRlcy5wbmcnLCAnaXdzLWNoYW5uZWwtZGVtb2NyYWN5JywgKTtcbiRyZXBlcXVpdHktbmFtZTogJ3JlcGVxdWl0eSc7XG4kcmVwZXF1aXR5LXg6IDM2MHB4O1xuJHJlcGVxdWl0eS15OiAxMzVweDtcbiRyZXBlcXVpdHktb2Zmc2V0LXg6IC0zNjBweDtcbiRyZXBlcXVpdHktb2Zmc2V0LXk6IC0xMzVweDtcbiRyZXBlcXVpdHktd2lkdGg6IDE4MHB4O1xuJHJlcGVxdWl0eS1oZWlnaHQ6IDEzNXB4O1xuJHJlcGVxdWl0eS10b3RhbC13aWR0aDogNTQwcHg7XG4kcmVwZXF1aXR5LXRvdGFsLWhlaWdodDogNDA1cHg7XG4kcmVwZXF1aXR5LWltYWdlOiAnc3ByaXRlcy5wbmcnO1xuJHJlcGVxdWl0eTogKDM2MHB4LCAxMzVweCwgLTM2MHB4LCAtMTM1cHgsIDE4MHB4LCAxMzVweCwgNTQwcHgsIDQwNXB4LCAnc3ByaXRlcy5wbmcnLCAncmVwZXF1aXR5JywgKTtcbiRzZWFib3VybmUtZmNjLW5hbWU6ICdzZWFib3VybmUtZmNjJztcbiRzZWFib3VybmUtZmNjLXg6IDBweDtcbiRzZWFib3VybmUtZmNjLXk6IDI3MHB4O1xuJHNlYWJvdXJuZS1mY2Mtb2Zmc2V0LXg6IDBweDtcbiRzZWFib3VybmUtZmNjLW9mZnNldC15OiAtMjcwcHg7XG4kc2VhYm91cm5lLWZjYy13aWR0aDogMTgwcHg7XG4kc2VhYm91cm5lLWZjYy1oZWlnaHQ6IDEzNXB4O1xuJHNlYWJvdXJuZS1mY2MtdG90YWwtd2lkdGg6IDU0MHB4O1xuJHNlYWJvdXJuZS1mY2MtdG90YWwtaGVpZ2h0OiA0MDVweDtcbiRzZWFib3VybmUtZmNjLWltYWdlOiAnc3ByaXRlcy5wbmcnO1xuJHNlYWJvdXJuZS1mY2M6ICgwcHgsIDI3MHB4LCAwcHgsIC0yNzBweCwgMTgwcHgsIDEzNXB4LCA1NDBweCwgNDA1cHgsICdzcHJpdGVzLnBuZycsICdzZWFib3VybmUtZmNjJywgKTtcbiRzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZy1uYW1lOiAnc29jaGEtZGV2LXdoaXRlLWxhYmVsLW9yaWcnO1xuJHNvY2hhLWRldi13aGl0ZS1sYWJlbC1vcmlnLXg6IDE4MHB4O1xuJHNvY2hhLWRldi13aGl0ZS1sYWJlbC1vcmlnLXk6IDI3MHB4O1xuJHNvY2hhLWRldi13aGl0ZS1sYWJlbC1vcmlnLW9mZnNldC14OiAtMTgwcHg7XG4kc29jaGEtZGV2LXdoaXRlLWxhYmVsLW9yaWctb2Zmc2V0LXk6IC0yNzBweDtcbiRzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZy13aWR0aDogMTgwcHg7XG4kc29jaGEtZGV2LXdoaXRlLWxhYmVsLW9yaWctaGVpZ2h0OiAxMzVweDtcbiRzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZy10b3RhbC13aWR0aDogNTQwcHg7XG4kc29jaGEtZGV2LXdoaXRlLWxhYmVsLW9yaWctdG90YWwtaGVpZ2h0OiA0MDVweDtcbiRzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZy1pbWFnZTogJ3Nwcml0ZXMucG5nJztcbiRzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZzogKDE4MHB4LCAyNzBweCwgLTE4MHB4LCAtMjcwcHgsIDE4MHB4LCAxMzVweCwgNTQwcHgsIDQwNXB4LCAnc3ByaXRlcy5wbmcnLCAnc29jaGEtZGV2LXdoaXRlLWxhYmVsLW9yaWcnLCApO1xuJGFhYXMtc2NpZW5jZS0yeC1uYW1lOiAnYWFhcy1zY2llbmNlQDJ4JztcbiRhYWFzLXNjaWVuY2UtMngteDogMHB4O1xuJGFhYXMtc2NpZW5jZS0yeC15OiAwcHg7XG4kYWFhcy1zY2llbmNlLTJ4LW9mZnNldC14OiAwcHg7XG4kYWFhcy1zY2llbmNlLTJ4LW9mZnNldC15OiAwcHg7XG4kYWFhcy1zY2llbmNlLTJ4LXdpZHRoOiAzNjBweDtcbiRhYWFzLXNjaWVuY2UtMngtaGVpZ2h0OiAyNzBweDtcbiRhYWFzLXNjaWVuY2UtMngtdG90YWwtd2lkdGg6IDEwODBweDtcbiRhYWFzLXNjaWVuY2UtMngtdG90YWwtaGVpZ2h0OiA4MTBweDtcbiRhYWFzLXNjaWVuY2UtMngtaW1hZ2U6ICdzcHJpdGVzQDJ4LnBuZyc7XG4kYWFhcy1zY2llbmNlLTJ4OiAoMHB4LCAwcHgsIDBweCwgMHB4LCAzNjBweCwgMjcwcHgsIDEwODBweCwgODEwcHgsICdzcHJpdGVzQDJ4LnBuZycsICdhYWFzLXNjaWVuY2VAMngnLCApO1xuJGRpc2NvdmVyeS1lZHVjYXRpb24tMngtbmFtZTogJ2Rpc2NvdmVyeS1lZHVjYXRpb25AMngnO1xuJGRpc2NvdmVyeS1lZHVjYXRpb24tMngteDogMzYwcHg7XG4kZGlzY292ZXJ5LWVkdWNhdGlvbi0yeC15OiAwcHg7XG4kZGlzY292ZXJ5LWVkdWNhdGlvbi0yeC1vZmZzZXQteDogLTM2MHB4O1xuJGRpc2NvdmVyeS1lZHVjYXRpb24tMngtb2Zmc2V0LXk6IDBweDtcbiRkaXNjb3ZlcnktZWR1Y2F0aW9uLTJ4LXdpZHRoOiAzNjBweDtcbiRkaXNjb3ZlcnktZWR1Y2F0aW9uLTJ4LWhlaWdodDogMjcwcHg7XG4kZGlzY292ZXJ5LWVkdWNhdGlvbi0yeC10b3RhbC13aWR0aDogMTA4MHB4O1xuJGRpc2NvdmVyeS1lZHVjYXRpb24tMngtdG90YWwtaGVpZ2h0OiA4MTBweDtcbiRkaXNjb3ZlcnktZWR1Y2F0aW9uLTJ4LWltYWdlOiAnc3ByaXRlc0AyeC5wbmcnO1xuJGRpc2NvdmVyeS1lZHVjYXRpb24tMng6ICgzNjBweCwgMHB4LCAtMzYwcHgsIDBweCwgMzYwcHgsIDI3MHB4LCAxMDgwcHgsIDgxMHB4LCAnc3ByaXRlc0AyeC5wbmcnLCAnZGlzY292ZXJ5LWVkdWNhdGlvbkAyeCcsICk7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1jb29rLXBvbGl0aWNhbC1yZXBvcnQtMngtbmFtZTogJ2hvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtY29vay1wb2xpdGljYWwtcmVwb3J0QDJ4JztcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydC0yeC14OiAwcHg7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1jb29rLXBvbGl0aWNhbC1yZXBvcnQtMngteTogMjcwcHg7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1jb29rLXBvbGl0aWNhbC1yZXBvcnQtMngtb2Zmc2V0LXg6IDBweDtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydC0yeC1vZmZzZXQteTogLTI3MHB4O1xuJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtY29vay1wb2xpdGljYWwtcmVwb3J0LTJ4LXdpZHRoOiAzNjBweDtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydC0yeC1oZWlnaHQ6IDI3MHB4O1xuJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtY29vay1wb2xpdGljYWwtcmVwb3J0LTJ4LXRvdGFsLXdpZHRoOiAxMDgwcHg7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1jb29rLXBvbGl0aWNhbC1yZXBvcnQtMngtdG90YWwtaGVpZ2h0OiA4MTBweDtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydC0yeC1pbWFnZTogJ3Nwcml0ZXNAMngucG5nJztcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydC0yeDogKDBweCwgMjcwcHgsIDBweCwgLTI3MHB4LCAzNjBweCwgMjcwcHgsIDEwODBweCwgODEwcHgsICdzcHJpdGVzQDJ4LnBuZycsICdob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydEAyeCcsICk7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViLTJ4LW5hbWU6ICdob21lLWZyb250LWNvbW11bmljYXRpb25zLW5hdGlvbmFsLXByZXNzLWNsdWJAMngnO1xuJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtbmF0aW9uYWwtcHJlc3MtY2x1Yi0yeC14OiAzNjBweDtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLW5hdGlvbmFsLXByZXNzLWNsdWItMngteTogMjcwcHg7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViLTJ4LW9mZnNldC14OiAtMzYwcHg7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViLTJ4LW9mZnNldC15OiAtMjcwcHg7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViLTJ4LXdpZHRoOiAzNjBweDtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLW5hdGlvbmFsLXByZXNzLWNsdWItMngtaGVpZ2h0OiAyNzBweDtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLW5hdGlvbmFsLXByZXNzLWNsdWItMngtdG90YWwtd2lkdGg6IDEwODBweDtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLW5hdGlvbmFsLXByZXNzLWNsdWItMngtdG90YWwtaGVpZ2h0OiA4MTBweDtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLW5hdGlvbmFsLXByZXNzLWNsdWItMngtaW1hZ2U6ICdzcHJpdGVzQDJ4LnBuZyc7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViLTJ4OiAoMzYwcHgsIDI3MHB4LCAtMzYwcHgsIC0yNzBweCwgMzYwcHgsIDI3MHB4LCAxMDgwcHgsIDgxMHB4LCAnc3ByaXRlc0AyeC5wbmcnLCAnaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViQDJ4JywgKTtcbiRpd3MtY2hhbm5lbC1kZW1vY3JhY3ktMngtbmFtZTogJ2l3cy1jaGFubmVsLWRlbW9jcmFjeUAyeCc7XG4kaXdzLWNoYW5uZWwtZGVtb2NyYWN5LTJ4LXg6IDcyMHB4O1xuJGl3cy1jaGFubmVsLWRlbW9jcmFjeS0yeC15OiAwcHg7XG4kaXdzLWNoYW5uZWwtZGVtb2NyYWN5LTJ4LW9mZnNldC14OiAtNzIwcHg7XG4kaXdzLWNoYW5uZWwtZGVtb2NyYWN5LTJ4LW9mZnNldC15OiAwcHg7XG4kaXdzLWNoYW5uZWwtZGVtb2NyYWN5LTJ4LXdpZHRoOiAzNjBweDtcbiRpd3MtY2hhbm5lbC1kZW1vY3JhY3ktMngtaGVpZ2h0OiAyNzBweDtcbiRpd3MtY2hhbm5lbC1kZW1vY3JhY3ktMngtdG90YWwtd2lkdGg6IDEwODBweDtcbiRpd3MtY2hhbm5lbC1kZW1vY3JhY3ktMngtdG90YWwtaGVpZ2h0OiA4MTBweDtcbiRpd3MtY2hhbm5lbC1kZW1vY3JhY3ktMngtaW1hZ2U6ICdzcHJpdGVzQDJ4LnBuZyc7XG4kaXdzLWNoYW5uZWwtZGVtb2NyYWN5LTJ4OiAoNzIwcHgsIDBweCwgLTcyMHB4LCAwcHgsIDM2MHB4LCAyNzBweCwgMTA4MHB4LCA4MTBweCwgJ3Nwcml0ZXNAMngucG5nJywgJ2l3cy1jaGFubmVsLWRlbW9jcmFjeUAyeCcsICk7XG4kcmVwZXF1aXR5LTJ4LW5hbWU6ICdyZXBlcXVpdHlAMngnO1xuJHJlcGVxdWl0eS0yeC14OiA3MjBweDtcbiRyZXBlcXVpdHktMngteTogMjcwcHg7XG4kcmVwZXF1aXR5LTJ4LW9mZnNldC14OiAtNzIwcHg7XG4kcmVwZXF1aXR5LTJ4LW9mZnNldC15OiAtMjcwcHg7XG4kcmVwZXF1aXR5LTJ4LXdpZHRoOiAzNjBweDtcbiRyZXBlcXVpdHktMngtaGVpZ2h0OiAyNzBweDtcbiRyZXBlcXVpdHktMngtdG90YWwtd2lkdGg6IDEwODBweDtcbiRyZXBlcXVpdHktMngtdG90YWwtaGVpZ2h0OiA4MTBweDtcbiRyZXBlcXVpdHktMngtaW1hZ2U6ICdzcHJpdGVzQDJ4LnBuZyc7XG4kcmVwZXF1aXR5LTJ4OiAoNzIwcHgsIDI3MHB4LCAtNzIwcHgsIC0yNzBweCwgMzYwcHgsIDI3MHB4LCAxMDgwcHgsIDgxMHB4LCAnc3ByaXRlc0AyeC5wbmcnLCAncmVwZXF1aXR5QDJ4JywgKTtcbiRzZWFib3VybmUtZmNjLTJ4LW5hbWU6ICdzZWFib3VybmUtZmNjQDJ4JztcbiRzZWFib3VybmUtZmNjLTJ4LXg6IDBweDtcbiRzZWFib3VybmUtZmNjLTJ4LXk6IDU0MHB4O1xuJHNlYWJvdXJuZS1mY2MtMngtb2Zmc2V0LXg6IDBweDtcbiRzZWFib3VybmUtZmNjLTJ4LW9mZnNldC15OiAtNTQwcHg7XG4kc2VhYm91cm5lLWZjYy0yeC13aWR0aDogMzYwcHg7XG4kc2VhYm91cm5lLWZjYy0yeC1oZWlnaHQ6IDI3MHB4O1xuJHNlYWJvdXJuZS1mY2MtMngtdG90YWwtd2lkdGg6IDEwODBweDtcbiRzZWFib3VybmUtZmNjLTJ4LXRvdGFsLWhlaWdodDogODEwcHg7XG4kc2VhYm91cm5lLWZjYy0yeC1pbWFnZTogJ3Nwcml0ZXNAMngucG5nJztcbiRzZWFib3VybmUtZmNjLTJ4OiAoMHB4LCA1NDBweCwgMHB4LCAtNTQwcHgsIDM2MHB4LCAyNzBweCwgMTA4MHB4LCA4MTBweCwgJ3Nwcml0ZXNAMngucG5nJywgJ3NlYWJvdXJuZS1mY2NAMngnLCApO1xuJHNvY2hhLWRldi13aGl0ZS1sYWJlbC1vcmlnLTJ4LW5hbWU6ICdzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZ0AyeCc7XG4kc29jaGEtZGV2LXdoaXRlLWxhYmVsLW9yaWctMngteDogMzYwcHg7XG4kc29jaGEtZGV2LXdoaXRlLWxhYmVsLW9yaWctMngteTogNTQwcHg7XG4kc29jaGEtZGV2LXdoaXRlLWxhYmVsLW9yaWctMngtb2Zmc2V0LXg6IC0zNjBweDtcbiRzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZy0yeC1vZmZzZXQteTogLTU0MHB4O1xuJHNvY2hhLWRldi13aGl0ZS1sYWJlbC1vcmlnLTJ4LXdpZHRoOiAzNjBweDtcbiRzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZy0yeC1oZWlnaHQ6IDI3MHB4O1xuJHNvY2hhLWRldi13aGl0ZS1sYWJlbC1vcmlnLTJ4LXRvdGFsLXdpZHRoOiAxMDgwcHg7XG4kc29jaGEtZGV2LXdoaXRlLWxhYmVsLW9yaWctMngtdG90YWwtaGVpZ2h0OiA4MTBweDtcbiRzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZy0yeC1pbWFnZTogJ3Nwcml0ZXNAMngucG5nJztcbiRzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZy0yeDogKDM2MHB4LCA1NDBweCwgLTM2MHB4LCAtNTQwcHgsIDM2MHB4LCAyNzBweCwgMTA4MHB4LCA4MTBweCwgJ3Nwcml0ZXNAMngucG5nJywgJ3NvY2hhLWRldi13aGl0ZS1sYWJlbC1vcmlnQDJ4JywgKTtcbiRzcHJpdGVzaGVldC13aWR0aDogNTQwcHg7XG4kc3ByaXRlc2hlZXQtaGVpZ2h0OiA0MDVweDtcbiRzcHJpdGVzaGVldC1pbWFnZTogJ3Nwcml0ZXMucG5nJztcbiRzcHJpdGVzaGVldC1zcHJpdGVzOiAoJGFhYXMtc2NpZW5jZSwgJGRpc2NvdmVyeS1lZHVjYXRpb24sICRob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydCwgJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtbmF0aW9uYWwtcHJlc3MtY2x1YiwgJGl3cy1jaGFubmVsLWRlbW9jcmFjeSwgJHJlcGVxdWl0eSwgJHNlYWJvdXJuZS1mY2MsICRzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZywgKTtcbiRzcHJpdGVzaGVldDogKDU0MHB4LCA0MDVweCwgJ3Nwcml0ZXMucG5nJywgJHNwcml0ZXNoZWV0LXNwcml0ZXMsICk7XG4kcmV0aW5hLXNwcml0ZXNoZWV0LXdpZHRoOiAxMDgwcHg7XG4kcmV0aW5hLXNwcml0ZXNoZWV0LWhlaWdodDogODEwcHg7XG4kcmV0aW5hLXNwcml0ZXNoZWV0LWltYWdlOiAnc3ByaXRlc0AyeC5wbmcnO1xuJHJldGluYS1zcHJpdGVzaGVldC1zcHJpdGVzOiAoJGFhYXMtc2NpZW5jZS0yeCwgJGRpc2NvdmVyeS1lZHVjYXRpb24tMngsICRob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydC0yeCwgJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtbmF0aW9uYWwtcHJlc3MtY2x1Yi0yeCwgJGl3cy1jaGFubmVsLWRlbW9jcmFjeS0yeCwgJHJlcGVxdWl0eS0yeCwgJHNlYWJvdXJuZS1mY2MtMngsICRzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZy0yeCwgKTtcbiRyZXRpbmEtc3ByaXRlc2hlZXQ6ICgxMDgwcHgsIDgxMHB4LCAnc3ByaXRlc0AyeC5wbmcnLCAkcmV0aW5hLXNwcml0ZXNoZWV0LXNwcml0ZXMsICk7XG5cbi8qXG5UaGVzZSBcInJldGluYSBncm91cFwiIHZhcmlhYmxlcyBhcmUgbWFwcGluZ3MgZm9yIHRoZSBuYW1pbmcgYW5kIHBhaXJpbmcgb2Ygbm9ybWFsIGFuZCByZXRpbmEgc3ByaXRlcy5cblxuVGhlIGxpc3QgZm9ybWF0dGVkIHZhcmlhYmxlcyBhcmUgaW50ZW5kZWQgZm9yIG1peGlucyBsaWtlIGByZXRpbmEtc3ByaXRlYCBhbmQgYHJldGluYS1zcHJpdGVzYC5cbiovXG4kYWFhcy1zY2llbmNlLWdyb3VwLW5hbWU6ICdhYWFzLXNjaWVuY2UnO1xuJGFhYXMtc2NpZW5jZS1ncm91cDogKCdhYWFzLXNjaWVuY2UnLCAkYWFhcy1zY2llbmNlLCAkYWFhcy1zY2llbmNlLTJ4LCApO1xuJGRpc2NvdmVyeS1lZHVjYXRpb24tZ3JvdXAtbmFtZTogJ2Rpc2NvdmVyeS1lZHVjYXRpb24nO1xuJGRpc2NvdmVyeS1lZHVjYXRpb24tZ3JvdXA6ICgnZGlzY292ZXJ5LWVkdWNhdGlvbicsICRkaXNjb3ZlcnktZWR1Y2F0aW9uLCAkZGlzY292ZXJ5LWVkdWNhdGlvbi0yeCwgKTtcbiRob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydC1ncm91cC1uYW1lOiAnaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1jb29rLXBvbGl0aWNhbC1yZXBvcnQnO1xuJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtY29vay1wb2xpdGljYWwtcmVwb3J0LWdyb3VwOiAoJ2hvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtY29vay1wb2xpdGljYWwtcmVwb3J0JywgJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtY29vay1wb2xpdGljYWwtcmVwb3J0LCAkaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1jb29rLXBvbGl0aWNhbC1yZXBvcnQtMngsICk7XG4kaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViLWdyb3VwLW5hbWU6ICdob21lLWZyb250LWNvbW11bmljYXRpb25zLW5hdGlvbmFsLXByZXNzLWNsdWInO1xuJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtbmF0aW9uYWwtcHJlc3MtY2x1Yi1ncm91cDogKCdob21lLWZyb250LWNvbW11bmljYXRpb25zLW5hdGlvbmFsLXByZXNzLWNsdWInLCAkaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViLCAkaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViLTJ4LCApO1xuJGl3cy1jaGFubmVsLWRlbW9jcmFjeS1ncm91cC1uYW1lOiAnaXdzLWNoYW5uZWwtZGVtb2NyYWN5JztcbiRpd3MtY2hhbm5lbC1kZW1vY3JhY3ktZ3JvdXA6ICgnaXdzLWNoYW5uZWwtZGVtb2NyYWN5JywgJGl3cy1jaGFubmVsLWRlbW9jcmFjeSwgJGl3cy1jaGFubmVsLWRlbW9jcmFjeS0yeCwgKTtcbiRyZXBlcXVpdHktZ3JvdXAtbmFtZTogJ3JlcGVxdWl0eSc7XG4kcmVwZXF1aXR5LWdyb3VwOiAoJ3JlcGVxdWl0eScsICRyZXBlcXVpdHksICRyZXBlcXVpdHktMngsICk7XG4kc2VhYm91cm5lLWZjYy1ncm91cC1uYW1lOiAnc2VhYm91cm5lLWZjYyc7XG4kc2VhYm91cm5lLWZjYy1ncm91cDogKCdzZWFib3VybmUtZmNjJywgJHNlYWJvdXJuZS1mY2MsICRzZWFib3VybmUtZmNjLTJ4LCApO1xuJHNvY2hhLWRldi13aGl0ZS1sYWJlbC1vcmlnLWdyb3VwLW5hbWU6ICdzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZyc7XG4kc29jaGEtZGV2LXdoaXRlLWxhYmVsLW9yaWctZ3JvdXA6ICgnc29jaGEtZGV2LXdoaXRlLWxhYmVsLW9yaWcnLCAkc29jaGEtZGV2LXdoaXRlLWxhYmVsLW9yaWcsICRzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZy0yeCwgKTtcbiRyZXRpbmEtZ3JvdXBzOiAoJGFhYXMtc2NpZW5jZS1ncm91cCwgJGRpc2NvdmVyeS1lZHVjYXRpb24tZ3JvdXAsICRob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydC1ncm91cCwgJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtbmF0aW9uYWwtcHJlc3MtY2x1Yi1ncm91cCwgJGl3cy1jaGFubmVsLWRlbW9jcmFjeS1ncm91cCwgJHJlcGVxdWl0eS1ncm91cCwgJHNlYWJvdXJuZS1mY2MtZ3JvdXAsICRzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZy1ncm91cCwgKTtcblxuXG4iLCIvLyBVdGlsaXR5IGNsYXNzZXNcbi5jbGVhcmZpeCB7XG4gIEBpbmNsdWRlIGNsZWFyZml4KCk7XG59XG5cbi5pbWctcmVzcG9uc2l2ZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi5oaWRlLW1vYmlsZSB7XG4gIEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxufVxuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG4vLy8gUHJvdmlkZXMgYW4gZWFzeSB3YXkgdG8gaW5jbHVkZSBhIGNsZWFyZml4IGZvciBjb250YWluaW5nIGZsb2F0cy5cbi8vL1xuLy8vIEBsaW5rIGh0dHA6Ly9jc3Ntb2pvLmNvbS9sYXRlc3RfbmV3X2NsZWFyZml4X3NvX2Zhci9cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBAaW5jbHVkZSBjbGVhcmZpeDtcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIGNzcyAtIENTUyBPdXRwdXRcbi8vLyAgIC5lbGVtZW50OjphZnRlciB7XG4vLy8gICAgIGNsZWFyOiBib3RoO1xuLy8vICAgICBjb250ZW50OiBcIlwiO1xuLy8vICAgICBkaXNwbGF5OiB0YWJsZTtcbi8vLyAgIH1cblxuQG1peGluIGNsZWFyZml4IHtcbiAgJjo6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7XG4gIH1cbn1cbiIsIkBjaGFyc2V0ICdVVEYtOCc7XG5cbi8vICAgICBfICAgICAgICAgICAgXyAgICAgICAgICAgXyAgICAgICAgICAgICAgICAgICAgICAgICAgIF8gX1xuLy8gICAgKF8pICAgICAgICAgIHwgfCAgICAgICAgIHwgfCAgICAgICAgICAgICAgICAgICAgICAgICB8IChfKVxuLy8gICAgIF8gXyBfXyAgIF9fX3wgfF8gICBfICBfX3wgfCBfX18gICBfIF9fIF9fXyAgIF9fXyAgX198IHxfICBfXyBfXG4vLyAgICB8IHwgJ18gXFwgLyBfX3wgfCB8IHwgfC8gX2AgfC8gXyBcXCB8ICdfIGAgXyBcXCAvIF8gXFwvIF9gIHwgfC8gX2AgfFxuLy8gICAgfCB8IHwgfCB8IChfX3wgfCB8X3wgfCAoX3wgfCAgX18vIHwgfCB8IHwgfCB8ICBfXy8gKF98IHwgfCAoX3wgfFxuLy8gICAgfF98X3wgfF98XFxfX198X3xcXF9fLF98XFxfXyxffFxcX19ffCB8X3wgfF98IHxffFxcX19ffFxcX18sX3xffFxcX18sX3xcbi8vXG4vLyAgICAgIFNpbXBsZSwgZWxlZ2FudCBhbmQgbWFpbnRhaW5hYmxlIG1lZGlhIHF1ZXJpZXMgaW4gU2Fzc1xuLy8gICAgICAgICAgICAgICAgICAgICAgICB2MS40LjJcbi8vXG4vLyAgICAgICAgICAgICAgICBodHRwOi8vaW5jbHVkZS1tZWRpYS5jb21cbi8vXG4vLyAgICAgICAgIEF1dGhvcnM6IEVkdWFyZG8gQm91Y2FzIChAZWR1YXJkb2JvdWNhcylcbi8vICAgICAgICAgICAgICAgICAgSHVnbyBHaXJhdWRlbCAoQGh1Z29naXJhdWRlbClcbi8vXG4vLyAgICAgIFRoaXMgcHJvamVjdCBpcyBsaWNlbnNlZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIE1JVCBsaWNlbnNlXG5cblxuLy8vL1xuLy8vIGluY2x1ZGUtbWVkaWEgbGlicmFyeSBwdWJsaWMgY29uZmlndXJhdGlvblxuLy8vIEBhdXRob3IgRWR1YXJkbyBCb3VjYXNcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vL1xuXG5cbi8vL1xuLy8vIENyZWF0ZXMgYSBsaXN0IG9mIGdsb2JhbCBicmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzaW5nbGUgYnJlYWtwb2ludCB3aXRoIHRoZSBsYWJlbCBgcGhvbmVgXG4vLy8gICRicmVha3BvaW50czogKCdwaG9uZSc6IDMyMHB4KTtcbi8vL1xuJGJyZWFrcG9pbnRzOiAoXG4gICdwaG9uZSc6IDMyMHB4LFxuICAndGFibGV0JzogNzY4cHgsXG4gICdkZXNrdG9wJzogMTAyNHB4XG4pICFkZWZhdWx0O1xuXG5cbi8vL1xuLy8vIENyZWF0ZXMgYSBsaXN0IG9mIHN0YXRpYyBleHByZXNzaW9ucyBvciBtZWRpYSB0eXBlc1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzaW5nbGUgbWVkaWEgdHlwZSAoc2NyZWVuKVxuLy8vICAkbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJzogJ3NjcmVlbicpO1xuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIENyZWF0ZXMgYSBzdGF0aWMgZXhwcmVzc2lvbiB3aXRoIGxvZ2ljYWwgZGlzanVuY3Rpb24gKE9SIG9wZXJhdG9yKVxuLy8vICAkbWVkaWEtZXhwcmVzc2lvbnM6IChcbi8vLyAgICAncmV0aW5hMngnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSdcbi8vLyAgKTtcbi8vL1xuJG1lZGlhLWV4cHJlc3Npb25zOiAoXG4gICdzY3JlZW4nOiAnc2NyZWVuJyxcbiAgJ3ByaW50JzogJ3ByaW50JyxcbiAgJ2hhbmRoZWxkJzogJ2hhbmRoZWxkJyxcbiAgJ2xhbmRzY2FwZSc6ICcob3JpZW50YXRpb246IGxhbmRzY2FwZSknLFxuICAncG9ydHJhaXQnOiAnKG9yaWVudGF0aW9uOiBwb3J0cmFpdCknLFxuICAncmV0aW5hMngnOiAnKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKScsXG4gICdyZXRpbmEzeCc6ICcoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKSwgKG1pbi1yZXNvbHV0aW9uOiAzNTBkcGkpJ1xuKSAhZGVmYXVsdDtcblxuXG4vLy9cbi8vLyBEZWZpbmVzIGEgbnVtYmVyIHRvIGJlIGFkZGVkIG9yIHN1YnRyYWN0ZWQgZnJvbSBlYWNoIHVuaXQgd2hlbiBkZWNsYXJpbmcgYnJlYWtwb2ludHMgd2l0aCBleGNsdXNpdmUgaW50ZXJ2YWxzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHBpeGVscyBpcyBkZWZpbmVkIGFzIGAxYCBieSBkZWZhdWx0XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+MTI4cHgnKSB7fVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IDEyOXB4KSB7fVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEludGVydmFsIGZvciBlbXMgaXMgZGVmaW5lZCBhcyBgMC4wMWAgYnkgZGVmYXVsdFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPjIwZW0nKSB7fVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgQG1lZGlhIChtaW4td2lkdGg6IDIwLjAxZW0pIHt9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gSW50ZXJ2YWwgZm9yIHJlbXMgaXMgZGVmaW5lZCBhcyBgMC4xYCBieSBkZWZhdWx0LCB0byBiZSB1c2VkIHdpdGggYGZvbnQtc2l6ZTogNjIuNSU7YFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPjIuMHJlbScpIHt9XG4vLy9cbi8vLyAgLyogR2VuZXJhdGVzOiAqL1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogMi4xcmVtKSB7fVxuLy8vXG4kdW5pdC1pbnRlcnZhbHM6IChcbiAgJ3B4JzogMSxcbiAgJ2VtJzogMC4wMSxcbiAgJ3JlbSc6IDAuMVxuKSAhZGVmYXVsdDtcblxuLy8vXG4vLy8gRGVmaW5lcyB3aGV0aGVyIHN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXMgaXMgYXZhaWxhYmxlLCB1c2VmdWwgZm9yIGNyZWF0aW5nIHNlcGFyYXRlIHN0eWxlc2hlZXRzXG4vLy8gZm9yIGJyb3dzZXJzIHRoYXQgZG9uJ3Qgc3VwcG9ydCBtZWRpYSBxdWVyaWVzLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIERpc2FibGVzIHN1cHBvcnQgZm9yIG1lZGlhIHF1ZXJpZXNcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgLmZvbyB7XG4vLy8gICAgY29sb3I6IHRvbWF0bztcbi8vLyAgfVxuLy8vXG4kaW0tbWVkaWEtc3VwcG9ydDogdHJ1ZSAhZGVmYXVsdDtcblxuLy8vXG4vLy8gU2VsZWN0cyB3aGljaCBicmVha3BvaW50IHRvIGVtdWxhdGUgd2hlbiBzdXBwb3J0IGZvciBtZWRpYSBxdWVyaWVzIGlzIGRpc2FibGVkLiBNZWRpYSBxdWVyaWVzIHRoYXQgc3RhcnQgYXQgb3Jcbi8vLyBpbnRlcmNlcHQgdGhlIGJyZWFrcG9pbnQgd2lsbCBiZSBkaXNwbGF5ZWQsIGFueSBvdGhlcnMgd2lsbCBiZSBpZ25vcmVkLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBzaG93IGJlY2F1c2UgaXQgaW50ZXJjZXB0cyB0aGUgc3RhdGljIGJyZWFrcG9pbnRcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIEdlbmVyYXRlczogKi9cbi8vLyAgLmZvbyB7XG4vLy8gICAgY29sb3I6IHRvbWF0bztcbi8vLyAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBOT1Qgc2hvdyBiZWNhdXNlIGl0IGRvZXMgbm90IGludGVyY2VwdCB0aGUgZGVza3RvcCBicmVha3BvaW50XG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICd0YWJsZXQnO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj1kZXNrdG9wJykge1xuLy8vICAgIC5mb28ge1xuLy8vICAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vICAvKiBObyBvdXRwdXQgKi9cbi8vL1xuJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJyAhZGVmYXVsdDtcblxuLy8vXG4vLy8gU2VsZWN0cyB3aGljaCBtZWRpYSBleHByZXNzaW9ucyBhcmUgYWxsb3dlZCBpbiBhbiBleHByZXNzaW9uIGZvciBpdCB0byBiZSB1c2VkIHdoZW4gbWVkaWEgcXVlcmllc1xuLy8vIGFyZSBub3Qgc3VwcG9ydGVkLlxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFRoaXMgbWVkaWEgcXVlcnkgd2lsbCBzaG93IGJlY2F1c2UgaXQgaW50ZXJjZXB0cyB0aGUgc3RhdGljIGJyZWFrcG9pbnQgYW5kIGNvbnRhaW5zIG9ubHkgYWNjZXB0ZWQgbWVkaWEgZXhwcmVzc2lvbnNcbi8vLyAgJGltLW1lZGlhLXN1cHBvcnQ6IGZhbHNlO1xuLy8vICAkaW0tbm8tbWVkaWEtYnJlYWtwb2ludDogJ2Rlc2t0b3AnO1xuLy8vICAkaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJyk7XG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+PXRhYmxldCcsICdzY3JlZW4nKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gICAvKiBHZW5lcmF0ZXM6ICovXG4vLy8gICAuZm9vIHtcbi8vLyAgICAgY29sb3I6IHRvbWF0bztcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBUaGlzIG1lZGlhIHF1ZXJ5IHdpbGwgTk9UIHNob3cgYmVjYXVzZSBpdCBpbnRlcmNlcHRzIHRoZSBzdGF0aWMgYnJlYWtwb2ludCBidXQgY29udGFpbnMgYSBtZWRpYSBleHByZXNzaW9uIHRoYXQgaXMgbm90IGFjY2VwdGVkXG4vLy8gICRpbS1tZWRpYS1zdXBwb3J0OiBmYWxzZTtcbi8vLyAgJGltLW5vLW1lZGlhLWJyZWFrcG9pbnQ6ICdkZXNrdG9wJztcbi8vLyAgJGltLW5vLW1lZGlhLWV4cHJlc3Npb25zOiAoJ3NjcmVlbicpO1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj10YWJsZXQnLCAncmV0aW5hMngnKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBjb2xvcjogdG9tYXRvO1xuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG4vLy8gIC8qIE5vIG91dHB1dCAqL1xuLy8vXG4kaW0tbm8tbWVkaWEtZXhwcmVzc2lvbnM6ICgnc2NyZWVuJywgJ3BvcnRyYWl0JywgJ2xhbmRzY2FwZScpICFkZWZhdWx0O1xuXG4vLy8vXG4vLy8gQ3Jvc3MtZW5naW5lIGxvZ2dpbmcgZW5naW5lXG4vLy8gQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8vXG5cblxuLy8vXG4vLy8gTG9nIGEgbWVzc2FnZSBlaXRoZXIgd2l0aCBgQGVycm9yYCBpZiBzdXBwb3J0ZWRcbi8vLyBlbHNlIHdpdGggYEB3YXJuYCwgdXNpbmcgYGZlYXR1cmUtZXhpc3RzKCdhdC1lcnJvcicpYFxuLy8vIHRvIGRldGVjdCBzdXBwb3J0LlxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRtZXNzYWdlIC0gTWVzc2FnZSB0byBsb2dcbi8vL1xuQGZ1bmN0aW9uIGxvZygkbWVzc2FnZSkge1xuICBAaWYgZmVhdHVyZS1leGlzdHMoJ2F0LWVycm9yJykge1xuICAgIEBlcnJvciAkbWVzc2FnZTtcbiAgfSBAZWxzZSB7XG4gICAgQHdhcm4gJG1lc3NhZ2U7XG4gICAgJF86IG5vb3AoKTtcbiAgfVxuXG4gIEByZXR1cm4gJG1lc3NhZ2U7XG59XG5cblxuLy8vXG4vLy8gV3JhcHBlciBtaXhpbiBmb3IgdGhlIGxvZyBmdW5jdGlvbiBzbyBpdCBjYW4gYmUgdXNlZCB3aXRoIGEgbW9yZSBmcmllbmRseVxuLy8vIEFQSSB0aGFuIGBAaWYgbG9nKCcuLicpIHt9YCBvciBgJF86IGxvZygnLi4nKWAuIEJhc2ljYWxseSwgdXNlIHRoZSBmdW5jdGlvblxuLy8vIHdpdGhpbiBmdW5jdGlvbnMgYmVjYXVzZSBpdCBpcyBub3QgcG9zc2libGUgdG8gaW5jbHVkZSBhIG1peGluIGluIGEgZnVuY3Rpb25cbi8vLyBhbmQgdXNlIHRoZSBtaXhpbiBldmVyeXdoZXJlIGVsc2UgYmVjYXVzZSBpdCdzIG11Y2ggbW9yZSBlbGVnYW50LlxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRtZXNzYWdlIC0gTWVzc2FnZSB0byBsb2dcbi8vL1xuQG1peGluIGxvZygkbWVzc2FnZSkge1xuICBAaWYgbG9nKCRtZXNzYWdlKSB7fVxufVxuXG5cbi8vL1xuLy8vIEZ1bmN0aW9uIHdpdGggbm8gYEByZXR1cm5gIGNhbGxlZCBuZXh0IHRvIGBAd2FybmAgaW4gU2FzcyAzLjNcbi8vLyB0byB0cmlnZ2VyIGEgY29tcGlsaW5nIGVycm9yIGFuZCBzdG9wIHRoZSBwcm9jZXNzLlxuLy8vXG5AZnVuY3Rpb24gbm9vcCgpIHt9XG5cbi8vL1xuLy8vIERldGVybWluZXMgd2hldGhlciBhIGxpc3Qgb2YgY29uZGl0aW9ucyBpcyBpbnRlcmNlcHRlZCBieSB0aGUgc3RhdGljIGJyZWFrcG9pbnQuXG4vLy9cbi8vLyBAcGFyYW0ge0FyZ2xpc3R9ICAgJGNvbmRpdGlvbnMgIC0gTWVkaWEgcXVlcnkgY29uZGl0aW9uc1xuLy8vXG4vLy8gQHJldHVybiB7Qm9vbGVhbn0gLSBSZXR1cm5zIHRydWUgaWYgdGhlIGNvbmRpdGlvbnMgYXJlIGludGVyY2VwdGVkIGJ5IHRoZSBzdGF0aWMgYnJlYWtwb2ludFxuLy8vXG5AZnVuY3Rpb24gaW0taW50ZXJjZXB0cy1zdGF0aWMtYnJlYWtwb2ludCgkY29uZGl0aW9ucy4uLikge1xuICAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZTogbWFwLWdldCgkYnJlYWtwb2ludHMsICRpbS1uby1tZWRpYS1icmVha3BvaW50KTtcblxuICBAaWYgbm90ICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlIHtcbiAgICBAaWYgbG9nKCdgI3skaW0tbm8tbWVkaWEtYnJlYWtwb2ludH1gIGlzIG5vdCBhIHZhbGlkIGJyZWFrcG9pbnQuJykge31cbiAgfVxuXG4gIEBlYWNoICRjb25kaXRpb24gaW4gJGNvbmRpdGlvbnMge1xuICAgIEBpZiBub3QgbWFwLWhhcy1rZXkoJG1lZGlhLWV4cHJlc3Npb25zLCAkY29uZGl0aW9uKSB7XG4gICAgICAkb3BlcmF0b3I6IGdldC1leHByZXNzaW9uLW9wZXJhdG9yKCRjb25kaXRpb24pO1xuICAgICAgJHByZWZpeDogZ2V0LWV4cHJlc3Npb24tcHJlZml4KCRvcGVyYXRvcik7XG4gICAgICAkdmFsdWU6IGdldC1leHByZXNzaW9uLXZhbHVlKCRjb25kaXRpb24sICRvcGVyYXRvcik7XG5cbiAgICAgIC8vIHNjc3MtbGludDpkaXNhYmxlIFNwYWNlQXJvdW5kT3BlcmF0b3JcbiAgICAgIEBpZiAoJHByZWZpeCA9PSAnbWF4JyBhbmQgJHZhbHVlIDw9ICRuby1tZWRpYS1icmVha3BvaW50LXZhbHVlKSBvclxuICAgICAgICAgICgkcHJlZml4ID09ICdtaW4nIGFuZCAkdmFsdWUgPiAkbm8tbWVkaWEtYnJlYWtwb2ludC12YWx1ZSkge1xuICAgICAgICBAcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgbm90IGluZGV4KCRpbS1uby1tZWRpYS1leHByZXNzaW9ucywgJGNvbmRpdGlvbikge1xuICAgICAgQHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBAcmV0dXJuIHRydWU7XG59XG5cbi8vLy9cbi8vLyBQYXJzaW5nIGVuZ2luZVxuLy8vIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuLy8vL1xuXG5cbi8vL1xuLy8vIEdldCBvcGVyYXRvciBvZiBhbiBleHByZXNzaW9uXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIGV4dHJhY3Qgb3BlcmF0b3IgZnJvbVxuLy8vXG4vLy8gQHJldHVybiB7U3RyaW5nfSAtIEFueSBvZiBgPj1gLCBgPmAsIGA8PWAsIGA8YCwgYOKJpWAsIGDiiaRgXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi1vcGVyYXRvcigkZXhwcmVzc2lvbikge1xuICBAZWFjaCAkb3BlcmF0b3IgaW4gKCc+PScsICc+JywgJzw9JywgJzwnLCAn4omlJywgJ+KJpCcpIHtcbiAgICBAaWYgc3RyLWluZGV4KCRleHByZXNzaW9uLCAkb3BlcmF0b3IpIHtcbiAgICAgIEByZXR1cm4gJG9wZXJhdG9yO1xuICAgIH1cbiAgfVxuXG4gIC8vIEl0IGlzIG5vdCBwb3NzaWJsZSB0byBpbmNsdWRlIGEgbWl4aW4gaW5zaWRlIGEgZnVuY3Rpb24sIHNvIHdlIGhhdmUgdG9cbiAgLy8gcmVseSBvbiB0aGUgYGxvZyguLilgIGZ1bmN0aW9uIHJhdGhlciB0aGFuIHRoZSBgbG9nKC4uKWAgbWl4aW4uIEJlY2F1c2VcbiAgLy8gZnVuY3Rpb25zIGNhbm5vdCBiZSBjYWxsZWQgYW55d2hlcmUgaW4gU2Fzcywgd2UgbmVlZCB0byBoYWNrIHRoZSBjYWxsIGluXG4gIC8vIGEgZHVtbXkgdmFyaWFibGUsIHN1Y2ggYXMgYCRfYC4gSWYgYW55Ym9keSBldmVyIHJhaXNlIGEgc2NvcGluZyBpc3N1ZSB3aXRoXG4gIC8vIFNhc3MgMy4zLCBjaGFuZ2UgdGhpcyBsaW5lIGluIGBAaWYgbG9nKC4uKSB7fWAgaW5zdGVhZC5cbiAgJF86IGxvZygnTm8gb3BlcmF0b3IgZm91bmQgaW4gYCN7JGV4cHJlc3Npb259YC4nKTtcbn1cblxuXG4vLy9cbi8vLyBHZXQgZGltZW5zaW9uIG9mIGFuIGV4cHJlc3Npb24sIGJhc2VkIG9uIGEgZm91bmQgb3BlcmF0b3Jcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkZXhwcmVzc2lvbiAtIEV4cHJlc3Npb24gdG8gZXh0cmFjdCBkaW1lbnNpb24gZnJvbVxuLy8vIEBwYXJhbSB7U3RyaW5nfSAkb3BlcmF0b3IgLSBPcGVyYXRvciBmcm9tIGAkZXhwcmVzc2lvbmBcbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBgd2lkdGhgIG9yIGBoZWlnaHRgIChvciBwb3RlbnRpYWxseSBhbnl0aGluZyBlbHNlKVxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tZGltZW5zaW9uKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpIHtcbiAgJG9wZXJhdG9yLWluZGV4OiBzdHItaW5kZXgoJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG4gICRwYXJzZWQtZGltZW5zaW9uOiBzdHItc2xpY2UoJGV4cHJlc3Npb24sIDAsICRvcGVyYXRvci1pbmRleCAtIDEpO1xuICAkZGltZW5zaW9uOiAnd2lkdGgnO1xuXG4gIEBpZiBzdHItbGVuZ3RoKCRwYXJzZWQtZGltZW5zaW9uKSA+IDAge1xuICAgICRkaW1lbnNpb246ICRwYXJzZWQtZGltZW5zaW9uO1xuICB9XG5cbiAgQHJldHVybiAkZGltZW5zaW9uO1xufVxuXG5cbi8vL1xuLy8vIEdldCBkaW1lbnNpb24gcHJlZml4IGJhc2VkIG9uIGFuIG9wZXJhdG9yXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG9wZXJhdG9yIC0gT3BlcmF0b3Jcbi8vL1xuLy8vIEByZXR1cm4ge1N0cmluZ30gLSBgbWluYCBvciBgbWF4YFxuLy8vXG5AZnVuY3Rpb24gZ2V0LWV4cHJlc3Npb24tcHJlZml4KCRvcGVyYXRvcikge1xuICBAcmV0dXJuIGlmKGluZGV4KCgnPCcsICc8PScsICfiiaQnKSwgJG9wZXJhdG9yKSwgJ21heCcsICdtaW4nKTtcbn1cblxuXG4vLy9cbi8vLyBHZXQgdmFsdWUgb2YgYW4gZXhwcmVzc2lvbiwgYmFzZWQgb24gYSBmb3VuZCBvcGVyYXRvclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRleHByZXNzaW9uIC0gRXhwcmVzc2lvbiB0byBleHRyYWN0IHZhbHVlIGZyb21cbi8vLyBAcGFyYW0ge1N0cmluZ30gJG9wZXJhdG9yIC0gT3BlcmF0b3IgZnJvbSBgJGV4cHJlc3Npb25gXG4vLy9cbi8vLyBAcmV0dXJuIHtOdW1iZXJ9IC0gQSBudW1lcmljIHZhbHVlXG4vLy9cbkBmdW5jdGlvbiBnZXQtZXhwcmVzc2lvbi12YWx1ZSgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yKSB7XG4gICRvcGVyYXRvci1pbmRleDogc3RyLWluZGV4KCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuICAkdmFsdWU6IHN0ci1zbGljZSgkZXhwcmVzc2lvbiwgJG9wZXJhdG9yLWluZGV4ICsgc3RyLWxlbmd0aCgkb3BlcmF0b3IpKTtcblxuICBAaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkdmFsdWUpIHtcbiAgICAkdmFsdWU6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkdmFsdWUpO1xuICB9IEBlbHNlIHtcbiAgICAkdmFsdWU6IHRvLW51bWJlcigkdmFsdWUpO1xuICB9XG5cbiAgJGludGVydmFsOiBtYXAtZ2V0KCR1bml0LWludGVydmFscywgdW5pdCgkdmFsdWUpKTtcblxuICBAaWYgbm90ICRpbnRlcnZhbCB7XG4gICAgLy8gSXQgaXMgbm90IHBvc3NpYmxlIHRvIGluY2x1ZGUgYSBtaXhpbiBpbnNpZGUgYSBmdW5jdGlvbiwgc28gd2UgaGF2ZSB0b1xuICAgIC8vIHJlbHkgb24gdGhlIGBsb2coLi4pYCBmdW5jdGlvbiByYXRoZXIgdGhhbiB0aGUgYGxvZyguLilgIG1peGluLiBCZWNhdXNlXG4gICAgLy8gZnVuY3Rpb25zIGNhbm5vdCBiZSBjYWxsZWQgYW55d2hlcmUgaW4gU2Fzcywgd2UgbmVlZCB0byBoYWNrIHRoZSBjYWxsIGluXG4gICAgLy8gYSBkdW1teSB2YXJpYWJsZSwgc3VjaCBhcyBgJF9gLiBJZiBhbnlib2R5IGV2ZXIgcmFpc2UgYSBzY29waW5nIGlzc3VlIHdpdGhcbiAgICAvLyBTYXNzIDMuMywgY2hhbmdlIHRoaXMgbGluZSBpbiBgQGlmIGxvZyguLikge31gIGluc3RlYWQuXG4gICAgJF86IGxvZygnVW5rbm93biB1bml0IGAje3VuaXQoJHZhbHVlKX1gLicpO1xuICB9XG5cbiAgQGlmICRvcGVyYXRvciA9PSAnPicge1xuICAgICR2YWx1ZTogJHZhbHVlICsgJGludGVydmFsO1xuICB9IEBlbHNlIGlmICRvcGVyYXRvciA9PSAnPCcge1xuICAgICR2YWx1ZTogJHZhbHVlIC0gJGludGVydmFsO1xuICB9XG5cbiAgQHJldHVybiAkdmFsdWU7XG59XG5cblxuLy8vXG4vLy8gUGFyc2UgYW4gZXhwcmVzc2lvbiB0byByZXR1cm4gYSB2YWxpZCBtZWRpYS1xdWVyeSBleHByZXNzaW9uXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJGV4cHJlc3Npb24gLSBFeHByZXNzaW9uIHRvIHBhcnNlXG4vLy9cbi8vLyBAcmV0dXJuIHtTdHJpbmd9IC0gVmFsaWQgbWVkaWEgcXVlcnlcbi8vL1xuQGZ1bmN0aW9uIHBhcnNlLWV4cHJlc3Npb24oJGV4cHJlc3Npb24pIHtcbiAgLy8gSWYgaXQgaXMgcGFydCBvZiAkbWVkaWEtZXhwcmVzc2lvbnMsIGl0IGhhcyBubyBvcGVyYXRvclxuICAvLyB0aGVuIHRoZXJlIGlzIG5vIG5lZWQgdG8gZ28gYW55IGZ1cnRoZXIsIGp1c3QgcmV0dXJuIHRoZSB2YWx1ZVxuICBAaWYgbWFwLWhhcy1rZXkoJG1lZGlhLWV4cHJlc3Npb25zLCAkZXhwcmVzc2lvbikge1xuICAgIEByZXR1cm4gbWFwLWdldCgkbWVkaWEtZXhwcmVzc2lvbnMsICRleHByZXNzaW9uKTtcbiAgfVxuXG4gICRvcGVyYXRvcjogZ2V0LWV4cHJlc3Npb24tb3BlcmF0b3IoJGV4cHJlc3Npb24pO1xuICAkZGltZW5zaW9uOiBnZXQtZXhwcmVzc2lvbi1kaW1lbnNpb24oJGV4cHJlc3Npb24sICRvcGVyYXRvcik7XG4gICRwcmVmaXg6IGdldC1leHByZXNzaW9uLXByZWZpeCgkb3BlcmF0b3IpO1xuICAkdmFsdWU6IGdldC1leHByZXNzaW9uLXZhbHVlKCRleHByZXNzaW9uLCAkb3BlcmF0b3IpO1xuXG4gIEByZXR1cm4gJygjeyRwcmVmaXh9LSN7JGRpbWVuc2lvbn06ICN7JHZhbHVlfSknO1xufVxuXG4vLy9cbi8vLyBTbGljZSBgJGxpc3RgIGJldHdlZW4gYCRzdGFydGAgYW5kIGAkZW5kYCBpbmRleGVzXG4vLy9cbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vL1xuLy8vIEBwYXJhbSB7TGlzdH0gJGxpc3QgLSBMaXN0IHRvIHNsaWNlXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRzdGFydCBbMV0gLSBTdGFydCBpbmRleFxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkZW5kIFtsZW5ndGgoJGxpc3QpXSAtIEVuZCBpbmRleFxuLy8vXG4vLy8gQHJldHVybiB7TGlzdH0gU2xpY2VkIGxpc3Rcbi8vL1xuQGZ1bmN0aW9uIHNsaWNlKCRsaXN0LCAkc3RhcnQ6IDEsICRlbmQ6IGxlbmd0aCgkbGlzdCkpIHtcbiAgQGlmIGxlbmd0aCgkbGlzdCkgPCAxIG9yICRzdGFydCA+ICRlbmQge1xuICAgIEByZXR1cm4gKCk7XG4gIH1cblxuICAkcmVzdWx0OiAoKTtcblxuICBAZm9yICRpIGZyb20gJHN0YXJ0IHRocm91Z2ggJGVuZCB7XG4gICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsIG50aCgkbGlzdCwgJGkpKTtcbiAgfVxuXG4gIEByZXR1cm4gJHJlc3VsdDtcbn1cblxuLy8vL1xuLy8vIFN0cmluZyB0byBudW1iZXIgY29udmVydGVyXG4vLy8gQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG4vLy8gQGFjY2VzcyBwcml2YXRlXG4vLy8vXG5cblxuLy8vXG4vLy8gQ2FzdHMgYSBzdHJpbmcgaW50byBhIG51bWJlclxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmcgfCBOdW1iZXJ9ICR2YWx1ZSAtIFZhbHVlIHRvIGJlIHBhcnNlZFxuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyfVxuLy8vXG5AZnVuY3Rpb24gdG8tbnVtYmVyKCR2YWx1ZSkge1xuICBAaWYgdHlwZS1vZigkdmFsdWUpID09ICdudW1iZXInIHtcbiAgICBAcmV0dXJuICR2YWx1ZTtcbiAgfSBAZWxzZSBpZiB0eXBlLW9mKCR2YWx1ZSkgIT0gJ3N0cmluZycge1xuICAgICRfOiBsb2coJ1ZhbHVlIGZvciBgdG8tbnVtYmVyYCBzaG91bGQgYmUgYSBudW1iZXIgb3IgYSBzdHJpbmcuJyk7XG4gIH1cblxuICAkcmVzdWx0OiAwO1xuICAkZGlnaXRzOiAwO1xuICAkbWludXM6IHN0ci1zbGljZSgkdmFsdWUsIDEsIDEpID09ICctJztcbiAgJG51bWJlcnM6ICgnMCc6IDAsICcxJzogMSwgJzInOiAyLCAnMyc6IDMsICc0JzogNCwgJzUnOiA1LCAnNic6IDYsICc3JzogNywgJzgnOiA4LCAnOSc6IDkpO1xuXG4gIEBmb3IgJGkgZnJvbSBpZigkbWludXMsIDIsIDEpIHRocm91Z2ggc3RyLWxlbmd0aCgkdmFsdWUpIHtcbiAgICAkY2hhcmFjdGVyOiBzdHItc2xpY2UoJHZhbHVlLCAkaSwgJGkpO1xuXG4gICAgQGlmIG5vdCAoaW5kZXgobWFwLWtleXMoJG51bWJlcnMpLCAkY2hhcmFjdGVyKSBvciAkY2hhcmFjdGVyID09ICcuJykge1xuICAgICAgQHJldHVybiB0by1sZW5ndGgoaWYoJG1pbnVzLCAtJHJlc3VsdCwgJHJlc3VsdCksIHN0ci1zbGljZSgkdmFsdWUsICRpKSlcbiAgICB9XG5cbiAgICBAaWYgJGNoYXJhY3RlciA9PSAnLicge1xuICAgICAgJGRpZ2l0czogMTtcbiAgICB9IEBlbHNlIGlmICRkaWdpdHMgPT0gMCB7XG4gICAgICAkcmVzdWx0OiAkcmVzdWx0ICogMTAgKyBtYXAtZ2V0KCRudW1iZXJzLCAkY2hhcmFjdGVyKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRkaWdpdHM6ICRkaWdpdHMgKiAxMDtcbiAgICAgICRyZXN1bHQ6ICRyZXN1bHQgKyBtYXAtZ2V0KCRudW1iZXJzLCAkY2hhcmFjdGVyKSAvICRkaWdpdHM7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiBpZigkbWludXMsIC0kcmVzdWx0LCAkcmVzdWx0KTs7XG59XG5cblxuLy8vXG4vLy8gQWRkIGAkdW5pdGAgdG8gYCR2YWx1ZWBcbi8vL1xuLy8vIEBwYXJhbSB7TnVtYmVyfSAkdmFsdWUgLSBWYWx1ZSB0byBhZGQgdW5pdCB0b1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkdW5pdCAtIFN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgdW5pdFxuLy8vXG4vLy8gQHJldHVybiB7TnVtYmVyfSAtIGAkdmFsdWVgIGV4cHJlc3NlZCBpbiBgJHVuaXRgXG4vLy9cbkBmdW5jdGlvbiB0by1sZW5ndGgoJHZhbHVlLCAkdW5pdCkge1xuICAkdW5pdHM6ICgncHgnOiAxcHgsICdjbSc6IDFjbSwgJ21tJzogMW1tLCAnJSc6IDElLCAnY2gnOiAxY2gsICdwYyc6IDFwYywgJ2luJzogMWluLCAnZW0nOiAxZW0sICdyZW0nOiAxcmVtLCAncHQnOiAxcHQsICdleCc6IDFleCwgJ3Z3JzogMXZ3LCAndmgnOiAxdmgsICd2bWluJzogMXZtaW4sICd2bWF4JzogMXZtYXgpO1xuXG4gIEBpZiBub3QgaW5kZXgobWFwLWtleXMoJHVuaXRzKSwgJHVuaXQpIHtcbiAgICAkXzogbG9nKCdJbnZhbGlkIHVuaXQgYCN7JHVuaXR9YC4nKTtcbiAgfVxuXG4gIEByZXR1cm4gJHZhbHVlICogbWFwLWdldCgkdW5pdHMsICR1bml0KTtcbn1cblxuLy8vXG4vLy8gVGhpcyBtaXhpbiBhaW1zIGF0IHJlZGVmaW5pbmcgdGhlIGNvbmZpZ3VyYXRpb24ganVzdCBmb3IgdGhlIHNjb3BlIG9mXG4vLy8gdGhlIGNhbGwuIEl0IGlzIGhlbHBmdWwgd2hlbiBoYXZpbmcgYSBjb21wb25lbnQgbmVlZGluZyBhbiBleHRlbmRlZFxuLy8vIGNvbmZpZ3VyYXRpb24gc3VjaCBhcyBjdXN0b20gYnJlYWtwb2ludHMgKHJlZmVycmVkIHRvIGFzIHR3ZWFrcG9pbnRzKVxuLy8vIGZvciBpbnN0YW5jZS5cbi8vL1xuLy8vIEBhdXRob3IgSHVnbyBHaXJhdWRlbFxuLy8vXG4vLy8gQHBhcmFtIHtNYXB9ICR0d2Vha3BvaW50cyBbKCldIC0gTWFwIG9mIHR3ZWFrcG9pbnRzIHRvIGJlIG1lcmdlZCB3aXRoIGAkYnJlYWtwb2ludHNgXG4vLy8gQHBhcmFtIHtNYXB9ICR0d2Vhay1tZWRpYS1leHByZXNzaW9ucyBbKCldIC0gTWFwIG9mIHR3ZWFrZWQgbWVkaWEgZXhwcmVzc2lvbnMgdG8gYmUgbWVyZ2VkIHdpdGggYCRtZWRpYS1leHByZXNzaW9uYFxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIEV4dGVuZCB0aGUgZ2xvYmFsIGJyZWFrcG9pbnRzIHdpdGggYSB0d2Vha3BvaW50XG4vLy8gIEBpbmNsdWRlIG1lZGlhLWNvbnRleHQoKCdjdXN0b20nOiA2NzhweCkpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIEBpbmNsdWRlIG1lZGlhKCc+cGhvbmUnLCAnPD1jdXN0b20nKSB7XG4vLy8gICAgICAgLy8gLi4uXG4vLy8gICAgICB9XG4vLy8gICAgfVxuLy8vICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gRXh0ZW5kIHRoZSBnbG9iYWwgbWVkaWEgZXhwcmVzc2lvbnMgd2l0aCBhIGN1c3RvbSBvbmVcbi8vLyAgQGluY2x1ZGUgbWVkaWEtY29udGV4dCgkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnM6ICgnYWxsJzogJ2FsbCcpKSB7XG4vLy8gICAgLmZvbyB7XG4vLy8gICAgICBAaW5jbHVkZSBtZWRpYSgnYWxsJywgJz5waG9uZScpIHtcbi8vLyAgICAgICAvLyAuLi5cbi8vLyAgICAgIH1cbi8vLyAgICB9XG4vLy8gIH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBFeHRlbmQgYm90aCBjb25maWd1cmF0aW9uIG1hcHNcbi8vLyAgQGluY2x1ZGUgbWVkaWEtY29udGV4dCgoJ2N1c3RvbSc6IDY3OHB4KSwgKCdhbGwnOiAnYWxsJykpIHtcbi8vLyAgICAuZm9vIHtcbi8vLyAgICAgIEBpbmNsdWRlIG1lZGlhKCdhbGwnLCAnPnBob25lJywgJzw9Y3VzdG9tJykge1xuLy8vICAgICAgIC8vIC4uLlxuLy8vICAgICAgfVxuLy8vICAgIH1cbi8vLyAgfVxuLy8vXG5AbWl4aW4gbWVkaWEtY29udGV4dCgkdHdlYWtwb2ludHM6ICgpLCAkdHdlYWstbWVkaWEtZXhwcmVzc2lvbnM6ICgpKSB7XG4gIC8vIFNhdmUgZ2xvYmFsIGNvbmZpZ3VyYXRpb25cbiAgJGdsb2JhbC1icmVha3BvaW50czogJGJyZWFrcG9pbnRzO1xuICAkZ2xvYmFsLW1lZGlhLWV4cHJlc3Npb25zOiAkbWVkaWEtZXhwcmVzc2lvbnM7XG5cbiAgLy8gVXBkYXRlIGdsb2JhbCBjb25maWd1cmF0aW9uXG4gICRicmVha3BvaW50czogbWFwLW1lcmdlKCRicmVha3BvaW50cywgJHR3ZWFrcG9pbnRzKSAhZ2xvYmFsO1xuICAkbWVkaWEtZXhwcmVzc2lvbnM6IG1hcC1tZXJnZSgkbWVkaWEtZXhwcmVzc2lvbnMsICR0d2Vhay1tZWRpYS1leHByZXNzaW9ucykgIWdsb2JhbDtcblxuICBAY29udGVudDtcblxuICAvLyBSZXN0b3JlIGdsb2JhbCBjb25maWd1cmF0aW9uXG4gICRicmVha3BvaW50czogJGdsb2JhbC1icmVha3BvaW50cyAhZ2xvYmFsO1xuICAkbWVkaWEtZXhwcmVzc2lvbnM6ICRnbG9iYWwtbWVkaWEtZXhwcmVzc2lvbnMgIWdsb2JhbDtcbn1cblxuLy8vL1xuLy8vIGluY2x1ZGUtbWVkaWEgcHVibGljIGV4cG9zZWQgQVBJXG4vLy8gQGF1dGhvciBFZHVhcmRvIEJvdWNhc1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy8vXG5cblxuLy8vXG4vLy8gR2VuZXJhdGVzIGEgbWVkaWEgcXVlcnkgYmFzZWQgb24gYSBsaXN0IG9mIGNvbmRpdGlvbnNcbi8vL1xuLy8vIEBwYXJhbSB7QXJnbGlzdH0gICAkY29uZGl0aW9ucyAgLSBNZWRpYSBxdWVyeSBjb25kaXRpb25zXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBhIHNpbmdsZSBzZXQgYnJlYWtwb2ludFxuLy8vICBAaW5jbHVkZSBtZWRpYSgnPnBob25lJykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCB0d28gc2V0IGJyZWFrcG9pbnRzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+cGhvbmUnLCAnPD10YWJsZXQnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBXaXRoIGN1c3RvbSB2YWx1ZXNcbi8vLyAgQGluY2x1ZGUgbWVkaWEoJz49MzU4cHgnLCAnPDg1MHB4JykgeyB9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gV2l0aCBzZXQgYnJlYWtwb2ludHMgd2l0aCBjdXN0b20gdmFsdWVzXG4vLy8gIEBpbmNsdWRlIG1lZGlhKCc+ZGVza3RvcCcsICc8PTEzNTBweCcpIHsgfVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFdpdGggYSBzdGF0aWMgZXhwcmVzc2lvblxuLy8vICBAaW5jbHVkZSBtZWRpYSgncmV0aW5hMngnKSB7IH1cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBNaXhpbmcgZXZlcnl0aGluZ1xuLy8vICBAaW5jbHVkZSBtZWRpYSgnPj0zNTBweCcsICc8dGFibGV0JywgJ3JldGluYTN4JykgeyB9XG4vLy9cbkBtaXhpbiBtZWRpYSgkY29uZGl0aW9ucy4uLikge1xuICAvLyBzY3NzLWxpbnQ6ZGlzYWJsZSBTcGFjZUFyb3VuZE9wZXJhdG9yXG4gIEBpZiAoJGltLW1lZGlhLXN1cHBvcnQgYW5kIGxlbmd0aCgkY29uZGl0aW9ucykgPT0gMCkgb3JcbiAgICAgIChub3QgJGltLW1lZGlhLXN1cHBvcnQgYW5kIGltLWludGVyY2VwdHMtc3RhdGljLWJyZWFrcG9pbnQoJGNvbmRpdGlvbnMuLi4pKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH0gQGVsc2UgaWYgKCRpbS1tZWRpYS1zdXBwb3J0IGFuZCBsZW5ndGgoJGNvbmRpdGlvbnMpID4gMCkge1xuICAgIEBtZWRpYSAje3VucXVvdGUocGFyc2UtZXhwcmVzc2lvbihudGgoJGNvbmRpdGlvbnMsIDEpKSl9IHtcbiAgICAgIC8vIFJlY3Vyc2l2ZSBjYWxsXG4gICAgICBAaW5jbHVkZSBtZWRpYShzbGljZSgkY29uZGl0aW9ucywgMikuLi4pIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIqIHsgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5cbmh0bWwge1xuICBmb250LXNpemU6ICRiYXNlICogMS4xO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJnO1xufVxuXG5cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LWZhbWlseTogJ09wZW4gU2FucycsIC1hcHBsZS1zeXN0ZW0sIFwiLlNGTlNUZXh0LVJlZ3VsYXJcIiwgXCJTYW4gRnJhbmNpc2NvXCIsIFwiUm9ib3RvXCIsIFwiU2Vnb2UgVUlcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkx1Y2lkYSBHcmFuZGVcIiwgc2Fucy1zZXJpZjtcbiAgY29sb3I6ICR3aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJnO1xuICBtYXJnaW46ICRkbXJnIDA7XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIEBpbmNsdWRlIG1lZGlhKFwiPD1tZFwiKSB7XG4gICAgZm9udC1zaXplOiAkYmFzZSAqIDEuMTU7XG4gICAgbWFyZ2luLXRvcDogMDtcblxuICAgIGgxIHsgZm9udC1zaXplOiAkYmFzZSAqIDIuNDsgfVxuICAgIGgyIHsgZm9udC1zaXplOiAkYmFzZSAqIDI7IH1cbiAgICBoMyB7IGZvbnQtc2l6ZTogJGJhc2UgKiAxLjY7IH1cblxuXG5cbiAgfVxufVxuXG5cbi5jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogJG1pZC13aWR0aDtcbiAgbWFyZ2luOiAwIGF1dG87XG5cbiAgJi5mdWxsYmxvY2sgeyBkaXNwbGF5OiBibG9jazsgfVxufVxuXG4vLyBieSBkZWZhdWx0LCBvdXIgbWFqb3IgbGVmdCBhbmQgcmlnaHRcbi8vIGNvbHVtbnMgc2hvdWxkIGJlIGhhbGYgd2lkdGggYW5kIGNvbGxhcHNlXG4vLyB0byBmdWxsIHdpZHRoIGluIG1vYmlsZVxuLmFscGhhIHtcbiAgcGFkZGluZy1yaWdodDogJG1yZztcbiAgd2lkdGg6IDUwJTtcbn1cblxuLmJldGEge1xuICBwYWRkaW5nLWxlZnQ6ICRtcmc7XG4gIHdpZHRoOiA1MCU7XG59XG5cbkBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuICAuY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cblxuICAuYWxwaGEsXG4gIC5iZXRhIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG59XG5cbi5mdWxsd2lkdGggeyB3aWR0aDogMTAwJTsgfVxuXG5cbi5tYXJrIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAyMCU7XG4gIGhlaWdodDogJGRtcmcgKiAxLjU7XG4gIHdpZHRoOiAkZG1yZyAqIDg7XG5cbiAgLmJhbmQge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmbG9hdDogbGVmdDtcbiAgICBjbGVhcjogbm9uZTtcbiAgICB3aWR0aDogJGRtcmcgKiAyO1xuICAgIGhlaWdodDogJGRtcmcgKiAxLjU7XG4gIH1cblxuICAuc29jaGFkZXYtZ3JheSB7IGJhY2tncm91bmQtY29sb3I6ICRzb2NoYWRldi1ncmF5OyB9XG4gIC5zb2NoYWRldi1ibHVlIHsgYmFja2dyb3VuZC1jb2xvcjogJHNvY2hhZGV2LWJsdWU7IH1cbiAgLnNvY2hhZGV2LXJlZCB7IGJhY2tncm91bmQtY29sb3I6ICRzb2NoYWRldi1yZWQ7IH1cbiAgLnNvY2hhZGV2LWdyZWVuIHsgYmFja2dyb3VuZC1jb2xvcjogJHNvY2hhZGV2LWdyZWVuOyB9XG5cbiAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgcmlnaHQ6ICRkbXJnLzI7XG4gICAgaGVpZ2h0OiAkZG1yZyoxLjI1O1xuICAgIHdpZHRoOiAkZG1yZyAqIDY7XG5cbiAgICAuYmFuZCB7XG4gICAgICB3aWR0aDogJGRtcmcqMS41O1xuICAgICAgaGVpZ2h0OiAkZG1yZyoxLjI1O1xuICAgIH1cbiAgfVxuXG4gIGhlYWRlciAmIHtcbiAgICBoZWlnaHQ6ICRobXJnICogNjtcbiAgICB3aWR0aDogJGhtcmcgKiA2O1xuXG4gICAgLmJhbmQge1xuICAgICAgd2lkdGg6ICRobXJnICogMS41O1xuICAgICAgaGVpZ2h0OiAkaG1yZyAqIDY7XG4gICAgfVxuICB9XG59XG5cblxuLy8gcGVyc2lzdGVudCBoZWFkZXJcbmhlYWRlciB7XG4gICRoZWlnaHQ6ICgkbXJnICogMyk7XG5cbiAgQGluY2x1ZGUgY2xlYXJmaXgoKTtcbiAgYmFja2dyb3VuZDogcmdiYSgkYmxhY2ssIDAuNyk7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgei1pbmRleDogMTAwO1xuXG4gICYuc3RyaXBlIHsgcGFkZGluZzogJG1yZzsgfVxuXG4gIC5mdWxsd2lkdGgge1xuICAgIGhlaWdodDogJGhlaWdodDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cblxuICBhIHtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgICY6aG92ZXIgeyBjb2xvcjogJHdoaXRlOyB9XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAkaGVpZ2h0O1xuICAgIGxpbmUtaGVpZ2h0OiAkaGVpZ2h0O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIHdpZHRoOiBhdXRvO1xuXG4gICAgJi5icmFuZCB7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgZm9udC1mYW1pbHk6ICdVYnVudHUnLCBzYW5zLXNlcmlmO1xuICAgICAgZm9udC1zaXplOiAkYmFzZSAqIDIuNjtcbiAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICB3aWR0aDogODglO1xuXG4gICAgICBAaW5jbHVkZSBtZWRpYShcIjw9bWRcIikge1xuICAgICAgICBmb250LXNpemU6ICRiYXNlICogMi40O1xuICAgICAgICBsZWZ0OiAkZG1yZy8yO1xuICAgICAgfVxuICAgIH1cblxuICAgICYubG9nbyB7XG4gICAgICByaWdodDogMDtcbiAgICB9XG4gIH1cblxuICBzcGFuLnRhZ2xpbmUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtc2l6ZTogJGJhc2U7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICBsaW5lLWhlaWdodDogJGhlaWdodDtcbiAgICBtYXJnaW46IDAgMCAwIDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtaW5kZW50OiAxMCU7XG4gICAgdGV4dC10cmFuc2Zvcm06IGxvd2VyY2FzZTtcblxuICAgIGJvZHkuZnJvbnQgJiB7IHRleHQtaW5kZW50OiAxOCU7IH1cblxuICAgIEBpbmNsdWRlIG1lZGlhKFwiPD1tZFwiKSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgfVxufVxuXG5cbi5zdHJpcGUge1xuICBwYWRkaW5nOiAkZG1yZztcbiAgd2lkdGg6IDEwMCU7XG5cbiAgJi5ibHVlIHtcbiAgICBiYWNrZ3JvdW5kOiAkYmx1ZTtcbiAgICBociB7IGJvcmRlci1jb2xvcjogbGlnaHRlbigkYmx1ZSwgNSUpOyB9XG4gIH1cblxuICAmLnJlZCB7XG4gICAgYmFja2dyb3VuZDogJHJlZDtcbiAgICBociB7IGJvcmRlci1jb2xvcjogbGlnaHRlbigkcmVkLCA1JSk7IH1cbiAgfVxuXG4gICYuZ3JlZW4ge1xuICAgIGJhY2tncm91bmQ6ICRncmVlbjtcbiAgICBociB7IGJvcmRlci1jb2xvcjogbGlnaHRlbigkZ3JlZW4sIDUlKTsgfVxuICB9XG5cbiAgJi5ncmF5IHtcbiAgICBiYWNrZ3JvdW5kOiAkZ3JheS1kYXJrO1xuICAgIGhyIHsgYm9yZGVyLWNvbG9yOiBsaWdodGVuKCRncmF5LWRhcmssIDUlKTsgfVxuICB9XG5cbiAgJi5kYXJrZ3JheSB7XG4gICAgYmFja2dyb3VuZDogJGdyYXktZGFya2VyO1xuICAgIGhyIHsgYm9yZGVyLWNvbG9yOiBsaWdodGVuKCRncmF5LWRhcmtlciwgNSUpOyB9XG4gIH1cbn1cblxuLnRpdGxlIHtcbiAgbWFyZ2luLXRvcDogJGRtcmcqMS4yNTtcbiAgQGluY2x1ZGUgbWVkaWEoJz5tZCcpIHsgbWFyZ2luLXRvcDogMDsgfVxufVxuXG5cbi5pbnRybyB7XG4gIHBhZGRpbmctYm90dG9tOiAkZG1yZyAqIDM7XG5cbiAgLmFscGhhIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAkbXJnICogNTtcblxuICAgIGhyIHsgbWFyZ2luLXRvcDogMDsgfVxuICAgIHA6bGFzdC1jaGlsZCB7IG1hcmdpbi1ib3R0b206ICRkbXJnO31cbiAgfVxuXG4gIC5iZXRhIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgPiBpbWcge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogJG1yZztcbiAgICAgIHRvcDogLTI3MHB4O1xuICAgIH1cbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuICAgIHBhZGRpbmctYm90dG9tOiAkZG1yZztcblxuICAgIC5hbHBoYSB7IHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgICAuYmV0YSB7XG4gICAgICA+IGltZyB7IGRpc3BsYXk6IG5vbmU7IH1cbiAgICB9XG4gIH1cbn1cblxuXG4uaWNvbi1zdHJpcGUge1xuICBwYWRkaW5nOiAwICRkbXJnO1xuXG4gIEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuICAgIC5iZXRhLFxuICAgIC5hbHBoYSB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogJGRtcmcqMS43O1xuXG4gICAgICBoMiB7IHBhZGRpbmctdG9wOiAkZG1yZyoxLjc7IH1cbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYSgnPm1kJykge1xuICAgIHBhZGRpbmc6IDA7XG5cbiAgICAuaWNvbiB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4gICAgLmFscGhhIHtcbiAgICAgIHdpZHRoOiAyOCU7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgcGFkZGluZy1sZWZ0OiAkbXJnO1xuICAgIH1cblxuICAgIC5iZXRhIHtcbiAgICAgIHdpZHRoOiA3MiU7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgcGFkZGluZy1yaWdodDogJGRtcmcqMjtcbiAgICAgIHBhZGRpbmctdG9wOiAwO1xuICAgICAgcGFkZGluZy1ib3R0b206ICRkbXJnKjM7XG5cbiAgICAgIGgyIHsgcGFkZGluZy10b3A6ICRkbXJnKjM7IH1cbiAgICB9XG5cbiAgICAmOm50aC1jaGlsZChldmVuKSB7XG4gICAgICAuYWxwaGEge1xuICAgICAgICB3aWR0aDogNzIlO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICRkbXJnKjI7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAkZG1yZyozO1xuXG4gICAgICAgIGgyIHsgcGFkZGluZy10b3A6ICRkbXJnKjM7IH1cbiAgICAgIH1cblxuICAgICAgLmJldGEge1xuICAgICAgICB3aWR0aDogMjglO1xuICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogJG1yZztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLm92ZXJmbG93IC5pY29uIHsgdG9wOiAkbXJnICogMS4yNTsgfVxuXG4udHJpYWdlIC5pY29uIHsgdG9wOiAkZG1yZyAqIDIuMTU7IH1cblxuLnByb2JsZW0tc29sdmluZyAuaWNvbiB7XG4gIGxlZnQ6ICRtcmcgKiAxLjU7XG4gIGZvbnQtc2l6ZTogNy41ZW0gIWltcG9ydGFudDtcbn1cblxuXG4ucHJvamVjdHMge1xuICBwYWRkaW5nLXRvcDogMDtcbiAgcGFkZGluZy1ib3R0b206ICRkbXJnKjM7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAjcHJvamVjdHMge1xuICAgIHBhZGRpbmctdG9wOiAkZG1yZyozO1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgcGFkZGluZy1ib3R0b206ICRkbXJnKjI7XG5cbiAgICAjcHJvamVjdHMge1xuICAgICAgcGFkZGluZy10b3A6ICRkbXJnKjI7XG4gICAgfVxuICB9XG59XG5cblxuLmNvbnRhY3QtdXMge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgJGdyYXk7XG4gIHBhZGRpbmctYm90dG9tOiAkZG1yZztcblxuICBoMiB7IHBhZGRpbmctdG9wOiAkZG1yZyoyOyB9XG5cbiAgLmNvbnRhY3QtZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAuZm9ybS1jb250YWluZXIge1xuICAgIHdpZHRoOiA2NSU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcblxuICAgIGgyIHsgcGFkZGluZy10b3A6ICRkbXJnOyB9XG5cbiAgICAuZm9ybS1jb250YWluZXIgeyB3aWR0aDogMTAwJTsgfVxuICB9XG59XG5cblxuLnRlYW0ge1xuICBwYWRkaW5nLXRvcDogMDtcbiAgcGFkZGluZy1ib3R0b206IDA7XG5cbiAgLmV4ZWMtc3VtbWFyeSB7IHBhZGRpbmctYm90dG9tOiAwOyB9XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz5tZCcpIHtcbiAgICAudGVhbS1hYm91dCB7XG4gICAgICBwYWRkaW5nOiAkZG1yZyAwO1xuXG4gICAgICAuaWNvbiB7IHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4gICAgICAuYWxwaGEge1xuICAgICAgICB3aWR0aDogMjglO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICRtcmc7XG4gICAgICB9XG5cbiAgICAgIC5iZXRhIHtcbiAgICAgICAgd2lkdGg6IDcyJTtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAkZG1yZyoyO1xuICAgICAgfVxuICAgIH1cblxuICAgIC5leGVjLXN1bW1hcnkgeyBwYWRkaW5nLWJvdHRvbTogJGRtcmc7IH1cbiAgfVxufVxuXG5cbmZvb3RlciB7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAkZ3JheTtcblxuICBib2R5LmZyb250ICYge1xuICAgIGJvcmRlcjogMDtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgfVxuXG4gIHAge1xuICAgIGNvbG9yOiAjNjY2O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjc7XG4gIH1cbn1cblxuXG4vLyBGbG91cmlzaCBlbGVtZW50cy5cbmltZy5sb2dvIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAoJG1yZyAqIDMpO1xuICBoZWlnaHQ6ICgkbXJnICogMyk7XG5cbiAgaDEgJiB7IGZsb2F0OiByaWdodDsgfVxufVxuXG4vLyAuc3ByaXRlIHtcbi8vICAgZGlzcGxheTogYmxvY2s7XG4vLyAgIGZsb2F0OiBsZWZ0O1xuLy8gICBtYXJnaW46IDAgJGRtcmcgJGRtcmcgMDtcbi8vIH1cbiIsIi8vIHNhc3Mgc2V0dGluZ3MgYW5kIHZhcmlhYmxlc1xuXG4vLyBicmVha3BvaW50cyBtYXAgZm9yIGluY2x1ZGUtbWVkaWEuXG4kYnJlYWtwb2ludHM6IChzbTogNDkwcHgsIG1kOiA3NjhweCwgbGc6IDEwMjRweCk7XG4kbWlkLXdpZHRoOiA3NjhweCAhZ2xvYmFsO1xuJG1heC13aWR0aDogMTAyNHB4ICFnbG9iYWw7XG5cbi8vIGNvbG9yc1xuJGJsYWNrOiAjMDAwO1xuJHdoaXRlOiAjZmZmO1xuJGdyYXktZGFya2VyOiAjMmIyYjJiO1xuJGdyYXktZGFyazogIzMzMztcbiRncmF5LTQ6ICM0NDQ7XG4kZ3JheTogIzY2NjtcbiRncmF5LWxpZ2h0OiAjYmJiO1xuJGdyYXktbGlnaHRlcjogI2U0ZTRlNDtcblxuJGJsdWU6ICMyM2IzZDc7XG4kcmVkOiAjYjIwYjIzO1xuJGdyZWVuOiAjN2Y5NzMxO1xuJG9yYW5nZTogbGlnaHRlbigjZjkzLCAxMCUpO1xuJHB1cnBsZTogIzZmNTQ5OTtcbiR0YW90aS1vcmFuZ2U6ICNkYTJmMjQ7XG5cbiRzb2NoYWRldi1ncmF5OiAjMWMxYzFjO1xuJHNvY2hhZGV2LWJsdWU6ICMyM2IzZDc7XG4kc29jaGFkZXYtcmVkOiAjYjIwYjIzO1xuJHNvY2hhZGV2LWdyZWVuOiAjN2Y5NzMxO1xuXG4vLyBsYXlvdXQgdmFyaWFibGVzXG4kYmFzZTogMTZweDsgLy8gb3VyIGJhc2UgZm9udC1zaXplO1xuJG1yZzogMTJweDsgLy8gbW9zdCBwYWRkaW5nIGFuZCBtYXJnaW5zIHNob3VsZCBiZSBhIG11bHRpcGxlIG9mICRtcmdcbiRobXJnOiAoJG1yZyAqIDAuNTApO1xuJGRtcmc6ICgkbXJnICogMi4wKTtcbiRxbXJnOiAoJG1yZyAqIDAuMjUpO1xuXG4kdGV4dDogJGdyYXktbGlnaHRlcjtcbiRiZzogJGdyYXktZGFya2VyO1xuXG4vLyBmbG91cmlzaGVzXG4kYm9yZGVyLXJhZGl1czogM3B4O1xuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuXG4vLy8gR2VvcmdpYSBmb250IHN0YWNrLlxuLy8vXG4vLy8gQHR5cGUgTGlzdFxuXG4kZ2VvcmdpYTogXCJHZW9yZ2lhXCIsIFwiQ2FtYnJpYVwiLCBcIlRpbWVzIE5ldyBSb21hblwiLCBcIlRpbWVzXCIsIHNlcmlmO1xuXG4vLy8gSGVsdmV0aWNhIGZvbnQgc3RhY2suXG4vLy9cbi8vLyBAdHlwZSBMaXN0XG5cbiRoZWx2ZXRpY2E6IFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJIZWx2ZXRpY2FcIiwgXCJSb2JvdG9cIiwgXCJBcmlhbFwiLCBzYW5zLXNlcmlmO1xuXG4vLy8gTHVjaWRhIEdyYW5kZSBmb250IHN0YWNrLlxuLy8vXG4vLy8gQHR5cGUgTGlzdFxuXG4kbHVjaWRhLWdyYW5kZTogXCJMdWNpZGEgR3JhbmRlXCIsIFwiVGFob21hXCIsIFwiVmVyZGFuYVwiLCBcIkFyaWFsXCIsIHNhbnMtc2VyaWY7XG5cbi8vLyBNb25vc3BhY2UgZm9udCBzdGFjay5cbi8vL1xuLy8vIEB0eXBlIExpc3RcblxuJG1vbm9zcGFjZTogXCJCaXRzdHJlYW0gVmVyYSBTYW5zIE1vbm9cIiwgXCJDb25zb2xhc1wiLCBcIkNvdXJpZXJcIiwgbW9ub3NwYWNlO1xuXG4vLy8gVmVyZGFuYSBmb250IHN0YWNrLlxuLy8vXG4vLy8gQHR5cGUgTGlzdFxuXG4kdmVyZGFuYTogXCJWZXJkYW5hXCIsIFwiR2VuZXZhXCIsIHNhbnMtc2VyaWY7XG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vLyBBIG1peGluIGZvciBnZW5lcmF0aW5nIHZlbmRvciBwcmVmaXhlcyBvbiBub24tc3RhbmRhcmRpemVkIHByb3BlcnRpZXMuXG4vLy9cbi8vLyBAcGFyYW0ge1N0cmluZ30gJHByb3BlcnR5XG4vLy8gICBQcm9wZXJ0eSB0byBwcmVmaXhcbi8vL1xuLy8vIEBwYXJhbSB7Kn0gJHZhbHVlXG4vLy8gICBWYWx1ZSB0byB1c2Vcbi8vL1xuLy8vIEBwYXJhbSB7TGlzdH0gJHByZWZpeGVzXG4vLy8gICBQcmVmaXhlcyB0byBkZWZpbmVcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBAaW5jbHVkZSBwcmVmaXhlcihib3JkZXItcmFkaXVzLCAxMHB4LCB3ZWJraXQgbXMgc3BlYyk7XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3MgLSBDU1MgT3V0cHV0XG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMTBweDtcbi8vLyAgICAgLW1vei1ib3JkZXItcmFkaXVzOiAxMHB4O1xuLy8vICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuLy8vICAgfVxuLy8vXG4vLy8gQHJlcXVpcmUge3ZhcmlhYmxlfSAkcHJlZml4LWZvci13ZWJraXRcbi8vLyBAcmVxdWlyZSB7dmFyaWFibGV9ICRwcmVmaXgtZm9yLW1vemlsbGFcbi8vLyBAcmVxdWlyZSB7dmFyaWFibGV9ICRwcmVmaXgtZm9yLW1pY3Jvc29mdFxuLy8vIEByZXF1aXJlIHt2YXJpYWJsZX0gJHByZWZpeC1mb3Itb3BlcmFcbi8vLyBAcmVxdWlyZSB7dmFyaWFibGV9ICRwcmVmaXgtZm9yLXNwZWNcblxuQG1peGluIHByZWZpeGVyKCRwcm9wZXJ0eSwgJHZhbHVlLCAkcHJlZml4ZXMpIHtcbiAgQGVhY2ggJHByZWZpeCBpbiAkcHJlZml4ZXMge1xuICAgIEBpZiAkcHJlZml4ID09IHdlYmtpdCB7XG4gICAgICBAaWYgJHByZWZpeC1mb3Itd2Via2l0IHtcbiAgICAgICAgLXdlYmtpdC0jeyRwcm9wZXJ0eX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwcmVmaXggPT0gbW96IHtcbiAgICAgIEBpZiAkcHJlZml4LWZvci1tb3ppbGxhIHtcbiAgICAgICAgLW1vei0jeyRwcm9wZXJ0eX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwcmVmaXggPT0gbXMge1xuICAgICAgQGlmICRwcmVmaXgtZm9yLW1pY3Jvc29mdCB7XG4gICAgICAgIC1tcy0jeyRwcm9wZXJ0eX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwcmVmaXggPT0gbyB7XG4gICAgICBAaWYgJHByZWZpeC1mb3Itb3BlcmEge1xuICAgICAgICAtby0jeyRwcm9wZXJ0eX06ICR2YWx1ZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmICRwcmVmaXggPT0gc3BlYyB7XG4gICAgICBAaWYgJHByZWZpeC1mb3Itc3BlYyB7XG4gICAgICAgICN7JHByb3BlcnR5fTogJHZhbHVlO1xuICAgICAgfVxuICAgIH0gQGVsc2UgIHtcbiAgICAgIEB3YXJuIFwiVW5yZWNvZ25pemVkIHByZWZpeDogI3skcHJlZml4fVwiO1xuICAgIH1cbiAgfVxufVxuXG5AbWl4aW4gZGlzYWJsZS1wcmVmaXgtZm9yLWFsbCgpIHtcbiAgJHByZWZpeC1mb3Itd2Via2l0OiAgICBmYWxzZSAhZ2xvYmFsO1xuICAkcHJlZml4LWZvci1tb3ppbGxhOiAgIGZhbHNlICFnbG9iYWw7XG4gICRwcmVmaXgtZm9yLW1pY3Jvc29mdDogZmFsc2UgIWdsb2JhbDtcbiAgJHByZWZpeC1mb3Itb3BlcmE6ICAgICBmYWxzZSAhZ2xvYmFsO1xuICAkcHJlZml4LWZvci1zcGVjOiAgICAgIGZhbHNlICFnbG9iYWw7XG59XG4iLCJcbi5iaW9zIHtcbiAgcGFkZGluZy1ib3R0b206ICRkbXJnKjQ7XG5cbiAgLmNvbnRhaW5lciB7XG4gICAgcGFkZGluZzogJGRtcmcgMDtcbiAgICBhbGlnbi1pdGVtczogdG9wO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICB9XG5cbiAgLmFscGhhIHsgd2lkdGg6IDE4JTsgfVxuICAuYmV0YSB7IHdpZHRoOiA4MiU7IH1cblxuICBwIHsgQGV4dGVuZCAldGV4dC1kZW5zZTsgfVxuXG4gIC5hdmF0YXIge1xuICAgIGJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzICogMjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW46IDAgMCAkbXJnIDA7XG4gIH1cblxuICB1bC5zb2NpYWwge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG5cbiAgICBsaSB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbjogMCAkbXJnIDAgMDtcbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYSgnPD1tZCcpIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcGFkZGluZy10b3A6ICRkbXJnKjEuNTtcbiAgICB9XG5cbiAgICAuYWxwaGEge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuXG4gICAgLmJldGEge1xuICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgIGgzIHsgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgfVxuXG4gICAgLmF2YXRhciB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtYXJnaW46ICRtcmc7XG4gICAgICB3aWR0aDogMTQ0cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcbiAgICB9XG4gIH1cbn1cbiIsIkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ3NvY2hhZGV2JztcbiAgc3JjOiB1cmwoJy4uL2ZvbnRzL3NvY2hhZGV2L3NvY2hhZGV2LmVvdD8zMjM0NTY0NycpO1xuICBzcmM6IHVybCgnLi4vZm9udHMvc29jaGFkZXYvc29jaGFkZXYuZW90PzMyMzQ1NjQ3I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgIHVybCgnLi4vZm9udHMvc29jaGFkZXYvc29jaGFkZXYud29mZj8zMjM0NTY0NycpIGZvcm1hdCgnd29mZicpLFxuICAgICAgIHVybCgnLi4vZm9udHMvc29jaGFkZXYvc29jaGFkZXYudHRmPzMyMzQ1NjQ3JykgZm9ybWF0KCd0cnVldHlwZScpLFxuICAgICAgIHVybCgnLi4vZm9udHMvc29jaGFkZXYvc29jaGFkZXYuc3ZnPzMyMzQ1NjQ3I3NvY2hhZGV2JykgZm9ybWF0KCdzdmcnKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuLyogQ2hyb21lIGhhY2s6IFNWRyBpcyByZW5kZXJlZCBtb3JlIHNtb290aCBpbiBXaW5kb3p6ZS4gMTAwJSBtYWdpYywgdW5jb21tZW50IGlmIHlvdSBuZWVkIGl0LiAqL1xuLyogTm90ZSwgdGhhdCB3aWxsIGJyZWFrIGhpbnRpbmchIEluIG90aGVyIE9TLWVzIGZvbnQgd2lsbCBiZSBub3QgYXMgc2hhcnAgYXMgaXQgY291bGQgYmUgKi9cbi8qXG5AbWVkaWEgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOjApIHtcbiAgQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdzb2NoYWRldic7XG4gICAgc3JjOiB1cmwoJy4uL2ZvbnQvc29jaGFkZXYuc3ZnPzMyMzQ1NjQ3I3NvY2hhZGV2JykgZm9ybWF0KCdzdmcnKTtcbiAgfVxufVxuKi9cblxuLy8gbGFyZ2VyIGZhLXggc3VwcG9ydFxuLmljb24uaWNvbi0yeCB7IGZvbnQtc2l6ZTogMmVtOyB9XG4uaWNvbi5pY29uLTN4IHsgZm9udC1zaXplOiAzZW07IH1cbi5pY29uLmljb24tNHggeyBmb250LXNpemU6IDRlbTsgfVxuLmljb24uaWNvbi01eCB7IGZvbnQtc2l6ZTogNWVtOyB9XG4uaWNvbi5pY29uLTZ4IHsgZm9udC1zaXplOiA2ZW07IH1cbi5pY29uLmljb24tN3ggeyBmb250LXNpemU6IDdlbTsgfVxuLmljb24uaWNvbi04eCB7IGZvbnQtc2l6ZTogOGVtOyB9XG4uaWNvbi5pY29uLTl4IHsgZm9udC1zaXplOiA5ZW07IH1cbi5pY29uLmljb24tMTB4IHsgZm9udC1zaXplOiAxMGVtOyB9XG4uaWNvbi5pY29uLTExeCB7IGZvbnQtc2l6ZTogMTFlbTsgfVxuLmljb24uaWNvbi0xMnggeyBmb250LXNpemU6IDEyZW07IH1cblxuLmljb24tc3BpbiB7XG4gIC13ZWJraXQtYW5pbWF0aW9uOiBpY29uLXNwaW4gMnMgaW5maW5pdGUgbGluZWFyO1xuICBhbmltYXRpb246IGljb24tc3BpbiAycyBpbmZpbml0ZSBsaW5lYXI7XG59XG5cbi5pY29uLXB1bHNlIHtcbiAgLXdlYmtpdC1hbmltYXRpb246IGljb24tc3BpbiAxcyBpbmZpbml0ZSBzdGVwcyg4KTtcbiAgYW5pbWF0aW9uOiBpY29uLXNwaW4gMXMgaW5maW5pdGUgc3RlcHMoOCk7XG59XG5cbkBrZXlmcmFtZXMgaWNvbi1zcGluIHtcbiAgMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gIH1cbiAgMTAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNTlkZWcpO1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDM1OWRlZyk7XG4gIH1cbn1cblxuLmljb24tcm90YXRlLTkwIHtcbiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuQmFzaWNJbWFnZShyb3RhdGlvbj0xKTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7XG4gIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbn1cblxuLmljb24tcm90YXRlLTE4MCB7XG4gIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkJhc2ljSW1hZ2Uocm90YXRpb249Mik7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG59XG5cbi5pY29uLXJvdGF0ZS0yNzAge1xuICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5CYXNpY0ltYWdlKHJvdGF0aW9uPTMpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDI3MGRlZyk7XG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgyNzBkZWcpO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgyNzBkZWcpO1xufVxuXG4uaWNvbi1mbGlwLWhvcml6b250YWwge1xuICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5CYXNpY0ltYWdlKHJvdGF0aW9uPTAsIG1pcnJvcj0xKTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKC0xLCAxKTtcbiAgLW1zLXRyYW5zZm9ybTogc2NhbGUoLTEsIDEpO1xuICB0cmFuc2Zvcm06IHNjYWxlKC0xLCAxKTtcbn1cblxuLmljb24tZmxpcC12ZXJ0aWNhbCB7XG4gIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkJhc2ljSW1hZ2Uocm90YXRpb249MiwgbWlycm9yPTEpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSwgLTEpO1xuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxLCAtMSk7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSwgLTEpO1xufVxuXG46cm9vdCAuZmEtcm90YXRlLTkwLFxuOnJvb3QgLmZhLXJvdGF0ZS0xODAsXG46cm9vdCAuZmEtcm90YXRlLTI3MCxcbjpyb290IC5mYS1mbGlwLWhvcml6b250YWwsXG46cm9vdCAuZmEtZmxpcC12ZXJ0aWNhbCB7XG4gIGZpbHRlcjogbm9uZTtcbn1cblxuLmljb24ge1xuICBmb250LWZhbWlseTogXCJzb2NoYWRldlwiO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIHNwZWFrOiBub25lO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDtcbiAgZm9udC12YXJpYW50OiBub3JtYWw7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBsaW5lLWhlaWdodDogMTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDFlbTtcbiAgd2lkdGg6IDFlbTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG59XG5cbi5pY29uLWNoYXQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTgwMCc7IH0gLyogJ+6ggCcgKi9cbi5pY29uLWNvbW1lbnQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTgwMSc7IH0gLyogJ+6ggScgKi9cbi5pY29uLXVzZXJzOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MDInOyB9IC8qICfuoIInICovXG4uaWNvbi1sZXR0ZXItYTpiZWZvcmUgeyBjb250ZW50OiAnXFxlODAzJzsgfSAvKiAn7qCDJyAqL1xuLmljb24tdXNlcjpiZWZvcmUgeyBjb250ZW50OiAnXFxlODA0JzsgfSAvKiAn7qCEJyAqL1xuLmljb24taGVhcnQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTgwNSc7IH0gLyogJ+6ghScgKi9cbi5pY29uLWRydXBhbDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODA2JzsgfSAvKiAn7qCGJyAqL1xuLmljb24tZmFjZWJvb2stc3F1YXJlZDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODA3JzsgfSAvKiAn7qCHJyAqL1xuLmljb24tZ2l0aHViLWNpcmNsZWQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTgwOCc7IH0gLyogJ+6giCcgKi9cbi5pY29uLWh0bWw1OmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MDknOyB9IC8qICfuoIknICovXG4uaWNvbi1pbnN0YWdyYW06YmVmb3JlIHsgY29udGVudDogJ1xcZTgwYSc7IH0gLyogJ+6giicgKi9cbi5pY29uLWxpbmtlZGluLXNxdWFyZWQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTgwYic7IH0gLyogJ+6giycgKi9cbi5pY29uLXlvdXR1YmUtcGxheTpiZWZvcmUgeyBjb250ZW50OiAnXFxlODBjJzsgfSAvKiAn7qCMJyAqL1xuLmljb24tdmltZW8tc3F1YXJlZDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODBkJzsgfSAvKiAn7qCNJyAqL1xuLmljb24tdHdpdHRlci1zcXVhcmVkOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MGUnOyB9IC8qICfuoI4nICovXG4uaWNvbi1zbGFjazpiZWZvcmUgeyBjb250ZW50OiAnXFxlODBmJzsgfSAvKiAn7qCPJyAqL1xuLmljb24tc3RhY2tvdmVyZmxvdzpiZWZvcmUgeyBjb250ZW50OiAnXFxlODEwJzsgfSAvKiAn7qCQJyAqL1xuLmljb24tbGludXg6YmVmb3JlIHsgY29udGVudDogJ1xcZTgxMSc7IH0gLyogJ+6gkScgKi9cbi5pY29uLWdwbHVzLXNxdWFyZWQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTgxMic7IH0gLyogJ+6gkicgKi9cbi5pY29uLWFwcGxlOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MTMnOyB9IC8qICfuoJMnICovXG4uaWNvbi1hbmRyb2lkOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MTQnOyB9IC8qICfuoJQnICovXG4uaWNvbi1jc3MzOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MTUnOyB9IC8qICfuoJUnICovXG4uaWNvbi1naXQtc3F1YXJlZDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODE2JzsgfSAvKiAn7qCWJyAqL1xuLmljb24tZ2F1Z2U6YmVmb3JlIHsgY29udGVudDogJ1xcZTgxNyc7IH0gLyogJ+6glycgKi9cbi5pY29uLWNoYXJ0LWJhcjpiZWZvcmUgeyBjb250ZW50OiAnXFxlODE4JzsgfSAvKiAn7qCYJyAqL1xuLmljb24tY2hhcnQtYXJlYTpiZWZvcmUgeyBjb250ZW50OiAnXFxlODE5JzsgfSAvKiAn7qCZJyAqL1xuLmljb24tY2hhcnQtcGllOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MWEnOyB9IC8qICfuoJonICovXG4uaWNvbi1jaGFydC1saW5lOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MWInOyB9IC8qICfuoJsnICovXG4uaWNvbi10aWNrZXQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTgxYyc7IH0gLyogJ+6gnCcgKi9cbi5pY29uLXJvY2tldDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODFkJzsgfSAvKiAn7qCdJyAqL1xuLmljb24tYnVnOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MWUnOyB9IC8qICfuoJ4nICovXG4uaWNvbi1jZXJ0aWZpY2F0ZTpiZWZvcmUgeyBjb250ZW50OiAnXFxlODFmJzsgfSAvKiAn7qCfJyAqL1xuLmljb24tYmVha2VyOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MjAnOyB9IC8qICfuoKAnICovXG4uaWNvbi1tYWdpYzpiZWZvcmUgeyBjb250ZW50OiAnXFxlODIxJzsgfSAvKiAn7qChJyAqL1xuLmljb24tdHJ1Y2s6YmVmb3JlIHsgY29udGVudDogJ1xcZTgyMic7IH0gLyogJ+6goicgKi9cbi5pY29uLW1lZGtpdDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODIzJzsgfSAvKiAn7qCjJyAqL1xuLmljb24tYW1idWxhbmNlOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MjQnOyB9IC8qICfuoKQnICovXG4uaWNvbi1ib21iOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MjUnOyB9IC8qICfuoKUnICovXG4uaWNvbi1zaGllbGQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTgyNic7IH0gLyogJ+6gpicgKi9cbi5pY29uLWhlYXJ0YmVhdDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODI3JzsgfSAvKiAn7qCnJyAqL1xuLmljb24tdGludDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODI4JzsgfSAvKiAn7qCoJyAqL1xuLmljb24tc3RhcjpiZWZvcmUgeyBjb250ZW50OiAnXFxlODI5JzsgfSAvKiAn7qCpJyAqL1xuLmljb24tY2hpbGQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTgyYSc7IH0gLyogJ+6gqicgKi9cbi5pY29uLWNhbmNlbC1jaXJjbGVkOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MmInOyB9IC8qICfuoKsnICovXG4uaWNvbi1vay1jaXJjbGVkOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MmMnOyB9IC8qICfuoKwnICovXG4uaWNvbi1oZWxwLWNpcmNsZWQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTgyZCc7IH0gLyogJ+6grScgKi9cbi5pY29uLWluZm8tY2lyY2xlZDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODJlJzsgfSAvKiAn7qCuJyAqL1xuLmljb24tdGh1bWJzLXVwLWFsdDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODJmJzsgfSAvKiAn7qCvJyAqL1xuLmljb24tY29nOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MzAnOyB9IC8qICfuoLAnICovXG4uaWNvbi1jb2ctYWx0OmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MzEnOyB9IC8qICfuoLEnICovXG4uaWNvbi1wbGF5LWNpcmNsZWQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTgzMic7IH0gLyogJ+6gsicgKi9cbi5pY29uLXBsYXk6YmVmb3JlIHsgY29udGVudDogJ1xcZTgzMyc7IH0gLyogJ+6gsycgKi9cbi5pY29uLWRpYW1vbmQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTgzNCc7IH0gLyogJ+6gtCcgKi9cbi5pY29uLWFuZ2xlLXJpZ2h0OmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4MzUnOyB9IC8qICfuoLUnICovXG4uaWNvbi1wdXp6bGU6YmVmb3JlIHsgY29udGVudDogJ1xcZTgzNic7IH0gLyogJ+6gticgKi9cbi5pY29uLXBlbmNpbDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODM3JzsgfSAvKiAn7qC3JyAqL1xuLmljb24tbGluazpiZWZvcmUgeyBjb250ZW50OiAnXFxlODM4JzsgfSAvKiAn7qC4JyAqL1xuLmljb24tbGluay1leHQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTgzOSc7IH0gLyogJ+6guScgKi9cbi5pY29uLWZsYWc6YmVmb3JlIHsgY29udGVudDogJ1xcZTgzYSc7IH0gLyogJ+6guicgKi9cbi5pY29uLXBpY3R1cmU6YmVmb3JlIHsgY29udGVudDogJ1xcZTgzYic7IH0gLyogJ+6guycgKi9cbi5pY29uLW1haWwtc3F1YXJlZDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODNjJzsgfSAvKiAn7qC8JyAqL1xuLmljb24tbWFpbC1hbHQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTgzZCc7IH0gLyogJ+6gvScgKi9cbi5pY29uLWNsb2NrOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4M2UnOyB9IC8qICfuoL4nICovXG4uaWNvbi1saWdodGJ1bGI6YmVmb3JlIHsgY29udGVudDogJ1xcZTgzZic7IH0gLyogJ+6gvycgKi9cbi5pY29uLWF3YXJkOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4NDAnOyB9IC8qICfuoYAnICovXG4uaWNvbi1mbGFzaDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODQxJzsgfSAvKiAn7qGBJyAqL1xuLmljb24tc3VuOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4NDInOyB9IC8qICfuoYInICovXG4uaWNvbi1nbG9iZTpiZWZvcmUgeyBjb250ZW50OiAnXFxlODQzJzsgfSAvKiAn7qGDJyAqL1xuLmljb24tY2lyY2xlOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4NDQnOyB9IC8qICfuoYQnICovXG4uaWNvbi1jaXJjbGUtbm90Y2g6YmVmb3JlIHsgY29udGVudDogJ1xcZTg0NSc7IH0gLyogJ+6hhScgKi9cbi5pY29uLWN1YmVzOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4NDYnOyB9IC8qICfuoYYnICovXG4uaWNvbi1jdWJlOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4NDcnOyB9IC8qICfuoYcnICovXG4uaWNvbi10cmVlOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4NDgnOyB9IC8qICfuoYgnICovXG4uaWNvbi1kYXRhYmFzZTpiZWZvcmUgeyBjb250ZW50OiAnXFxlODQ5JzsgfSAvKiAn7qGJJyAqL1xuLmljb24tbGlmZWJ1b3k6YmVmb3JlIHsgY29udGVudDogJ1xcZTg0YSc7IH0gLyogJ+6hiicgKi9cbi5pY29uLXVzZXItbWQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTg0Yic7IH0gLyogJ+6hiycgKi9cbi5pY29uLW1vdG9yY3ljbGU6YmVmb3JlIHsgY29udGVudDogJ1xcZTg0Yyc7IH0gLyogJ+6hjCcgKi9cbi5pY29uLXJpZ2h0LWNpcmNsZWQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTg0ZCc7IH0gLyogJ+6hjScgKi9cbi5pY29uLWFuZ2xlLWRvdWJsZS1yaWdodDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODRlJzsgfSAvKiAn7qGOJyAqL1xuLmljb24tcmlnaHQtZGlyOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4NGYnOyB9IC8qICfuoY8nICovXG4uaWNvbi1yaWdodC1vcGVuOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4NTAnOyB9IC8qICfuoZAnICovXG4uaWNvbi1tZW51OmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4NTEnOyB9IC8qICfuoZEnICovXG4uaWNvbi1waG9uZS1zcXVhcmVkOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4NTInOyB9IC8qICfuoZInICovXG4uaWNvbi1waG9uZTpiZWZvcmUgeyBjb250ZW50OiAnXFxlODUzJzsgfSAvKiAn7qGTJyAqL1xuLmljb24tcnNzLXNxdWFyZWQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTg1NCc7IH0gLyogJ+6hlCcgKi9cbi5pY29uLWZpbGUtcGRmOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4NTUnOyB9IC8qICfuoZUnICovXG4uaWNvbi1kb2MtdGV4dC1pbnY6YmVmb3JlIHsgY29udGVudDogJ1xcZTg1Nic7IH0gLyogJ+6hlicgKi9cbi5pY29uLWRvYy1pbnY6YmVmb3JlIHsgY29udGVudDogJ1xcZTg1Nyc7IH0gLyogJ+6hlycgKi9cbi5pY29uLWJlbGw6YmVmb3JlIHsgY29udGVudDogJ1xcZTg1OCc7IH0gLyogJ+6hmCcgKi9cbi5pY29uLXF1b3RlLWxlZnQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTg1OSc7IH0gLyogJ+6hmScgKi9cbi5pY29uLXF1b3RlLXJpZ2h0OmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4NWEnOyB9IC8qICfuoZonICovXG4uaWNvbi1wcmludDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODViJzsgfSAvKiAn7qGbJyAqL1xuLmljb24tYXR0ZW50aW9uOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4NWMnOyB9IC8qICfuoZwnICovXG4uaWNvbi1hdHRlbnRpb24tY2lyY2xlZDpiZWZvcmUgeyBjb250ZW50OiAnXFxlODVkJzsgfSAvKiAn7qGdJyAqL1xuLmljb24tZmxhZy1lbXB0eTpiZWZvcmUgeyBjb250ZW50OiAnXFxlODVlJzsgfSAvKiAn7qGeJyAqL1xuLmljb24tZmxhZy1jaGVja2VyZWQ6YmVmb3JlIHsgY29udGVudDogJ1xcZTg1Zic7IH0gLyogJ+6hnycgKi9cbi5pY29uLWV5ZTpiZWZvcmUgeyBjb250ZW50OiAnXFxlODYwJzsgfSAvKiAn7qGgJyAqL1xuLmljb24tcGluOmJlZm9yZSB7IGNvbnRlbnQ6ICdcXGU4NjEnOyB9IC8qICfuoaEnICovXG4uaWNvbi1zZWFyY2g6YmVmb3JlIHsgY29udGVudDogJ1xcZTg2Mic7IH0gLyogJ+6hoicgKi9cbiIsIlxuLy8gRm9ybXMgc3R1ZmYuXG4ubWVzc2FnZXMge1xuICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcbiAgbWFyZ2luLWJvdHRvbTogJGRtcmc7XG4gIHBhZGRpbmc6ICRkbXJnO1xuXG4gICYuZXJyb3IgeyBiYWNrZ3JvdW5kOiBsaWdodGVuKCRyZWQsIDYwKTsgY29sb3I6ICRyZWQ7IH1cbiAgJi5zdWNjZXNzIHsgYmFja2dyb3VuZDogbGlnaHRlbigkZ3JlZW4sIDUwKTsgY29sb3I6ICRncmVlbjsgfVxuXG4gIHVsLCBsaSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cblxuICB1bCB7XG4gICAgbWFyZ2luLWxlZnQ6ICRkbXJnO1xuICB9XG59XG5cbmxhYmVsIHsgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luOiAkZG1yZyAwIDAgMDtcbiAgcGFkZGluZzogMDtcblxuICAmLmNvbnRhY3Qge1xuICAgIGRpc3BsYXk6IG5vbmU7XG5cbiAgICAubWVzc2FnZXMgeyBkaXNwbGF5OiBub25lOyB9XG5cbiAgICAuZm9ybS1pdGVtIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgbWFyZ2luLWJvdHRvbTogJG1yZztcbiAgICB9XG5cbiAgICBsYWJlbCB7IGRpc3BsYXk6IG5vbmU7IH1cblxuICAgIGlucHV0LFxuICAgIHNlbGVjdCxcbiAgICB0ZXh0YXJlYSB7XG4gICAgICBjb2xvcjogJGdyYXktZGFyaztcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICBmb250LXNpemU6ICRiYXNlICogMS4xNTtcblxuICAgICAgQGluY2x1ZGUgbWVkaWEoXCI8PW1kXCIpIHtcbiAgICAgICAgZm9udC1zaXplOiAkYmFzZSAqIDEuMTU7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjM7XG4gICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogJG1yZztcblxuICAgICAgJjpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJGJsdWUsIDEwJSk7IH1cbiAgICB9XG4gIH1cbn1cbiIsIlxuLnByb2plY3RzLWxpc3Qge1xuICBAaW5jbHVkZSBjbGVhcmZpeCgpO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG5cbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24tY29udGVudDogZmxleC1lbmQ7XG5cbiAgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEoJz5tZCcpIHtcbiAgICAgIHdpZHRoOiAyNSU7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAkbXJnO1xuICAgICAgcGFkZGluZy1ib3R0b206ICRtcmc7XG5cbiAgICAgICY6bnRoLWNoaWxkKDQpIHsgcGFkZGluZy1yaWdodDogMDsgfVxuICAgIH1cblxuICAgIEBpbmNsdWRlIG1lZGlhKCc8PW1kJywnPnNtJykge1xuICAgICAgd2lkdGg6IDMzLjMzMzMlO1xuICAgICAgcGFkZGluZy1yaWdodDogJG1yZztcbiAgICAgIHBhZGRpbmctYm90dG9tOiAkbXJnO1xuXG4gICAgICAmOm50aC1jaGlsZCgzKSB7IHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgICB9XG5cbiAgICBAaW5jbHVkZSBtZWRpYSgnPD1zbScpIHtcbiAgICAgIHdpZHRoOiAxODBweDtcbiAgICAgIG1hcmdpbjogJGhtcmcgYXV0bztcbiAgICB9XG4gIH1cblxuICBhIHtcbiAgICBiYWNrZ3JvdW5kOiAkZ3JheS00O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdGV4dC1pbmRlbnQ6IC05OTk5cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXktZGFya2VyO1xuICAgIEBpbmNsdWRlIGdyYXlzY2FsZSgxMDApO1xuXG4gICAgJjpob3ZlciB7IEBpbmNsdWRlIGdyYXlzY2FsZSgwKTsgfVxuXG4gICAgJi5zb2NoYS1kZXYtd2hpdGUtbGFiZWwgeyBAaW5jbHVkZSBzcHJpdGUyeCgkc29jaGEtZGV2LXdoaXRlLWxhYmVsLW9yaWcsICRzb2NoYS1kZXYtd2hpdGUtbGFiZWwtb3JpZy0yeCk7IH1cbiAgICAmLnNjaWVuY2UgeyBAaW5jbHVkZSBzcHJpdGUyeCgkYWFhcy1zY2llbmNlLCAkYWFhcy1zY2llbmNlLTJ4KTsgfVxuICAgICYuZGlzY292ZXJ5LWVkdWNhdGlvbiB7IEBpbmNsdWRlIHNwcml0ZTJ4KCRkaXNjb3ZlcnktZWR1Y2F0aW9uLCAkZGlzY292ZXJ5LWVkdWNhdGlvbi0yeCk7IH1cbiAgICAmLnJlcGVxdWl0eSB7IEBpbmNsdWRlIHNwcml0ZTJ4KCRyZXBlcXVpdHksICRyZXBlcXVpdHktMngpOyB9XG4gICAgJi5mY2MtZ292IHsgQGluY2x1ZGUgc3ByaXRlMngoJHNlYWJvdXJuZS1mY2MsICRzZWFib3VybmUtZmNjLTJ4KTsgfVxuICAgICYudGhlLW5hdGlvbmFsLXByZXNzLWNsdWIgeyBAaW5jbHVkZSBzcHJpdGUyeCgkaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViLCAkaG9tZS1mcm9udC1jb21tdW5pY2F0aW9ucy1uYXRpb25hbC1wcmVzcy1jbHViLTJ4KTsgfVxuICAgICYudGhlLWNvb2stcG9saXRpY2FsLXJlcG9ydCB7IEBpbmNsdWRlIHNwcml0ZTJ4KCRob21lLWZyb250LWNvbW11bmljYXRpb25zLWNvb2stcG9saXRpY2FsLXJlcG9ydCwgJGhvbWUtZnJvbnQtY29tbXVuaWNhdGlvbnMtY29vay1wb2xpdGljYWwtcmVwb3J0LTJ4KTsgfVxuICAgICYuY2hhbm5lbC1kZW1vY3JhY3kgeyBAaW5jbHVkZSBzcHJpdGUyeCgkaXdzLWNoYW5uZWwtZGVtb2NyYWN5LCAkaXdzLWNoYW5uZWwtZGVtb2NyYWN5LTJ4KTsgfVxuICB9XG59XG5cblxuI21vZGFsIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgYmFja2dyb3VuZDogcmdiYSgkYmxhY2ssIDAuNSk7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwO1xuICB6LWluZGV4OiAxMTU7XG59XG5cbi5tb2RhbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cbiAgYm9yZGVyLXJhZGl1czogJGJvcmRlci1yYWRpdXM7XG4gIGJhY2tncm91bmQ6ICR3aGl0ZTtcbiAgY29sb3I6ICRiZztcbiAgZm9udC1zaXplOiAkYmFzZTtcbiAgbWFyZ2luOiAkZG1yZyBhdXRvO1xuICBwYWRkaW5nOiAkZG1yZztcbiAgbWF4LXdpZHRoOiAje21hcC1nZXQoJGJyZWFrcG9pbnRzLCAnbGcnKX07XG5cbiAgaDMgeyB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuICBhIHsgY29sb3I6ICRibHVlOyB9XG5cbiAgLndoaXRlLWxhYmVsLWZsYWcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBoZWlnaHQ6IDEyNnB4O1xuICAgIHdpZHRoOiAxMjZweDtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gIH1cblxuICAuZmxhZyB7XG4gICAgQGluY2x1ZGUgcm90YXRlKC00NWRlZyk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJiMmIyYjtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGhlaWdodDogMzZweDtcbiAgICBsZWZ0OiAtMzlweDtcbiAgICBsaW5lLWhlaWdodDogMzZweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgdG9wOiAzMXB4O1xuICAgIHdpZHRoOiAxNzJweDtcbiAgfVxuXG4gICYud2hpdGUtbGFiZWwge1xuICAgIEBpbmNsdWRlIG1lZGlhKFwiPm1kXCIpIHtcbiAgICAgIHdpZHRoOiA0MCU7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICBib3R0b206IGF1dG87XG4gICAgfVxuXG4gICAgLmFscGhhIHsgZGlzcGxheTogbm9uZTsgfVxuICAgIC5iZXRhIHsgd2lkdGg6IDEwMCU7IH1cbiAgfVxuXG4gIC5hbHBoYSB7XG4gICAgaW1nIHtcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbiAgfVxuXG5cbiAgQGluY2x1ZGUgbWVkaWEoXCI+bWRcIikge1xuICAgIC5hbHBoYSB7XG4gICAgICB3aWR0aDogNjYlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgfVxuXG4gICAgLmJldGEge1xuICAgICAgd2lkdGg6IDM0JTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBwYWRkaW5nLWxlZnQ6ICRkbXJnO1xuICAgIH1cbiAgfVxuXG4gIEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogJG1yZztcbiAgICBwYWRkaW5nOiAkbXJnO1xuXG4gICAgLmJldGEgeyBwYWRkaW5nOiAkbXJnIDAgMCAwOyB9XG4gIH1cblxufVxuIiwiXG5AbWl4aW4gZ3JheXNjYWxlKCRwZXJjZW50OiAnMTAwJScpIHtcbiAgZmlsdGVyOiBncmF5c2NhbGUoJHBlcmNlbnQpO1xuICAtd2Via2l0LWZpbHRlcjogZ3JheXNjYWxlKCRwZXJjZW50KTtcbiAgLW1vei1maWx0ZXI6IGdyYXlzY2FsZSgkcGVyY2VudCk7XG4gIGZpbHRlcjogZ3JheXNjYWxlKCRwZXJjZW50KTtcbiAgZmlsdGVyOiBncmF5O1xuICAtd2Via2l0LWZpbHRlcjogZ3JheXNjYWxlKCRwZXJjZW50IC8gMTAwKTtcbn1cblxuQG1peGluIHJvdGF0ZSgkYW5nbGU6ICctNDVkZWcnKSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKCRhbmdsZSk7XG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgkYW5nbGUpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKCRhbmdsZSk7XG59XG4iLCIvLyBzcHJpdGUgbWl4aW5zLlxuXG5cbkBtaXhpbiBzcHJpdGUtYmctc2l6ZSgkc3ByaXRlKSB7XG4gICRzcHJpdGUtdzogbnRoKCRzcHJpdGUsIDUpO1xuICAkc3ByaXRlLWg6IG50aCgkc3ByaXRlLCA2KTtcbiAgYmFja2dyb3VuZC1zaXplOiAkc3ByaXRlLXcgICRzcHJpdGUtaDtcbn1cblxuQG1peGluIHNwcml0ZS1odygkc3ByaXRlKSB7XG4gIHdpZHRoOiBudGgoJHNwcml0ZSwgNSk7XG4gIGhlaWdodDogbnRoKCRzcHJpdGUsIDYpO1xufVxuXG5AbWl4aW4gc3ByaXRlLXBvc2l0aW9uKCRzcHJpdGUpIHtcbiAgJHNwcml0ZS1vZmZzZXQteDogbnRoKCRzcHJpdGUsIDMpO1xuICAkc3ByaXRlLW9mZnNldC15OiBudGgoJHNwcml0ZSwgNCk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246ICRzcHJpdGUtb2Zmc2V0LXggICRzcHJpdGUtb2Zmc2V0LXk7XG59XG5cbkBtaXhpbiBzcHJpdGUtaW1hZ2UoJHNwcml0ZSkge1xuICAkc3ByaXRlLWltYWdlOiBudGgoJHNwcml0ZSwgOSk7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vaW1hZ2VzLycgKyAjeyRzcHJpdGUtaW1hZ2V9KTtcbn1cblxuQG1peGluIHNwcml0ZSgkc3ByaXRlKSB7XG4gIEBpbmNsdWRlIHNwcml0ZS1pbWFnZSgkc3ByaXRlKTtcbiAgQGluY2x1ZGUgc3ByaXRlLXBvc2l0aW9uKCRzcHJpdGUpO1xuICBAaW5jbHVkZSBzcHJpdGUtaHcoJHNwcml0ZSk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG5cbi8vIGZvciByZXRpbmEgc3ByaXRlc1xuQG1peGluIHNwcml0ZTJ4KCRzcHJpdGUsICRzcHJpdGUyeCkge1xuICBAaW5jbHVkZSBzcHJpdGUtaW1hZ2UoJHNwcml0ZSk7XG4gIEBpbmNsdWRlIHNwcml0ZS1wb3NpdGlvbigkc3ByaXRlKTtcbiAgQGluY2x1ZGUgc3ByaXRlLWh3KCRzcHJpdGUpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuXG4gIEBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIHtcbiAgICBAaW5jbHVkZSBzcHJpdGUtaW1hZ2UoJHNwcml0ZTJ4KTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6ICRzcHJpdGVzaGVldC13aWR0aCAkc3ByaXRlc2hlZXQtaGVpZ2h0O1xuICB9XG59XG4iLCJcbi5zdHJpcGUuaGVybyB7XG4gIHBhZGRpbmc6IDA7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciB0b3A7XG4gIGJvcmRlci10b3A6IHNvbGlkIDFweCAkYmxhY2s7XG4gIGJvcmRlci1ib3R0b206IHNvbGlkIDFweCAkYmxhY2s7XG5cbiAgQGluY2x1ZGUgbWVkaWEoJz5tZCcpIHtcbiAgICBoZWlnaHQ6IDUwMHB4O1xuICB9XG5cbiAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDEwMCU7XG4gIH1cblxuICBib2R5LmZyb250ICYge1xuICAgIGJvcmRlci10b3A6IHNvbGlkIDFweCAkYmxhY2s7XG4gICAgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4ICRncmF5LWxpZ2h0O1xuICAgIG1hcmdpbi10b3A6ICRkbXJnO1xuICAgIHBhZGRpbmctdG9wOiAkZG1yZztcbiAgfVxuXG4gIC5oZXJvLWludHJvIHtcbiAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cyAqIDI7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAuNjApO1xuICAgIG1hcmdpbi10b3A6ICgkbXJnICogNik7XG4gICAgcGFkZGluZzogJG1yZyAkZG1yZztcblxuICAgIEBpbmNsdWRlIG1lZGlhKCc+bWQnKSB7XG4gICAgICB3aWR0aDogNzAlO1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICBmb250LXNpemU6ICRiYXNlICogMS44O1xuICAgIH1cblxuICAgIEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuICAgICAgbWFyZ2luOiAkZG1yZztcbiAgICB9XG4gIH1cbn1cbiIsIi53b3JrZmxvdyB7XG4gIC5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogJG1heC13aWR0aDtcbiAgfVxuXG4gIGZvb3RlciAuY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6ICRtaWQtd2lkdGg7XG4gIH1cbn1cblxuLmNvbWljLWJhbm5lciB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvY29taWNzL2NvbWljLWJnLTAwLnBuZyk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcCBsZWZ0O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogJGRtcmcgMCAwIDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGFsaWduLWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBhbGlnbi1pdGVtczogdG9wO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgQGluY2x1ZGUgbWVkaWEoXCI+bWRcIikge1xuICAgIG1hcmdpbjogKCRkbXJnICogMikgMCAwIDA7XG4gICAgYm9yZGVyOiBzb2xpZCAxcHggJGdyYXktNDtcbiAgfVxuXG4gIC5pc3N1ZSB7XG4gICAgJGhlaWdodDogMjUwcHg7XG4gICAgJGhlaWdodC1wdWJsaXNoZXI6IDY1cHg7XG5cbiAgICBAaW5jbHVkZSBtZWRpYShcIjw9bWRcIikgeyBkaXNwbGF5OiBub25lOyB9XG4gICAgd2lkdGg6IDE3JTtcbiAgICBiYWNrZ3JvdW5kOiAkZ3JheS1kYXJrO1xuICAgIGJvcmRlci1yaWdodDogc29saWQgMXB4ICRncmF5LTQ7XG4gICAgaGVpZ2h0OiAkaGVpZ2h0O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmb250LXNpemU6ICRiYXNlO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAlcG9zaXRpb24ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwYWRkaW5nOiAkbXJnIDA7XG4gICAgfVxuXG4gICAgLm51bWJlcnMge1xuICAgICAgQGV4dGVuZCAlcG9zaXRpb247XG4gICAgICB0b3A6IDA7XG4gICAgICBoZWlnaHQ6ICgkaGVpZ2h0IC0gJGhlaWdodC1wdWJsaXNoZXIpO1xuXG4gICAgICAucHJpY2Uge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgY29sb3I6ICRncmF5LWxpZ2h0ZXI7XG4gICAgICAgIGZvbnQtc2l6ZTogJGJhc2UgKiAzLjI7XG4gICAgICAgIHBhZGRpbmc6ICRkbXJnIDA7XG4gICAgICB9XG5cbiAgICAgIC5kYXRlIHtcbiAgICAgICAgQGV4dGVuZCAlcG9zaXRpb247XG4gICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICBsZWZ0OiBhdXRvO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBjb2xvcjogJGdyYXktNDtcbiAgICAgICAgcGFkZGluZzogJGhtcmcgJG1yZztcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKC4uL2ltYWdlcy9jb21pY3MvY29taWMtYmctMDIucG5nKSByZXBlYXQgMCAwICR3aGl0ZTtcblxuICAgICAgICAubnVtYmVyIHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBmb250LXNpemU6ICRiYXNlICogMS42O1xuICAgICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC5wdWJsaXNoZXIge1xuICAgICAgQGV4dGVuZCAlcG9zaXRpb247XG4gICAgICBib3R0b206IDA7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltYWdlcy9zb2NoYS1kZXYucG5nJykgbm8tcmVwZWF0IDAgMDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICBib3JkZXItdG9wOiBzb2xpZCAxcHggJGdyYXktNDtcbiAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgaGVpZ2h0OiAkaGVpZ2h0LXB1Ymxpc2hlcjtcbiAgICB9XG4gIH1cblxuICAudGl0bGUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmb250LXNpemU6ICRiYXNlICogMjtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEoXCI+bWRcIikge1xuICAgICAgd2lkdGg6IDgzJTtcbiAgICAgIHBhZGRpbmc6ICgkZG1yZyAqIDIpIDA7XG4gICAgICBmb250LXNpemU6ICRiYXNlICogMy42O1xuICAgIH1cblxuICAgIC50b29sdGlwIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG5cbiAgICAgIC50aXAgeyBmb250LXdlaWdodDogbm9ybWFsOyB9XG4gICAgfVxuXG4gICAgLmF1dGhvcml0eSB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4uL2ltYWdlcy9jb21pY3MvY29taWNzLWNvZGUtYXV0aG9yaXR5LmpwZycpIG5vLXJlcGVhdCAwIDA7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgd2lkdGg6IDY1cHg7XG4gICAgICBoZWlnaHQ6IDc5cHg7XG4gICAgICBtYXJnaW46ICRkbXJnO1xuXG4gICAgICBAaW5jbHVkZSBtZWRpYShcIjxtZFwiKSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbm9sLmNvbWljIHtcbiAgZm9udC1zaXplOiAkYmFzZSAtIDM7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltYWdlcy9jb21pY3MvY29taWMtYmctMDEucG5nKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wIGxlZnQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcbiAgY29sb3I6ICRncmF5LWRhcmtlcjtcbiAgcGFkZGluZzogJG1yZztcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24tY29udGVudDogZmxleC1lbmQ7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIEBpbmNsdWRlIG1lZGlhKFwiPm1kXCIpIHtcbiAgICBib3JkZXI6IHNvbGlkIDFweCAkZ3JheS00O1xuICAgIHBhZGRpbmc6ICRtcmc7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gIH1cblxuICA+IGxpIHtcbiAgICBAaW5jbHVkZSBjbGVhcmZpeCgpO1xuICAgIGJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9pbWFnZXMvY29taWNzL2NvbWljLWJnLTAyLnBuZyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgbGVmdDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG4gICAgYm9yZGVyOiBzb2xpZCAxcHggJGdyYXktbGlnaHQ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1ib3R0b206ICRtcmc7XG4gICAgcGFkZGluZzogJG1yZztcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEoXCI+bWRcIikge1xuICAgICAgd2lkdGg6IGNhbGMoMzMuMzMzMyUgLSAjeyRtcmd9KjIpO1xuICAgICAgbWluLWhlaWdodDogMzAwcHg7XG4gICAgICBtYXJnaW46ICRtcmc7XG4gICAgfVxuXG4gICAgLy8gXCJBZ2UgdGhlIHBhcGVyXCIuXG4gICAgJjpudGgtY2hpbGQoMm4rMSkge1xuICAgICAgYm9yZGVyLWNvbG9yOiAkZ3JheS1saWdodGVyO1xuICAgICAgLm5hcnJhdG9yIHsgYm9yZGVyLWNvbG9yOiAkZ3JheS1saWdodGVyOyB9XG4gICAgfVxuXG4gICAgJjpudGgtY2hpbGQoNG4pIHtcbiAgICAgIGJhY2tncm91bmQ6ICR3aGl0ZTtcbiAgICB9XG5cbiAgICAmOm50aC1jaGlsZCg2bikge1xuICAgICAgYm9yZGVyOiBzb2xpZCAxcHggbGlnaHRlbigkZ3JheSwgMzAlKTtcbiAgICB9XG5cbiAgICBlbSxcbiAgICBzdHJvbmcsXG4gICAgLnRvb2x0aXAge1xuICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgIH1cbiAgfVxuXG4gIHVsIHtcbiAgICBtYXJnaW46ICRkbXJnIDAgMCAkZG1yZztcbiAgICBwYWRkaW5nOiAwO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG5cbiAgICAmLmJ1bGxldHMge1xuICAgICAgbGlzdC1zdHlsZTogZGlzYztcbiAgICB9XG5cbiAgICBsaSB7XG4gICAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7XG4gICAgICBtYXJnaW46IDAgMCAkbXJnIDA7XG5cbiAgICAgICY6bGFzdC1jaGlsZCB7IG1hcmdpbjogMDsgfVxuICAgIH1cbiAgfVxuXG4gIGltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gIH1cblxuICBpbWcuYXZhdGFyIHtcbiAgICBib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cyAqIDI7XG4gICAgd2lkdGg6ICgkbXJnICogNSk7XG4gICAgaGVpZ2h0OiAoJG1yZyAqIDUpO1xuICAgIG1hcmdpbjogMCAkbXJnIDAgMDtcbiAgfVxuXG4gIGltZy5pbGx1c3RyYXRpb24ge1xuICAgIEBpbmNsdWRlIGNsZWFyZml4KCk7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAkbXJnIGF1dG87XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICAmLnRvcCB7IG1hcmdpbi10b3A6IDA7IH1cblxuICAgICYuYm90dG9tIHtcbiAgICAgIEBpbmNsdWRlIG1lZGlhKFwiPm1kXCIpIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIHotaW5kZXg6IDA7XG4gICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICBtYXJnaW46IDAgMCAkbXJnIDA7XG4gICAgICB9XG5cbiAgICAgIEBpbmNsdWRlIG1lZGlhKFwiPD1tZFwiKSB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLm5vLWltZyBpbWcgeyBkaXNwbGF5OiBub25lOyB9XG5cbiAgLnRvb2x0aXAge1xuICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRncmF5LWxpZ2h0O1xuXG4gICAgLnRpcCB7XG4gICAgICBib3JkZXItY29sb3I6ICRncmF5O1xuICAgICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgfVxuXG4gICAgJi5uby1pbWcsXG4gICAgJi5wcm9qZWN0IHtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gICAgfVxuICB9XG5cbiAgLmJsdWUgeyBjb2xvcjogZGFya2VuKCRibHVlLCAxMCUpOyB9XG4gIC5yZWQgeyBjb2xvcjogJHJlZDsgfVxuICAuZ3JlZW4geyBjb2xvcjogZGFya2VuKCRncmVlbiwgNSUpOyB9XG4gIC5ncmF5IHsgY29sb3I6ICRncmF5LWxpZ2h0OyB9XG4gIC5vcmFuZ2UgeyBjb2xvcjogZGFya2VuKCRvcmFuZ2UsIDI1JSk7IH1cbiAgLnB1cnBsZSB7IGNvbG9yOiBkYXJrZW4oJHB1cnBsZSwgMTAlKTsgfVxuXG4gIHN0cm9uZyB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgfVxuXG4gIC5hY3RvciB7XG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgfVxuXG4gIC5icmFuZCB7XG4gICAgY29sb3I6ICRncmF5LWRhcms7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG5cbiAgICAmLmFjdG9yIHtcbiAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIH1cbiAgfVxuXG5cbiAgLm5hcnJhdG9yIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7XG5cbiAgICBAaW5jbHVkZSBtZWRpYShcIj5tZFwiKSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICB6LWluZGV4OiAxO1xuICAgICAgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4ICRncmF5LWxpZ2h0O1xuICAgICAgcGFkZGluZzogJG1yZztcbiAgICB9XG4gIH1cblxuICAuaW5kZXgge1xuICAgIGJvcmRlci1yYWRpdXM6ICRib3JkZXItcmFkaXVzICogNDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogJGRtcmc7XG4gICAgaGVpZ2h0OiAkZG1yZztcbiAgICBtYXJnaW46ICRtcmc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMDtcbiAgICByaWdodDogMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbGluZS1oZWlnaHQ6IDI7XG4gICAgZm9udC1zaXplOiAkYmFzZSAtIDU7XG4gICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgIGJvcmRlcjogc29saWQgMXB4ICRncmF5LWxpZ2h0ZXI7XG4gICAgY29sb3I6ICRncmF5LWxpZ2h0O1xuXG4gICAgQGluY2x1ZGUgbWVkaWEoXCI8PW1kXCIpIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG5cbn1cbiIsIlxuLmFubm91bmNlbWVudCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgei1pbmRleDogMTEwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICBtaW4taGVpZ2h0OiAzNTBweDtcbiAgbWFyZ2luOiAxNDVweCAwIDAgMDtcbiAgcGFkZGluZy1ib3R0b206IDQwcHg7XG4gIGJhY2tncm91bmQ6IHVybCgnLi4vaW1hZ2VzL3BhcGVyLnBuZycpIG5vLXJlcGVhdCA1MCUgMCB0cmFuc3BhcmVudDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgY29sb3I6ICRncmF5LWRhcms7XG5cbiAgQGluY2x1ZGUgbWVkaWEoJzw9bWQnKSB7XG4gICAgbWluLWhlaWdodDogNDIwcHg7XG4gIH1cblxuICAtd2Via2l0LXRyYW5zaXRpb246IG1hcmdpbi10b3AgNjAwbXM7XG4gIHRyYW5zaXRpb246IG1hcmdpbi10b3AgNjAwbXM7XG4gICYuc3RpY2t5IHtcbiAgICBtYXJnaW4tdG9wOiA0NXB4O1xuICB9XG5cbiAgLmZ1bGx3aWR0aCB7XG4gICAgcGFkZGluZy10b3A6ICRtcmc7XG4gIH1cblxuICAudGFvdGkge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiA2MDBweDtcbiAgICBtaW4taGVpZ2h0OiA5M3B4O1xuICAgIGJhY2tncm91bmQ6IHVybCgnLi4vaW1hZ2VzL3Rhb3RpLnBuZycpIG5vLXJlcGVhdCAwIDAgdHJhbnNwYXJlbnQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiAxMDAlIGF1dG87XG4gICAgbWFyZ2luOiAwIDAgJGRtcmcgMDtcblxuICAgIEBpbmNsdWRlIG1lZGlhKCc8PW1kJykge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICBtaW4taGVpZ2h0OiAxMTVweDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJSBhdXRvO1xuICAgICAgbWFyZ2luOiAxcmVtIDA7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgbWVkaWEoJzw9NDAwcHgnKSB7XG4gICAgICBtaW4taGVpZ2h0OiA1MHB4O1xuICAgIH1cbiAgfVxuXG4gIHAge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuXG4gIGEge1xuICAgIGNvbG9yOiAkcmVkO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
